//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/eric/repos/360-j2objc/joda-time/build/mainTranslationExtraction/org/joda/time/chrono/IslamicChronology.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IslamicChronology")
#ifdef RESTRICT_IslamicChronology
#define INCLUDE_ALL_IslamicChronology 0
#else
#define INCLUDE_ALL_IslamicChronology 1
#endif
#undef RESTRICT_IslamicChronology

#if !defined (OrgJodaTimeChronoIslamicChronology_) && (INCLUDE_ALL_IslamicChronology || defined(INCLUDE_OrgJodaTimeChronoIslamicChronology))
#define OrgJodaTimeChronoIslamicChronology_

#define RESTRICT_BasicChronology 1
#define INCLUDE_OrgJodaTimeChronoBasicChronology 1
#include "BasicChronology.h"

@class OrgJodaTimeChronoAssembledChronology_Fields;
@class OrgJodaTimeChronoIslamicChronology_LeapYearPatternType;
@class OrgJodaTimeChronology;
@class OrgJodaTimeDateTimeZone;

@interface OrgJodaTimeChronoIslamicChronology : OrgJodaTimeChronoBasicChronology

#pragma mark Public

- (jboolean)isEqual:(id)obj;

+ (OrgJodaTimeChronoIslamicChronology *)getInstance;

+ (OrgJodaTimeChronoIslamicChronology *)getInstanceWithOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)zone;

+ (OrgJodaTimeChronoIslamicChronology *)getInstanceWithOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)zone
                    withOrgJodaTimeChronoIslamicChronology_LeapYearPatternType:(OrgJodaTimeChronoIslamicChronology_LeapYearPatternType *)leapYears;

+ (OrgJodaTimeChronoIslamicChronology *)getInstanceUTC;

- (OrgJodaTimeChronoIslamicChronology_LeapYearPatternType *)getLeapYearPatternType;

- (NSUInteger)hash;

- (OrgJodaTimeChronology *)withUTC;

- (OrgJodaTimeChronology *)withZoneWithOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)zone;

#pragma mark Protected

- (void)assembleWithOrgJodaTimeChronoAssembledChronology_Fields:(OrgJodaTimeChronoAssembledChronology_Fields *)fields;

#pragma mark Package-Private

- (instancetype)initWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)base
                                       withId:(id)param
withOrgJodaTimeChronoIslamicChronology_LeapYearPatternType:(OrgJodaTimeChronoIslamicChronology_LeapYearPatternType *)leapYears;

- (jlong)calculateFirstDayOfYearMillisWithInt:(jint)year;

- (jlong)getApproxMillisAtEpochDividedByTwo;

- (jlong)getAverageMillisPerMonth;

- (jlong)getAverageMillisPerYear;

- (jlong)getAverageMillisPerYearDividedByTwo;

- (jint)getDayOfMonthWithLong:(jlong)millis;

- (jint)getDaysInMonthMax;

- (jint)getDaysInMonthMaxWithInt:(jint)month;

- (jint)getDaysInYearWithInt:(jint)year;

- (jint)getDaysInYearMax;

- (jint)getDaysInYearMonthWithInt:(jint)year
                          withInt:(jint)month;

- (jint)getMaxYear;

- (jint)getMinYear;

- (jint)getMonthOfYearWithLong:(jlong)millis
                       withInt:(jint)year;

- (jlong)getTotalMillisByYearMonthWithInt:(jint)year
                                  withInt:(jint)month;

- (jint)getYearWithLong:(jlong)instant;

- (jlong)getYearDifferenceWithLong:(jlong)minuendInstant
                          withLong:(jlong)subtrahendInstant;

- (jboolean)isLeapYearWithInt:(jint)year;

- (jlong)setYearWithLong:(jlong)instant
                 withInt:(jint)year;

@end

J2OBJC_STATIC_INIT(OrgJodaTimeChronoIslamicChronology)

inline jint OrgJodaTimeChronoIslamicChronology_get_AH();
#define OrgJodaTimeChronoIslamicChronology_AH 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeChronoIslamicChronology, AH, jint)

inline OrgJodaTimeChronoIslamicChronology_LeapYearPatternType *OrgJodaTimeChronoIslamicChronology_get_LEAP_YEAR_15_BASED();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgJodaTimeChronoIslamicChronology_LeapYearPatternType *OrgJodaTimeChronoIslamicChronology_LEAP_YEAR_15_BASED;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeChronoIslamicChronology, LEAP_YEAR_15_BASED, OrgJodaTimeChronoIslamicChronology_LeapYearPatternType *)

inline OrgJodaTimeChronoIslamicChronology_LeapYearPatternType *OrgJodaTimeChronoIslamicChronology_get_LEAP_YEAR_16_BASED();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgJodaTimeChronoIslamicChronology_LeapYearPatternType *OrgJodaTimeChronoIslamicChronology_LEAP_YEAR_16_BASED;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeChronoIslamicChronology, LEAP_YEAR_16_BASED, OrgJodaTimeChronoIslamicChronology_LeapYearPatternType *)

inline OrgJodaTimeChronoIslamicChronology_LeapYearPatternType *OrgJodaTimeChronoIslamicChronology_get_LEAP_YEAR_INDIAN();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgJodaTimeChronoIslamicChronology_LeapYearPatternType *OrgJodaTimeChronoIslamicChronology_LEAP_YEAR_INDIAN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeChronoIslamicChronology, LEAP_YEAR_INDIAN, OrgJodaTimeChronoIslamicChronology_LeapYearPatternType *)

inline OrgJodaTimeChronoIslamicChronology_LeapYearPatternType *OrgJodaTimeChronoIslamicChronology_get_LEAP_YEAR_HABASH_AL_HASIB();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgJodaTimeChronoIslamicChronology_LeapYearPatternType *OrgJodaTimeChronoIslamicChronology_LEAP_YEAR_HABASH_AL_HASIB;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeChronoIslamicChronology, LEAP_YEAR_HABASH_AL_HASIB, OrgJodaTimeChronoIslamicChronology_LeapYearPatternType *)

FOUNDATION_EXPORT OrgJodaTimeChronoIslamicChronology *OrgJodaTimeChronoIslamicChronology_getInstanceUTC();

FOUNDATION_EXPORT OrgJodaTimeChronoIslamicChronology *OrgJodaTimeChronoIslamicChronology_getInstance();

FOUNDATION_EXPORT OrgJodaTimeChronoIslamicChronology *OrgJodaTimeChronoIslamicChronology_getInstanceWithOrgJodaTimeDateTimeZone_(OrgJodaTimeDateTimeZone *zone);

FOUNDATION_EXPORT OrgJodaTimeChronoIslamicChronology *OrgJodaTimeChronoIslamicChronology_getInstanceWithOrgJodaTimeDateTimeZone_withOrgJodaTimeChronoIslamicChronology_LeapYearPatternType_(OrgJodaTimeDateTimeZone *zone, OrgJodaTimeChronoIslamicChronology_LeapYearPatternType *leapYears);

FOUNDATION_EXPORT void OrgJodaTimeChronoIslamicChronology_initWithOrgJodaTimeChronology_withId_withOrgJodaTimeChronoIslamicChronology_LeapYearPatternType_(OrgJodaTimeChronoIslamicChronology *self, OrgJodaTimeChronology *base, id param, OrgJodaTimeChronoIslamicChronology_LeapYearPatternType *leapYears);

FOUNDATION_EXPORT OrgJodaTimeChronoIslamicChronology *new_OrgJodaTimeChronoIslamicChronology_initWithOrgJodaTimeChronology_withId_withOrgJodaTimeChronoIslamicChronology_LeapYearPatternType_(OrgJodaTimeChronology *base, id param, OrgJodaTimeChronoIslamicChronology_LeapYearPatternType *leapYears) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeChronoIslamicChronology *create_OrgJodaTimeChronoIslamicChronology_initWithOrgJodaTimeChronology_withId_withOrgJodaTimeChronoIslamicChronology_LeapYearPatternType_(OrgJodaTimeChronology *base, id param, OrgJodaTimeChronoIslamicChronology_LeapYearPatternType *leapYears);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeChronoIslamicChronology)

#endif

#if !defined (OrgJodaTimeChronoIslamicChronology_LeapYearPatternType_) && (INCLUDE_ALL_IslamicChronology || defined(INCLUDE_OrgJodaTimeChronoIslamicChronology_LeapYearPatternType))
#define OrgJodaTimeChronoIslamicChronology_LeapYearPatternType_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@interface OrgJodaTimeChronoIslamicChronology_LeapYearPatternType : NSObject < JavaIoSerializable > {
 @public
  jbyte index_;
  jint pattern_;
}

#pragma mark Public

- (jboolean)isEqual:(id)obj;

- (NSUInteger)hash;

#pragma mark Package-Private

- (instancetype)initWithInt:(jint)index
                    withInt:(jint)pattern;

- (jboolean)isLeapYearWithInt:(jint)year;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeChronoIslamicChronology_LeapYearPatternType)

FOUNDATION_EXPORT void OrgJodaTimeChronoIslamicChronology_LeapYearPatternType_initWithInt_withInt_(OrgJodaTimeChronoIslamicChronology_LeapYearPatternType *self, jint index, jint pattern);

FOUNDATION_EXPORT OrgJodaTimeChronoIslamicChronology_LeapYearPatternType *new_OrgJodaTimeChronoIslamicChronology_LeapYearPatternType_initWithInt_withInt_(jint index, jint pattern) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeChronoIslamicChronology_LeapYearPatternType *create_OrgJodaTimeChronoIslamicChronology_LeapYearPatternType_initWithInt_withInt_(jint index, jint pattern);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeChronoIslamicChronology_LeapYearPatternType)

#endif

#pragma pop_macro("INCLUDE_ALL_IslamicChronology")
