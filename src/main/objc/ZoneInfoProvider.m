//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/eric/repos/360-j2objc/joda-time/build/mainTranslationExtraction/org/joda/time/tz/ZoneInfoProvider.java
//

#include "DateTimeZone.h"
#include "DateTimeZoneBuilder.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "ZoneInfoProvider.h"
#include "java/io/DataInputStream.h"
#include "java/io/File.h"
#include "java/io/FileInputStream.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/lang/ArrayIndexOutOfBoundsException.h"
#include "java/lang/ClassLoader.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/ref/SoftReference.h"
#include "java/security/AccessController.h"
#include "java/security/PrivilegedAction.h"
#include "java/util/Collections.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/SortedSet.h"
#include "java/util/TreeSet.h"
#include "java/util/concurrent/ConcurrentHashMap.h"

@interface OrgJodaTimeTzZoneInfoProvider () {
 @public
  JavaIoFile *iFileDir_;
  NSString *iResourcePath_;
  JavaLangClassLoader *iLoader_;
  id<JavaUtilMap> iZoneInfoMap_;
  id<JavaUtilSet> iZoneInfoKeys_;
}

- (instancetype)initWithNSString:(NSString *)resourcePath
         withJavaLangClassLoader:(JavaLangClassLoader *)loader
                     withBoolean:(jboolean)favorSystemLoader;

- (JavaIoInputStream *)openResourceWithNSString:(NSString *)name;

- (OrgJodaTimeDateTimeZone *)loadZoneDataWithNSString:(NSString *)id_;

+ (id<JavaUtilMap>)loadZoneInfoMapWithJavaIoInputStream:(JavaIoInputStream *)inArg;

+ (void)readZoneInfoMapWithJavaIoDataInputStream:(JavaIoDataInputStream *)din
                                 withJavaUtilMap:(id<JavaUtilMap>)zimap;

@end

J2OBJC_FIELD_SETTER(OrgJodaTimeTzZoneInfoProvider, iFileDir_, JavaIoFile *)
J2OBJC_FIELD_SETTER(OrgJodaTimeTzZoneInfoProvider, iResourcePath_, NSString *)
J2OBJC_FIELD_SETTER(OrgJodaTimeTzZoneInfoProvider, iLoader_, JavaLangClassLoader *)
J2OBJC_FIELD_SETTER(OrgJodaTimeTzZoneInfoProvider, iZoneInfoMap_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(OrgJodaTimeTzZoneInfoProvider, iZoneInfoKeys_, id<JavaUtilSet>)

__attribute__((unused)) static void OrgJodaTimeTzZoneInfoProvider_initWithNSString_withJavaLangClassLoader_withBoolean_(OrgJodaTimeTzZoneInfoProvider *self, NSString *resourcePath, JavaLangClassLoader *loader, jboolean favorSystemLoader);

__attribute__((unused)) static OrgJodaTimeTzZoneInfoProvider *new_OrgJodaTimeTzZoneInfoProvider_initWithNSString_withJavaLangClassLoader_withBoolean_(NSString *resourcePath, JavaLangClassLoader *loader, jboolean favorSystemLoader) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgJodaTimeTzZoneInfoProvider *create_OrgJodaTimeTzZoneInfoProvider_initWithNSString_withJavaLangClassLoader_withBoolean_(NSString *resourcePath, JavaLangClassLoader *loader, jboolean favorSystemLoader);

__attribute__((unused)) static JavaIoInputStream *OrgJodaTimeTzZoneInfoProvider_openResourceWithNSString_(OrgJodaTimeTzZoneInfoProvider *self, NSString *name);

__attribute__((unused)) static OrgJodaTimeDateTimeZone *OrgJodaTimeTzZoneInfoProvider_loadZoneDataWithNSString_(OrgJodaTimeTzZoneInfoProvider *self, NSString *id_);

__attribute__((unused)) static id<JavaUtilMap> OrgJodaTimeTzZoneInfoProvider_loadZoneInfoMapWithJavaIoInputStream_(JavaIoInputStream *inArg);

__attribute__((unused)) static void OrgJodaTimeTzZoneInfoProvider_readZoneInfoMapWithJavaIoDataInputStream_withJavaUtilMap_(JavaIoDataInputStream *din, id<JavaUtilMap> zimap);

@interface OrgJodaTimeTzZoneInfoProvider_$1 : NSObject < JavaSecurityPrivilegedAction > {
 @public
  OrgJodaTimeTzZoneInfoProvider *this$0_;
  NSString *val$path_;
}

- (JavaIoInputStream *)run;

- (instancetype)initWithOrgJodaTimeTzZoneInfoProvider:(OrgJodaTimeTzZoneInfoProvider *)outer$
                                         withNSString:(NSString *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeTzZoneInfoProvider_$1)

J2OBJC_FIELD_SETTER(OrgJodaTimeTzZoneInfoProvider_$1, this$0_, OrgJodaTimeTzZoneInfoProvider *)
J2OBJC_FIELD_SETTER(OrgJodaTimeTzZoneInfoProvider_$1, val$path_, NSString *)

__attribute__((unused)) static void OrgJodaTimeTzZoneInfoProvider_$1_initWithOrgJodaTimeTzZoneInfoProvider_withNSString_(OrgJodaTimeTzZoneInfoProvider_$1 *self, OrgJodaTimeTzZoneInfoProvider *outer$, NSString *capture$0);

__attribute__((unused)) static OrgJodaTimeTzZoneInfoProvider_$1 *new_OrgJodaTimeTzZoneInfoProvider_$1_initWithOrgJodaTimeTzZoneInfoProvider_withNSString_(OrgJodaTimeTzZoneInfoProvider *outer$, NSString *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgJodaTimeTzZoneInfoProvider_$1 *create_OrgJodaTimeTzZoneInfoProvider_$1_initWithOrgJodaTimeTzZoneInfoProvider_withNSString_(OrgJodaTimeTzZoneInfoProvider *outer$, NSString *capture$0);

@implementation OrgJodaTimeTzZoneInfoProvider

- (instancetype)initWithJavaIoFile:(JavaIoFile *)fileDir {
  OrgJodaTimeTzZoneInfoProvider_initWithJavaIoFile_(self, fileDir);
  return self;
}

- (instancetype)initWithNSString:(NSString *)resourcePath {
  OrgJodaTimeTzZoneInfoProvider_initWithNSString_(self, resourcePath);
  return self;
}

- (instancetype)initWithNSString:(NSString *)resourcePath
         withJavaLangClassLoader:(JavaLangClassLoader *)loader {
  OrgJodaTimeTzZoneInfoProvider_initWithNSString_withJavaLangClassLoader_(self, resourcePath, loader);
  return self;
}

- (instancetype)initWithNSString:(NSString *)resourcePath
         withJavaLangClassLoader:(JavaLangClassLoader *)loader
                     withBoolean:(jboolean)favorSystemLoader {
  OrgJodaTimeTzZoneInfoProvider_initWithNSString_withJavaLangClassLoader_withBoolean_(self, resourcePath, loader, favorSystemLoader);
  return self;
}

- (OrgJodaTimeDateTimeZone *)getZoneWithNSString:(NSString *)id_ {
  if (id_ == nil) {
    return nil;
  }
  id obj = [((id<JavaUtilMap>) nil_chk(iZoneInfoMap_)) getWithId:id_];
  if (obj == nil) {
    return nil;
  }
  if ([obj isKindOfClass:[JavaLangRefSoftReference class]]) {
    JavaLangRefSoftReference *ref = (JavaLangRefSoftReference *) cast_chk(obj, [JavaLangRefSoftReference class]);
    OrgJodaTimeDateTimeZone *tz = [ref get];
    if (tz != nil) {
      return tz;
    }
    return OrgJodaTimeTzZoneInfoProvider_loadZoneDataWithNSString_(self, id_);
  }
  else if ([id_ isEqual:obj]) {
    return OrgJodaTimeTzZoneInfoProvider_loadZoneDataWithNSString_(self, id_);
  }
  return [self getZoneWithNSString:(NSString *) cast_chk(obj, [NSString class])];
}

- (id<JavaUtilSet>)getAvailableIDs {
  return iZoneInfoKeys_;
}

- (void)uncaughtExceptionWithJavaLangException:(JavaLangException *)ex {
  [((JavaLangException *) nil_chk(ex)) printStackTrace];
}

- (JavaIoInputStream *)openResourceWithNSString:(NSString *)name {
  return OrgJodaTimeTzZoneInfoProvider_openResourceWithNSString_(self, name);
}

- (OrgJodaTimeDateTimeZone *)loadZoneDataWithNSString:(NSString *)id_ {
  return OrgJodaTimeTzZoneInfoProvider_loadZoneDataWithNSString_(self, id_);
}

+ (id<JavaUtilMap>)loadZoneInfoMapWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  return OrgJodaTimeTzZoneInfoProvider_loadZoneInfoMapWithJavaIoInputStream_(inArg);
}

+ (void)readZoneInfoMapWithJavaIoDataInputStream:(JavaIoDataInputStream *)din
                                 withJavaUtilMap:(id<JavaUtilMap>)zimap {
  OrgJodaTimeTzZoneInfoProvider_readZoneInfoMapWithJavaIoDataInputStream_withJavaUtilMap_(din, zimap);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, 1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, 1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, 1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 4, 1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDateTimeZone;", 0x1, 5, 2, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, 6, -1, -1 },
    { NULL, "V", 0x4, 7, 8, -1, -1, -1, -1 },
    { NULL, "LJavaIoInputStream;", 0x2, 9, 2, 1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDateTimeZone;", 0x2, 10, 2, -1, -1, -1, -1 },
    { NULL, "LJavaUtilMap;", 0xa, 11, 12, 1, 13, -1, -1 },
    { NULL, "V", 0xa, 14, 15, 1, 16, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaIoFile:);
  methods[1].selector = @selector(initWithNSString:);
  methods[2].selector = @selector(initWithNSString:withJavaLangClassLoader:);
  methods[3].selector = @selector(initWithNSString:withJavaLangClassLoader:withBoolean:);
  methods[4].selector = @selector(getZoneWithNSString:);
  methods[5].selector = @selector(getAvailableIDs);
  methods[6].selector = @selector(uncaughtExceptionWithJavaLangException:);
  methods[7].selector = @selector(openResourceWithNSString:);
  methods[8].selector = @selector(loadZoneDataWithNSString:);
  methods[9].selector = @selector(loadZoneInfoMapWithJavaIoInputStream:);
  methods[10].selector = @selector(readZoneInfoMapWithJavaIoDataInputStream:withJavaUtilMap:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "iFileDir_", "LJavaIoFile;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "iResourcePath_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "iLoader_", "LJavaLangClassLoader;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "iZoneInfoMap_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 17, -1 },
    { "iZoneInfoKeys_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x12, -1, -1, 18, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoFile;", "LJavaIoIOException;", "LNSString;", "LNSString;LJavaLangClassLoader;", "LNSString;LJavaLangClassLoader;Z", "getZone", "()Ljava/util/Set<Ljava/lang/String;>;", "uncaughtException", "LJavaLangException;", "openResource", "loadZoneData", "loadZoneInfoMap", "LJavaIoInputStream;", "(Ljava/io/InputStream;)Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;", "readZoneInfoMap", "LJavaIoDataInputStream;LJavaUtilMap;", "(Ljava/io/DataInputStream;Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;)V", "Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;", "Ljava/util/Set<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _OrgJodaTimeTzZoneInfoProvider = { "ZoneInfoProvider", "org.joda.time.tz", ptrTable, methods, fields, 7, 0x1, 11, 5, -1, -1, -1, -1, -1 };
  return &_OrgJodaTimeTzZoneInfoProvider;
}

@end

void OrgJodaTimeTzZoneInfoProvider_initWithJavaIoFile_(OrgJodaTimeTzZoneInfoProvider *self, JavaIoFile *fileDir) {
  NSObject_init(self);
  if (fileDir == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"No file directory provided");
  }
  if (![fileDir exists]) {
    @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$@", @"File directory doesn't exist: ", fileDir));
  }
  if (![fileDir isDirectory]) {
    @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$@", @"File doesn't refer to a directory: ", fileDir));
  }
  self->iFileDir_ = fileDir;
  self->iResourcePath_ = nil;
  self->iLoader_ = nil;
  self->iZoneInfoMap_ = OrgJodaTimeTzZoneInfoProvider_loadZoneInfoMapWithJavaIoInputStream_(OrgJodaTimeTzZoneInfoProvider_openResourceWithNSString_(self, @"ZoneInfoMap"));
  self->iZoneInfoKeys_ = JavaUtilCollections_unmodifiableSortedSetWithJavaUtilSortedSet_(new_JavaUtilTreeSet_initWithJavaUtilCollection_([((id<JavaUtilMap>) nil_chk(self->iZoneInfoMap_)) keySet]));
}

OrgJodaTimeTzZoneInfoProvider *new_OrgJodaTimeTzZoneInfoProvider_initWithJavaIoFile_(JavaIoFile *fileDir) {
  J2OBJC_NEW_IMPL(OrgJodaTimeTzZoneInfoProvider, initWithJavaIoFile_, fileDir)
}

OrgJodaTimeTzZoneInfoProvider *create_OrgJodaTimeTzZoneInfoProvider_initWithJavaIoFile_(JavaIoFile *fileDir) {
  J2OBJC_CREATE_IMPL(OrgJodaTimeTzZoneInfoProvider, initWithJavaIoFile_, fileDir)
}

void OrgJodaTimeTzZoneInfoProvider_initWithNSString_(OrgJodaTimeTzZoneInfoProvider *self, NSString *resourcePath) {
  OrgJodaTimeTzZoneInfoProvider_initWithNSString_withJavaLangClassLoader_withBoolean_(self, resourcePath, nil, false);
}

OrgJodaTimeTzZoneInfoProvider *new_OrgJodaTimeTzZoneInfoProvider_initWithNSString_(NSString *resourcePath) {
  J2OBJC_NEW_IMPL(OrgJodaTimeTzZoneInfoProvider, initWithNSString_, resourcePath)
}

OrgJodaTimeTzZoneInfoProvider *create_OrgJodaTimeTzZoneInfoProvider_initWithNSString_(NSString *resourcePath) {
  J2OBJC_CREATE_IMPL(OrgJodaTimeTzZoneInfoProvider, initWithNSString_, resourcePath)
}

void OrgJodaTimeTzZoneInfoProvider_initWithNSString_withJavaLangClassLoader_(OrgJodaTimeTzZoneInfoProvider *self, NSString *resourcePath, JavaLangClassLoader *loader) {
  OrgJodaTimeTzZoneInfoProvider_initWithNSString_withJavaLangClassLoader_withBoolean_(self, resourcePath, loader, true);
}

OrgJodaTimeTzZoneInfoProvider *new_OrgJodaTimeTzZoneInfoProvider_initWithNSString_withJavaLangClassLoader_(NSString *resourcePath, JavaLangClassLoader *loader) {
  J2OBJC_NEW_IMPL(OrgJodaTimeTzZoneInfoProvider, initWithNSString_withJavaLangClassLoader_, resourcePath, loader)
}

OrgJodaTimeTzZoneInfoProvider *create_OrgJodaTimeTzZoneInfoProvider_initWithNSString_withJavaLangClassLoader_(NSString *resourcePath, JavaLangClassLoader *loader) {
  J2OBJC_CREATE_IMPL(OrgJodaTimeTzZoneInfoProvider, initWithNSString_withJavaLangClassLoader_, resourcePath, loader)
}

void OrgJodaTimeTzZoneInfoProvider_initWithNSString_withJavaLangClassLoader_withBoolean_(OrgJodaTimeTzZoneInfoProvider *self, NSString *resourcePath, JavaLangClassLoader *loader, jboolean favorSystemLoader) {
  NSObject_init(self);
  if (resourcePath == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"No resource path provided");
  }
  if (![resourcePath hasSuffix:@"/"]) {
    (void) JreStrAppendStrong(&resourcePath, "C", '/');
  }
  self->iFileDir_ = nil;
  self->iResourcePath_ = resourcePath;
  if (loader == nil && !favorSystemLoader) {
    loader = [[self getClass] getClassLoader];
  }
  self->iLoader_ = loader;
  self->iZoneInfoMap_ = OrgJodaTimeTzZoneInfoProvider_loadZoneInfoMapWithJavaIoInputStream_(OrgJodaTimeTzZoneInfoProvider_openResourceWithNSString_(self, @"ZoneInfoMap"));
  self->iZoneInfoKeys_ = JavaUtilCollections_unmodifiableSortedSetWithJavaUtilSortedSet_(new_JavaUtilTreeSet_initWithJavaUtilCollection_([((id<JavaUtilMap>) nil_chk(self->iZoneInfoMap_)) keySet]));
}

OrgJodaTimeTzZoneInfoProvider *new_OrgJodaTimeTzZoneInfoProvider_initWithNSString_withJavaLangClassLoader_withBoolean_(NSString *resourcePath, JavaLangClassLoader *loader, jboolean favorSystemLoader) {
  J2OBJC_NEW_IMPL(OrgJodaTimeTzZoneInfoProvider, initWithNSString_withJavaLangClassLoader_withBoolean_, resourcePath, loader, favorSystemLoader)
}

OrgJodaTimeTzZoneInfoProvider *create_OrgJodaTimeTzZoneInfoProvider_initWithNSString_withJavaLangClassLoader_withBoolean_(NSString *resourcePath, JavaLangClassLoader *loader, jboolean favorSystemLoader) {
  J2OBJC_CREATE_IMPL(OrgJodaTimeTzZoneInfoProvider, initWithNSString_withJavaLangClassLoader_withBoolean_, resourcePath, loader, favorSystemLoader)
}

JavaIoInputStream *OrgJodaTimeTzZoneInfoProvider_openResourceWithNSString_(OrgJodaTimeTzZoneInfoProvider *self, NSString *name) {
  JavaIoInputStream *in;
  if (self->iFileDir_ != nil) {
    in = new_JavaIoFileInputStream_initWithJavaIoFile_(new_JavaIoFile_initWithJavaIoFile_withNSString_(self->iFileDir_, name));
  }
  else {
    NSString *path = [((NSString *) nil_chk(self->iResourcePath_)) concat:name];
    in = JavaSecurityAccessController_doPrivilegedWithJavaSecurityPrivilegedAction_(new_OrgJodaTimeTzZoneInfoProvider_$1_initWithOrgJodaTimeTzZoneInfoProvider_withNSString_(self, path));
    if (in == nil) {
      JavaLangStringBuilder *buf = [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([new_JavaLangStringBuilder_initWithInt_(40) appendWithNSString:@"Resource not found: \""])) appendWithNSString:path])) appendWithNSString:@"\" ClassLoader: "])) appendWithNSString:self->iLoader_ != nil ? [self->iLoader_ description] : @"system"];
      @throw new_JavaIoIOException_initWithNSString_([((JavaLangStringBuilder *) nil_chk(buf)) description]);
    }
  }
  return in;
}

OrgJodaTimeDateTimeZone *OrgJodaTimeTzZoneInfoProvider_loadZoneDataWithNSString_(OrgJodaTimeTzZoneInfoProvider *self, NSString *id_) {
  JavaIoInputStream *in = nil;
  @try {
    in = OrgJodaTimeTzZoneInfoProvider_openResourceWithNSString_(self, id_);
    OrgJodaTimeDateTimeZone *tz = OrgJodaTimeTzDateTimeZoneBuilder_readFromWithJavaIoInputStream_withNSString_(in, id_);
    (void) [((id<JavaUtilMap>) nil_chk(self->iZoneInfoMap_)) putWithId:id_ withId:new_JavaLangRefSoftReference_initWithId_(tz)];
    return tz;
  }
  @catch (JavaIoIOException *ex) {
    [self uncaughtExceptionWithJavaLangException:ex];
    (void) [((id<JavaUtilMap>) nil_chk(self->iZoneInfoMap_)) removeWithId:id_];
    return nil;
  }
  @finally {
    @try {
      if (in != nil) {
        [in close];
      }
    }
    @catch (JavaIoIOException *ex) {
    }
  }
}

id<JavaUtilMap> OrgJodaTimeTzZoneInfoProvider_loadZoneInfoMapWithJavaIoInputStream_(JavaIoInputStream *inArg) {
  OrgJodaTimeTzZoneInfoProvider_initialize();
  id<JavaUtilMap> map = new_JavaUtilConcurrentConcurrentHashMap_init();
  JavaIoDataInputStream *din = new_JavaIoDataInputStream_initWithJavaIoInputStream_(inArg);
  @try {
    OrgJodaTimeTzZoneInfoProvider_readZoneInfoMapWithJavaIoDataInputStream_withJavaUtilMap_(din, map);
  }
  @finally {
    @try {
      [din close];
    }
    @catch (JavaIoIOException *ex) {
    }
  }
  (void) [map putWithId:@"UTC" withId:new_JavaLangRefSoftReference_initWithId_(JreLoadStatic(OrgJodaTimeDateTimeZone, UTC))];
  return map;
}

void OrgJodaTimeTzZoneInfoProvider_readZoneInfoMapWithJavaIoDataInputStream_withJavaUtilMap_(JavaIoDataInputStream *din, id<JavaUtilMap> zimap) {
  OrgJodaTimeTzZoneInfoProvider_initialize();
  jint size = [((JavaIoDataInputStream *) nil_chk(din)) readUnsignedShort];
  IOSObjectArray *pool = [IOSObjectArray newArrayWithLength:size type:NSString_class_()];
  for (jint i = 0; i < size; i++) {
    (void) IOSObjectArray_Set(pool, i, [((NSString *) nil_chk([din readUTF])) intern]);
  }
  size = [din readUnsignedShort];
  for (jint i = 0; i < size; i++) {
    @try {
      (void) [((id<JavaUtilMap>) nil_chk(zimap)) putWithId:IOSObjectArray_Get(pool, [din readUnsignedShort]) withId:IOSObjectArray_Get(pool, [din readUnsignedShort])];
    }
    @catch (JavaLangArrayIndexOutOfBoundsException *ex) {
      @throw new_JavaIoIOException_initWithNSString_(@"Corrupt zone info map");
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeTzZoneInfoProvider)

@implementation OrgJodaTimeTzZoneInfoProvider_$1

- (JavaIoInputStream *)run {
  if (this$0_->iLoader_ != nil) {
    return [this$0_->iLoader_ getResourceAsStreamWithNSString:val$path_];
  }
  else {
    return JavaLangClassLoader_getSystemResourceAsStreamWithNSString_(val$path_);
  }
}

- (instancetype)initWithOrgJodaTimeTzZoneInfoProvider:(OrgJodaTimeTzZoneInfoProvider *)outer$
                                         withNSString:(NSString *)capture$0 {
  OrgJodaTimeTzZoneInfoProvider_$1_initWithOrgJodaTimeTzZoneInfoProvider_withNSString_(self, outer$, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaIoInputStream;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(run);
  methods[1].selector = @selector(initWithOrgJodaTimeTzZoneInfoProvider:withNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgJodaTimeTzZoneInfoProvider;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$path_", "LNSString;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgJodaTimeTzZoneInfoProvider;LNSString;", "LOrgJodaTimeTzZoneInfoProvider;", "openResourceWithNSString:", "Ljava/lang/Object;Ljava/security/PrivilegedAction<Ljava/io/InputStream;>;" };
  static const J2ObjcClassInfo _OrgJodaTimeTzZoneInfoProvider_$1 = { "", "org.joda.time.tz", ptrTable, methods, fields, 7, 0x8008, 2, 2, 1, -1, 2, 3, -1 };
  return &_OrgJodaTimeTzZoneInfoProvider_$1;
}

@end

void OrgJodaTimeTzZoneInfoProvider_$1_initWithOrgJodaTimeTzZoneInfoProvider_withNSString_(OrgJodaTimeTzZoneInfoProvider_$1 *self, OrgJodaTimeTzZoneInfoProvider *outer$, NSString *capture$0) {
  self->this$0_ = outer$;
  self->val$path_ = capture$0;
  NSObject_init(self);
}

OrgJodaTimeTzZoneInfoProvider_$1 *new_OrgJodaTimeTzZoneInfoProvider_$1_initWithOrgJodaTimeTzZoneInfoProvider_withNSString_(OrgJodaTimeTzZoneInfoProvider *outer$, NSString *capture$0) {
  J2OBJC_NEW_IMPL(OrgJodaTimeTzZoneInfoProvider_$1, initWithOrgJodaTimeTzZoneInfoProvider_withNSString_, outer$, capture$0)
}

OrgJodaTimeTzZoneInfoProvider_$1 *create_OrgJodaTimeTzZoneInfoProvider_$1_initWithOrgJodaTimeTzZoneInfoProvider_withNSString_(OrgJodaTimeTzZoneInfoProvider *outer$, NSString *capture$0) {
  J2OBJC_CREATE_IMPL(OrgJodaTimeTzZoneInfoProvider_$1, initWithOrgJodaTimeTzZoneInfoProvider_withNSString_, outer$, capture$0)
}
