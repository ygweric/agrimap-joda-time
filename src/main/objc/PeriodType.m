//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/eric/repos/360-j2objc/joda-time/build/mainTranslationExtraction/org/joda/time/PeriodType.java
//

#include "DurationFieldType.h"
#include "FieldUtils.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "PeriodType.h"
#include "ReadablePeriod.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"
#include "java/util/Map.h"

@interface OrgJodaTimePeriodType () {
 @public
  NSString *iName_;
  IOSObjectArray *iTypes_;
  IOSIntArray *iIndices_;
}

- (OrgJodaTimePeriodType *)withFieldRemovedWithInt:(jint)indicesIndex
                                      withNSString:(NSString *)name;

@end

J2OBJC_FIELD_SETTER(OrgJodaTimePeriodType, iName_, NSString *)
J2OBJC_FIELD_SETTER(OrgJodaTimePeriodType, iTypes_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgJodaTimePeriodType, iIndices_, IOSIntArray *)

inline jlong OrgJodaTimePeriodType_get_serialVersionUID();
#define OrgJodaTimePeriodType_serialVersionUID 2274324892792009998LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimePeriodType, serialVersionUID, jlong)

inline id<JavaUtilMap> OrgJodaTimePeriodType_get_cTypes();
static id<JavaUtilMap> OrgJodaTimePeriodType_cTypes;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimePeriodType, cTypes, id<JavaUtilMap>)

inline OrgJodaTimePeriodType *OrgJodaTimePeriodType_get_cStandard();
inline OrgJodaTimePeriodType *OrgJodaTimePeriodType_set_cStandard(OrgJodaTimePeriodType *value);
static OrgJodaTimePeriodType *OrgJodaTimePeriodType_cStandard;
J2OBJC_STATIC_FIELD_OBJ(OrgJodaTimePeriodType, cStandard, OrgJodaTimePeriodType *)

inline OrgJodaTimePeriodType *OrgJodaTimePeriodType_get_cYMDTime();
inline OrgJodaTimePeriodType *OrgJodaTimePeriodType_set_cYMDTime(OrgJodaTimePeriodType *value);
static OrgJodaTimePeriodType *OrgJodaTimePeriodType_cYMDTime;
J2OBJC_STATIC_FIELD_OBJ(OrgJodaTimePeriodType, cYMDTime, OrgJodaTimePeriodType *)

inline OrgJodaTimePeriodType *OrgJodaTimePeriodType_get_cYMD();
inline OrgJodaTimePeriodType *OrgJodaTimePeriodType_set_cYMD(OrgJodaTimePeriodType *value);
static OrgJodaTimePeriodType *OrgJodaTimePeriodType_cYMD;
J2OBJC_STATIC_FIELD_OBJ(OrgJodaTimePeriodType, cYMD, OrgJodaTimePeriodType *)

inline OrgJodaTimePeriodType *OrgJodaTimePeriodType_get_cYWDTime();
inline OrgJodaTimePeriodType *OrgJodaTimePeriodType_set_cYWDTime(OrgJodaTimePeriodType *value);
static OrgJodaTimePeriodType *OrgJodaTimePeriodType_cYWDTime;
J2OBJC_STATIC_FIELD_OBJ(OrgJodaTimePeriodType, cYWDTime, OrgJodaTimePeriodType *)

inline OrgJodaTimePeriodType *OrgJodaTimePeriodType_get_cYWD();
inline OrgJodaTimePeriodType *OrgJodaTimePeriodType_set_cYWD(OrgJodaTimePeriodType *value);
static OrgJodaTimePeriodType *OrgJodaTimePeriodType_cYWD;
J2OBJC_STATIC_FIELD_OBJ(OrgJodaTimePeriodType, cYWD, OrgJodaTimePeriodType *)

inline OrgJodaTimePeriodType *OrgJodaTimePeriodType_get_cYDTime();
inline OrgJodaTimePeriodType *OrgJodaTimePeriodType_set_cYDTime(OrgJodaTimePeriodType *value);
static OrgJodaTimePeriodType *OrgJodaTimePeriodType_cYDTime;
J2OBJC_STATIC_FIELD_OBJ(OrgJodaTimePeriodType, cYDTime, OrgJodaTimePeriodType *)

inline OrgJodaTimePeriodType *OrgJodaTimePeriodType_get_cYD();
inline OrgJodaTimePeriodType *OrgJodaTimePeriodType_set_cYD(OrgJodaTimePeriodType *value);
static OrgJodaTimePeriodType *OrgJodaTimePeriodType_cYD;
J2OBJC_STATIC_FIELD_OBJ(OrgJodaTimePeriodType, cYD, OrgJodaTimePeriodType *)

inline OrgJodaTimePeriodType *OrgJodaTimePeriodType_get_cDTime();
inline OrgJodaTimePeriodType *OrgJodaTimePeriodType_set_cDTime(OrgJodaTimePeriodType *value);
static OrgJodaTimePeriodType *OrgJodaTimePeriodType_cDTime;
J2OBJC_STATIC_FIELD_OBJ(OrgJodaTimePeriodType, cDTime, OrgJodaTimePeriodType *)

inline OrgJodaTimePeriodType *OrgJodaTimePeriodType_get_cTime();
inline OrgJodaTimePeriodType *OrgJodaTimePeriodType_set_cTime(OrgJodaTimePeriodType *value);
static OrgJodaTimePeriodType *OrgJodaTimePeriodType_cTime;
J2OBJC_STATIC_FIELD_OBJ(OrgJodaTimePeriodType, cTime, OrgJodaTimePeriodType *)

inline OrgJodaTimePeriodType *OrgJodaTimePeriodType_get_cYears();
inline OrgJodaTimePeriodType *OrgJodaTimePeriodType_set_cYears(OrgJodaTimePeriodType *value);
static OrgJodaTimePeriodType *OrgJodaTimePeriodType_cYears;
J2OBJC_STATIC_FIELD_OBJ(OrgJodaTimePeriodType, cYears, OrgJodaTimePeriodType *)

inline OrgJodaTimePeriodType *OrgJodaTimePeriodType_get_cMonths();
inline OrgJodaTimePeriodType *OrgJodaTimePeriodType_set_cMonths(OrgJodaTimePeriodType *value);
static OrgJodaTimePeriodType *OrgJodaTimePeriodType_cMonths;
J2OBJC_STATIC_FIELD_OBJ(OrgJodaTimePeriodType, cMonths, OrgJodaTimePeriodType *)

inline OrgJodaTimePeriodType *OrgJodaTimePeriodType_get_cWeeks();
inline OrgJodaTimePeriodType *OrgJodaTimePeriodType_set_cWeeks(OrgJodaTimePeriodType *value);
static OrgJodaTimePeriodType *OrgJodaTimePeriodType_cWeeks;
J2OBJC_STATIC_FIELD_OBJ(OrgJodaTimePeriodType, cWeeks, OrgJodaTimePeriodType *)

inline OrgJodaTimePeriodType *OrgJodaTimePeriodType_get_cDays();
inline OrgJodaTimePeriodType *OrgJodaTimePeriodType_set_cDays(OrgJodaTimePeriodType *value);
static OrgJodaTimePeriodType *OrgJodaTimePeriodType_cDays;
J2OBJC_STATIC_FIELD_OBJ(OrgJodaTimePeriodType, cDays, OrgJodaTimePeriodType *)

inline OrgJodaTimePeriodType *OrgJodaTimePeriodType_get_cHours();
inline OrgJodaTimePeriodType *OrgJodaTimePeriodType_set_cHours(OrgJodaTimePeriodType *value);
static OrgJodaTimePeriodType *OrgJodaTimePeriodType_cHours;
J2OBJC_STATIC_FIELD_OBJ(OrgJodaTimePeriodType, cHours, OrgJodaTimePeriodType *)

inline OrgJodaTimePeriodType *OrgJodaTimePeriodType_get_cMinutes();
inline OrgJodaTimePeriodType *OrgJodaTimePeriodType_set_cMinutes(OrgJodaTimePeriodType *value);
static OrgJodaTimePeriodType *OrgJodaTimePeriodType_cMinutes;
J2OBJC_STATIC_FIELD_OBJ(OrgJodaTimePeriodType, cMinutes, OrgJodaTimePeriodType *)

inline OrgJodaTimePeriodType *OrgJodaTimePeriodType_get_cSeconds();
inline OrgJodaTimePeriodType *OrgJodaTimePeriodType_set_cSeconds(OrgJodaTimePeriodType *value);
static OrgJodaTimePeriodType *OrgJodaTimePeriodType_cSeconds;
J2OBJC_STATIC_FIELD_OBJ(OrgJodaTimePeriodType, cSeconds, OrgJodaTimePeriodType *)

inline OrgJodaTimePeriodType *OrgJodaTimePeriodType_get_cMillis();
inline OrgJodaTimePeriodType *OrgJodaTimePeriodType_set_cMillis(OrgJodaTimePeriodType *value);
static OrgJodaTimePeriodType *OrgJodaTimePeriodType_cMillis;
J2OBJC_STATIC_FIELD_OBJ(OrgJodaTimePeriodType, cMillis, OrgJodaTimePeriodType *)

__attribute__((unused)) static OrgJodaTimePeriodType *OrgJodaTimePeriodType_withFieldRemovedWithInt_withNSString_(OrgJodaTimePeriodType *self, jint indicesIndex, NSString *name);

J2OBJC_INITIALIZED_DEFN(OrgJodaTimePeriodType)

jint OrgJodaTimePeriodType_YEAR_INDEX = 0;
jint OrgJodaTimePeriodType_MONTH_INDEX = 1;
jint OrgJodaTimePeriodType_WEEK_INDEX = 2;
jint OrgJodaTimePeriodType_DAY_INDEX = 3;
jint OrgJodaTimePeriodType_HOUR_INDEX = 4;
jint OrgJodaTimePeriodType_MINUTE_INDEX = 5;
jint OrgJodaTimePeriodType_SECOND_INDEX = 6;
jint OrgJodaTimePeriodType_MILLI_INDEX = 7;

@implementation OrgJodaTimePeriodType

+ (OrgJodaTimePeriodType *)standard {
  return OrgJodaTimePeriodType_standard();
}

+ (OrgJodaTimePeriodType *)yearMonthDayTime {
  return OrgJodaTimePeriodType_yearMonthDayTime();
}

+ (OrgJodaTimePeriodType *)yearMonthDay {
  return OrgJodaTimePeriodType_yearMonthDay();
}

+ (OrgJodaTimePeriodType *)yearWeekDayTime {
  return OrgJodaTimePeriodType_yearWeekDayTime();
}

+ (OrgJodaTimePeriodType *)yearWeekDay {
  return OrgJodaTimePeriodType_yearWeekDay();
}

+ (OrgJodaTimePeriodType *)yearDayTime {
  return OrgJodaTimePeriodType_yearDayTime();
}

+ (OrgJodaTimePeriodType *)yearDay {
  return OrgJodaTimePeriodType_yearDay();
}

+ (OrgJodaTimePeriodType *)dayTime {
  return OrgJodaTimePeriodType_dayTime();
}

+ (OrgJodaTimePeriodType *)time {
  return OrgJodaTimePeriodType_time();
}

+ (OrgJodaTimePeriodType *)years {
  return OrgJodaTimePeriodType_years();
}

+ (OrgJodaTimePeriodType *)months {
  return OrgJodaTimePeriodType_months();
}

+ (OrgJodaTimePeriodType *)weeks {
  return OrgJodaTimePeriodType_weeks();
}

+ (OrgJodaTimePeriodType *)days {
  return OrgJodaTimePeriodType_days();
}

+ (OrgJodaTimePeriodType *)hours {
  return OrgJodaTimePeriodType_hours();
}

+ (OrgJodaTimePeriodType *)minutes {
  return OrgJodaTimePeriodType_minutes();
}

+ (OrgJodaTimePeriodType *)seconds {
  return OrgJodaTimePeriodType_seconds();
}

+ (OrgJodaTimePeriodType *)millis {
  return OrgJodaTimePeriodType_millis();
}

+ (OrgJodaTimePeriodType *)forFieldsWithOrgJodaTimeDurationFieldTypeArray:(IOSObjectArray *)types {
  return OrgJodaTimePeriodType_forFieldsWithOrgJodaTimeDurationFieldTypeArray_(types);
}

- (instancetype)initWithNSString:(NSString *)name
withOrgJodaTimeDurationFieldTypeArray:(IOSObjectArray *)types
                    withIntArray:(IOSIntArray *)indices {
  OrgJodaTimePeriodType_initWithNSString_withOrgJodaTimeDurationFieldTypeArray_withIntArray_(self, name, types, indices);
  return self;
}

- (NSString *)getName {
  return iName_;
}

- (jint)size {
  return ((IOSObjectArray *) nil_chk(iTypes_))->size_;
}

- (OrgJodaTimeDurationFieldType *)getFieldTypeWithInt:(jint)index {
  return IOSObjectArray_Get(nil_chk(iTypes_), index);
}

- (jboolean)isSupportedWithOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)type {
  return ([self indexOfWithOrgJodaTimeDurationFieldType:type] >= 0);
}

- (jint)indexOfWithOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)type {
  for (jint i = 0, isize = [self size]; i < isize; i++) {
    if (IOSObjectArray_Get(nil_chk(iTypes_), i) == type) {
      return i;
    }
  }
  return -1;
}

- (NSString *)description {
  return JreStrcat("$$C", @"PeriodType[", [self getName], ']');
}

- (jint)getIndexedFieldWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period
                                             withInt:(jint)index {
  jint realIndex = IOSIntArray_Get(nil_chk(iIndices_), index);
  return (realIndex == -1 ? 0 : [((id<OrgJodaTimeReadablePeriod>) nil_chk(period)) getValueWithInt:realIndex]);
}

- (jboolean)setIndexedFieldWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period
                                                 withInt:(jint)index
                                            withIntArray:(IOSIntArray *)values
                                                 withInt:(jint)newValue {
  jint realIndex = IOSIntArray_Get(nil_chk(iIndices_), index);
  if (realIndex == -1) {
    @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"Field is not supported");
  }
  *IOSIntArray_GetRef(nil_chk(values), realIndex) = newValue;
  return true;
}

- (jboolean)addIndexedFieldWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period
                                                 withInt:(jint)index
                                            withIntArray:(IOSIntArray *)values
                                                 withInt:(jint)valueToAdd {
  if (valueToAdd == 0) {
    return false;
  }
  jint realIndex = IOSIntArray_Get(nil_chk(iIndices_), index);
  if (realIndex == -1) {
    @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"Field is not supported");
  }
  *IOSIntArray_GetRef(nil_chk(values), realIndex) = OrgJodaTimeFieldFieldUtils_safeAddWithInt_withInt_(IOSIntArray_Get(values, realIndex), valueToAdd);
  return true;
}

- (OrgJodaTimePeriodType *)withYearsRemoved {
  return OrgJodaTimePeriodType_withFieldRemovedWithInt_withNSString_(self, 0, @"NoYears");
}

- (OrgJodaTimePeriodType *)withMonthsRemoved {
  return OrgJodaTimePeriodType_withFieldRemovedWithInt_withNSString_(self, 1, @"NoMonths");
}

- (OrgJodaTimePeriodType *)withWeeksRemoved {
  return OrgJodaTimePeriodType_withFieldRemovedWithInt_withNSString_(self, 2, @"NoWeeks");
}

- (OrgJodaTimePeriodType *)withDaysRemoved {
  return OrgJodaTimePeriodType_withFieldRemovedWithInt_withNSString_(self, 3, @"NoDays");
}

- (OrgJodaTimePeriodType *)withHoursRemoved {
  return OrgJodaTimePeriodType_withFieldRemovedWithInt_withNSString_(self, 4, @"NoHours");
}

- (OrgJodaTimePeriodType *)withMinutesRemoved {
  return OrgJodaTimePeriodType_withFieldRemovedWithInt_withNSString_(self, 5, @"NoMinutes");
}

- (OrgJodaTimePeriodType *)withSecondsRemoved {
  return OrgJodaTimePeriodType_withFieldRemovedWithInt_withNSString_(self, 6, @"NoSeconds");
}

- (OrgJodaTimePeriodType *)withMillisRemoved {
  return OrgJodaTimePeriodType_withFieldRemovedWithInt_withNSString_(self, 7, @"NoMillis");
}

- (OrgJodaTimePeriodType *)withFieldRemovedWithInt:(jint)indicesIndex
                                      withNSString:(NSString *)name {
  return OrgJodaTimePeriodType_withFieldRemovedWithInt_withNSString_(self, indicesIndex, name);
}

- (jboolean)isEqual:(id)obj {
  if (self == obj) {
    return true;
  }
  if ([obj isKindOfClass:[OrgJodaTimePeriodType class]] == false) {
    return false;
  }
  OrgJodaTimePeriodType *other = (OrgJodaTimePeriodType *) cast_chk(obj, [OrgJodaTimePeriodType class]);
  return (JavaUtilArrays_equalsWithNSObjectArray_withNSObjectArray_(iTypes_, ((OrgJodaTimePeriodType *) nil_chk(other))->iTypes_));
}

- (NSUInteger)hash {
  jint hash_ = 0;
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(iTypes_))->size_; i++) {
    hash_ += ((jint) [((OrgJodaTimeDurationFieldType *) nil_chk(IOSObjectArray_Get(iTypes_, i))) hash]);
  }
  return hash_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgJodaTimePeriodType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimePeriodType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimePeriodType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimePeriodType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimePeriodType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimePeriodType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimePeriodType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimePeriodType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimePeriodType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimePeriodType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimePeriodType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimePeriodType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimePeriodType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimePeriodType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimePeriodType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimePeriodType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimePeriodType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimePeriodType;", 0x29, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDurationFieldType;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 7, 6, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 8, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, 9, 10, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 11, 12, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 13, 12, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimePeriodType;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimePeriodType;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimePeriodType;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimePeriodType;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimePeriodType;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimePeriodType;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimePeriodType;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimePeriodType;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimePeriodType;", 0x2, 14, 15, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 16, 17, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 18, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(standard);
  methods[1].selector = @selector(yearMonthDayTime);
  methods[2].selector = @selector(yearMonthDay);
  methods[3].selector = @selector(yearWeekDayTime);
  methods[4].selector = @selector(yearWeekDay);
  methods[5].selector = @selector(yearDayTime);
  methods[6].selector = @selector(yearDay);
  methods[7].selector = @selector(dayTime);
  methods[8].selector = @selector(time);
  methods[9].selector = @selector(years);
  methods[10].selector = @selector(months);
  methods[11].selector = @selector(weeks);
  methods[12].selector = @selector(days);
  methods[13].selector = @selector(hours);
  methods[14].selector = @selector(minutes);
  methods[15].selector = @selector(seconds);
  methods[16].selector = @selector(millis);
  methods[17].selector = @selector(forFieldsWithOrgJodaTimeDurationFieldTypeArray:);
  methods[18].selector = @selector(initWithNSString:withOrgJodaTimeDurationFieldTypeArray:withIntArray:);
  methods[19].selector = @selector(getName);
  methods[20].selector = @selector(size);
  methods[21].selector = @selector(getFieldTypeWithInt:);
  methods[22].selector = @selector(isSupportedWithOrgJodaTimeDurationFieldType:);
  methods[23].selector = @selector(indexOfWithOrgJodaTimeDurationFieldType:);
  methods[24].selector = @selector(description);
  methods[25].selector = @selector(getIndexedFieldWithOrgJodaTimeReadablePeriod:withInt:);
  methods[26].selector = @selector(setIndexedFieldWithOrgJodaTimeReadablePeriod:withInt:withIntArray:withInt:);
  methods[27].selector = @selector(addIndexedFieldWithOrgJodaTimeReadablePeriod:withInt:withIntArray:withInt:);
  methods[28].selector = @selector(withYearsRemoved);
  methods[29].selector = @selector(withMonthsRemoved);
  methods[30].selector = @selector(withWeeksRemoved);
  methods[31].selector = @selector(withDaysRemoved);
  methods[32].selector = @selector(withHoursRemoved);
  methods[33].selector = @selector(withMinutesRemoved);
  methods[34].selector = @selector(withSecondsRemoved);
  methods[35].selector = @selector(withMillisRemoved);
  methods[36].selector = @selector(withFieldRemovedWithInt:withNSString:);
  methods[37].selector = @selector(isEqual:);
  methods[38].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = OrgJodaTimePeriodType_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "cTypes", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1a, -1, 19, 20, -1 },
    { "YEAR_INDEX", "I", .constantValue.asLong = 0, 0x8, -1, 21, -1, -1 },
    { "MONTH_INDEX", "I", .constantValue.asLong = 0, 0x8, -1, 22, -1, -1 },
    { "WEEK_INDEX", "I", .constantValue.asLong = 0, 0x8, -1, 23, -1, -1 },
    { "DAY_INDEX", "I", .constantValue.asLong = 0, 0x8, -1, 24, -1, -1 },
    { "HOUR_INDEX", "I", .constantValue.asLong = 0, 0x8, -1, 25, -1, -1 },
    { "MINUTE_INDEX", "I", .constantValue.asLong = 0, 0x8, -1, 26, -1, -1 },
    { "SECOND_INDEX", "I", .constantValue.asLong = 0, 0x8, -1, 27, -1, -1 },
    { "MILLI_INDEX", "I", .constantValue.asLong = 0, 0x8, -1, 28, -1, -1 },
    { "cStandard", "LOrgJodaTimePeriodType;", .constantValue.asLong = 0, 0xa, -1, 29, -1, -1 },
    { "cYMDTime", "LOrgJodaTimePeriodType;", .constantValue.asLong = 0, 0xa, -1, 30, -1, -1 },
    { "cYMD", "LOrgJodaTimePeriodType;", .constantValue.asLong = 0, 0xa, -1, 31, -1, -1 },
    { "cYWDTime", "LOrgJodaTimePeriodType;", .constantValue.asLong = 0, 0xa, -1, 32, -1, -1 },
    { "cYWD", "LOrgJodaTimePeriodType;", .constantValue.asLong = 0, 0xa, -1, 33, -1, -1 },
    { "cYDTime", "LOrgJodaTimePeriodType;", .constantValue.asLong = 0, 0xa, -1, 34, -1, -1 },
    { "cYD", "LOrgJodaTimePeriodType;", .constantValue.asLong = 0, 0xa, -1, 35, -1, -1 },
    { "cDTime", "LOrgJodaTimePeriodType;", .constantValue.asLong = 0, 0xa, -1, 36, -1, -1 },
    { "cTime", "LOrgJodaTimePeriodType;", .constantValue.asLong = 0, 0xa, -1, 37, -1, -1 },
    { "cYears", "LOrgJodaTimePeriodType;", .constantValue.asLong = 0, 0xa, -1, 38, -1, -1 },
    { "cMonths", "LOrgJodaTimePeriodType;", .constantValue.asLong = 0, 0xa, -1, 39, -1, -1 },
    { "cWeeks", "LOrgJodaTimePeriodType;", .constantValue.asLong = 0, 0xa, -1, 40, -1, -1 },
    { "cDays", "LOrgJodaTimePeriodType;", .constantValue.asLong = 0, 0xa, -1, 41, -1, -1 },
    { "cHours", "LOrgJodaTimePeriodType;", .constantValue.asLong = 0, 0xa, -1, 42, -1, -1 },
    { "cMinutes", "LOrgJodaTimePeriodType;", .constantValue.asLong = 0, 0xa, -1, 43, -1, -1 },
    { "cSeconds", "LOrgJodaTimePeriodType;", .constantValue.asLong = 0, 0xa, -1, 44, -1, -1 },
    { "cMillis", "LOrgJodaTimePeriodType;", .constantValue.asLong = 0, 0xa, -1, 45, -1, -1 },
    { "iName_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "iTypes_", "[LOrgJodaTimeDurationFieldType;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "iIndices_", "[I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "forFields", "[LOrgJodaTimeDurationFieldType;", "LNSString;[LOrgJodaTimeDurationFieldType;[I", "getFieldType", "I", "isSupported", "LOrgJodaTimeDurationFieldType;", "indexOf", "toString", "getIndexedField", "LOrgJodaTimeReadablePeriod;I", "setIndexedField", "LOrgJodaTimeReadablePeriod;I[II", "addIndexedField", "withFieldRemoved", "ILNSString;", "equals", "LNSObject;", "hashCode", &OrgJodaTimePeriodType_cTypes, "Ljava/util/Map<Lorg/joda/time/PeriodType;Ljava/lang/Object;>;", &OrgJodaTimePeriodType_YEAR_INDEX, &OrgJodaTimePeriodType_MONTH_INDEX, &OrgJodaTimePeriodType_WEEK_INDEX, &OrgJodaTimePeriodType_DAY_INDEX, &OrgJodaTimePeriodType_HOUR_INDEX, &OrgJodaTimePeriodType_MINUTE_INDEX, &OrgJodaTimePeriodType_SECOND_INDEX, &OrgJodaTimePeriodType_MILLI_INDEX, &OrgJodaTimePeriodType_cStandard, &OrgJodaTimePeriodType_cYMDTime, &OrgJodaTimePeriodType_cYMD, &OrgJodaTimePeriodType_cYWDTime, &OrgJodaTimePeriodType_cYWD, &OrgJodaTimePeriodType_cYDTime, &OrgJodaTimePeriodType_cYD, &OrgJodaTimePeriodType_cDTime, &OrgJodaTimePeriodType_cTime, &OrgJodaTimePeriodType_cYears, &OrgJodaTimePeriodType_cMonths, &OrgJodaTimePeriodType_cWeeks, &OrgJodaTimePeriodType_cDays, &OrgJodaTimePeriodType_cHours, &OrgJodaTimePeriodType_cMinutes, &OrgJodaTimePeriodType_cSeconds, &OrgJodaTimePeriodType_cMillis };
  static const J2ObjcClassInfo _OrgJodaTimePeriodType = { "PeriodType", "org.joda.time", ptrTable, methods, fields, 7, 0x1, 39, 30, -1, -1, -1, -1, -1 };
  return &_OrgJodaTimePeriodType;
}

+ (void)initialize {
  if (self == [OrgJodaTimePeriodType class]) {
    OrgJodaTimePeriodType_cTypes = new_JavaUtilHashMap_initWithInt_(32);
    J2OBJC_SET_INITIALIZED(OrgJodaTimePeriodType)
  }
}

@end

OrgJodaTimePeriodType *OrgJodaTimePeriodType_standard() {
  OrgJodaTimePeriodType_initialize();
  OrgJodaTimePeriodType *type = OrgJodaTimePeriodType_cStandard;
  if (type == nil) {
    type = new_OrgJodaTimePeriodType_initWithNSString_withOrgJodaTimeDurationFieldTypeArray_withIntArray_(@"Standard", [IOSObjectArray newArrayWithObjects:(id[]){ OrgJodaTimeDurationFieldType_years(), OrgJodaTimeDurationFieldType_months(), OrgJodaTimeDurationFieldType_weeks(), OrgJodaTimeDurationFieldType_days(), OrgJodaTimeDurationFieldType_hours(), OrgJodaTimeDurationFieldType_minutes(), OrgJodaTimeDurationFieldType_seconds(), OrgJodaTimeDurationFieldType_millis() } count:8 type:OrgJodaTimeDurationFieldType_class_()], [IOSIntArray newArrayWithInts:(jint[]){ 0, 1, 2, 3, 4, 5, 6, 7 } count:8]);
    OrgJodaTimePeriodType_cStandard = type;
  }
  return type;
}

OrgJodaTimePeriodType *OrgJodaTimePeriodType_yearMonthDayTime() {
  OrgJodaTimePeriodType_initialize();
  OrgJodaTimePeriodType *type = OrgJodaTimePeriodType_cYMDTime;
  if (type == nil) {
    type = new_OrgJodaTimePeriodType_initWithNSString_withOrgJodaTimeDurationFieldTypeArray_withIntArray_(@"YearMonthDayTime", [IOSObjectArray newArrayWithObjects:(id[]){ OrgJodaTimeDurationFieldType_years(), OrgJodaTimeDurationFieldType_months(), OrgJodaTimeDurationFieldType_days(), OrgJodaTimeDurationFieldType_hours(), OrgJodaTimeDurationFieldType_minutes(), OrgJodaTimeDurationFieldType_seconds(), OrgJodaTimeDurationFieldType_millis() } count:7 type:OrgJodaTimeDurationFieldType_class_()], [IOSIntArray newArrayWithInts:(jint[]){ 0, 1, -1, 2, 3, 4, 5, 6 } count:8]);
    OrgJodaTimePeriodType_cYMDTime = type;
  }
  return type;
}

OrgJodaTimePeriodType *OrgJodaTimePeriodType_yearMonthDay() {
  OrgJodaTimePeriodType_initialize();
  OrgJodaTimePeriodType *type = OrgJodaTimePeriodType_cYMD;
  if (type == nil) {
    type = new_OrgJodaTimePeriodType_initWithNSString_withOrgJodaTimeDurationFieldTypeArray_withIntArray_(@"YearMonthDay", [IOSObjectArray newArrayWithObjects:(id[]){ OrgJodaTimeDurationFieldType_years(), OrgJodaTimeDurationFieldType_months(), OrgJodaTimeDurationFieldType_days() } count:3 type:OrgJodaTimeDurationFieldType_class_()], [IOSIntArray newArrayWithInts:(jint[]){ 0, 1, -1, 2, -1, -1, -1, -1 } count:8]);
    OrgJodaTimePeriodType_cYMD = type;
  }
  return type;
}

OrgJodaTimePeriodType *OrgJodaTimePeriodType_yearWeekDayTime() {
  OrgJodaTimePeriodType_initialize();
  OrgJodaTimePeriodType *type = OrgJodaTimePeriodType_cYWDTime;
  if (type == nil) {
    type = new_OrgJodaTimePeriodType_initWithNSString_withOrgJodaTimeDurationFieldTypeArray_withIntArray_(@"YearWeekDayTime", [IOSObjectArray newArrayWithObjects:(id[]){ OrgJodaTimeDurationFieldType_years(), OrgJodaTimeDurationFieldType_weeks(), OrgJodaTimeDurationFieldType_days(), OrgJodaTimeDurationFieldType_hours(), OrgJodaTimeDurationFieldType_minutes(), OrgJodaTimeDurationFieldType_seconds(), OrgJodaTimeDurationFieldType_millis() } count:7 type:OrgJodaTimeDurationFieldType_class_()], [IOSIntArray newArrayWithInts:(jint[]){ 0, -1, 1, 2, 3, 4, 5, 6 } count:8]);
    OrgJodaTimePeriodType_cYWDTime = type;
  }
  return type;
}

OrgJodaTimePeriodType *OrgJodaTimePeriodType_yearWeekDay() {
  OrgJodaTimePeriodType_initialize();
  OrgJodaTimePeriodType *type = OrgJodaTimePeriodType_cYWD;
  if (type == nil) {
    type = new_OrgJodaTimePeriodType_initWithNSString_withOrgJodaTimeDurationFieldTypeArray_withIntArray_(@"YearWeekDay", [IOSObjectArray newArrayWithObjects:(id[]){ OrgJodaTimeDurationFieldType_years(), OrgJodaTimeDurationFieldType_weeks(), OrgJodaTimeDurationFieldType_days() } count:3 type:OrgJodaTimeDurationFieldType_class_()], [IOSIntArray newArrayWithInts:(jint[]){ 0, -1, 1, 2, -1, -1, -1, -1 } count:8]);
    OrgJodaTimePeriodType_cYWD = type;
  }
  return type;
}

OrgJodaTimePeriodType *OrgJodaTimePeriodType_yearDayTime() {
  OrgJodaTimePeriodType_initialize();
  OrgJodaTimePeriodType *type = OrgJodaTimePeriodType_cYDTime;
  if (type == nil) {
    type = new_OrgJodaTimePeriodType_initWithNSString_withOrgJodaTimeDurationFieldTypeArray_withIntArray_(@"YearDayTime", [IOSObjectArray newArrayWithObjects:(id[]){ OrgJodaTimeDurationFieldType_years(), OrgJodaTimeDurationFieldType_days(), OrgJodaTimeDurationFieldType_hours(), OrgJodaTimeDurationFieldType_minutes(), OrgJodaTimeDurationFieldType_seconds(), OrgJodaTimeDurationFieldType_millis() } count:6 type:OrgJodaTimeDurationFieldType_class_()], [IOSIntArray newArrayWithInts:(jint[]){ 0, -1, -1, 1, 2, 3, 4, 5 } count:8]);
    OrgJodaTimePeriodType_cYDTime = type;
  }
  return type;
}

OrgJodaTimePeriodType *OrgJodaTimePeriodType_yearDay() {
  OrgJodaTimePeriodType_initialize();
  OrgJodaTimePeriodType *type = OrgJodaTimePeriodType_cYD;
  if (type == nil) {
    type = new_OrgJodaTimePeriodType_initWithNSString_withOrgJodaTimeDurationFieldTypeArray_withIntArray_(@"YearDay", [IOSObjectArray newArrayWithObjects:(id[]){ OrgJodaTimeDurationFieldType_years(), OrgJodaTimeDurationFieldType_days() } count:2 type:OrgJodaTimeDurationFieldType_class_()], [IOSIntArray newArrayWithInts:(jint[]){ 0, -1, -1, 1, -1, -1, -1, -1 } count:8]);
    OrgJodaTimePeriodType_cYD = type;
  }
  return type;
}

OrgJodaTimePeriodType *OrgJodaTimePeriodType_dayTime() {
  OrgJodaTimePeriodType_initialize();
  OrgJodaTimePeriodType *type = OrgJodaTimePeriodType_cDTime;
  if (type == nil) {
    type = new_OrgJodaTimePeriodType_initWithNSString_withOrgJodaTimeDurationFieldTypeArray_withIntArray_(@"DayTime", [IOSObjectArray newArrayWithObjects:(id[]){ OrgJodaTimeDurationFieldType_days(), OrgJodaTimeDurationFieldType_hours(), OrgJodaTimeDurationFieldType_minutes(), OrgJodaTimeDurationFieldType_seconds(), OrgJodaTimeDurationFieldType_millis() } count:5 type:OrgJodaTimeDurationFieldType_class_()], [IOSIntArray newArrayWithInts:(jint[]){ -1, -1, -1, 0, 1, 2, 3, 4 } count:8]);
    OrgJodaTimePeriodType_cDTime = type;
  }
  return type;
}

OrgJodaTimePeriodType *OrgJodaTimePeriodType_time() {
  OrgJodaTimePeriodType_initialize();
  OrgJodaTimePeriodType *type = OrgJodaTimePeriodType_cTime;
  if (type == nil) {
    type = new_OrgJodaTimePeriodType_initWithNSString_withOrgJodaTimeDurationFieldTypeArray_withIntArray_(@"Time", [IOSObjectArray newArrayWithObjects:(id[]){ OrgJodaTimeDurationFieldType_hours(), OrgJodaTimeDurationFieldType_minutes(), OrgJodaTimeDurationFieldType_seconds(), OrgJodaTimeDurationFieldType_millis() } count:4 type:OrgJodaTimeDurationFieldType_class_()], [IOSIntArray newArrayWithInts:(jint[]){ -1, -1, -1, -1, 0, 1, 2, 3 } count:8]);
    OrgJodaTimePeriodType_cTime = type;
  }
  return type;
}

OrgJodaTimePeriodType *OrgJodaTimePeriodType_years() {
  OrgJodaTimePeriodType_initialize();
  OrgJodaTimePeriodType *type = OrgJodaTimePeriodType_cYears;
  if (type == nil) {
    type = new_OrgJodaTimePeriodType_initWithNSString_withOrgJodaTimeDurationFieldTypeArray_withIntArray_(@"Years", [IOSObjectArray newArrayWithObjects:(id[]){ OrgJodaTimeDurationFieldType_years() } count:1 type:OrgJodaTimeDurationFieldType_class_()], [IOSIntArray newArrayWithInts:(jint[]){ 0, -1, -1, -1, -1, -1, -1, -1 } count:8]);
    OrgJodaTimePeriodType_cYears = type;
  }
  return type;
}

OrgJodaTimePeriodType *OrgJodaTimePeriodType_months() {
  OrgJodaTimePeriodType_initialize();
  OrgJodaTimePeriodType *type = OrgJodaTimePeriodType_cMonths;
  if (type == nil) {
    type = new_OrgJodaTimePeriodType_initWithNSString_withOrgJodaTimeDurationFieldTypeArray_withIntArray_(@"Months", [IOSObjectArray newArrayWithObjects:(id[]){ OrgJodaTimeDurationFieldType_months() } count:1 type:OrgJodaTimeDurationFieldType_class_()], [IOSIntArray newArrayWithInts:(jint[]){ -1, 0, -1, -1, -1, -1, -1, -1 } count:8]);
    OrgJodaTimePeriodType_cMonths = type;
  }
  return type;
}

OrgJodaTimePeriodType *OrgJodaTimePeriodType_weeks() {
  OrgJodaTimePeriodType_initialize();
  OrgJodaTimePeriodType *type = OrgJodaTimePeriodType_cWeeks;
  if (type == nil) {
    type = new_OrgJodaTimePeriodType_initWithNSString_withOrgJodaTimeDurationFieldTypeArray_withIntArray_(@"Weeks", [IOSObjectArray newArrayWithObjects:(id[]){ OrgJodaTimeDurationFieldType_weeks() } count:1 type:OrgJodaTimeDurationFieldType_class_()], [IOSIntArray newArrayWithInts:(jint[]){ -1, -1, 0, -1, -1, -1, -1, -1 } count:8]);
    OrgJodaTimePeriodType_cWeeks = type;
  }
  return type;
}

OrgJodaTimePeriodType *OrgJodaTimePeriodType_days() {
  OrgJodaTimePeriodType_initialize();
  OrgJodaTimePeriodType *type = OrgJodaTimePeriodType_cDays;
  if (type == nil) {
    type = new_OrgJodaTimePeriodType_initWithNSString_withOrgJodaTimeDurationFieldTypeArray_withIntArray_(@"Days", [IOSObjectArray newArrayWithObjects:(id[]){ OrgJodaTimeDurationFieldType_days() } count:1 type:OrgJodaTimeDurationFieldType_class_()], [IOSIntArray newArrayWithInts:(jint[]){ -1, -1, -1, 0, -1, -1, -1, -1 } count:8]);
    OrgJodaTimePeriodType_cDays = type;
  }
  return type;
}

OrgJodaTimePeriodType *OrgJodaTimePeriodType_hours() {
  OrgJodaTimePeriodType_initialize();
  OrgJodaTimePeriodType *type = OrgJodaTimePeriodType_cHours;
  if (type == nil) {
    type = new_OrgJodaTimePeriodType_initWithNSString_withOrgJodaTimeDurationFieldTypeArray_withIntArray_(@"Hours", [IOSObjectArray newArrayWithObjects:(id[]){ OrgJodaTimeDurationFieldType_hours() } count:1 type:OrgJodaTimeDurationFieldType_class_()], [IOSIntArray newArrayWithInts:(jint[]){ -1, -1, -1, -1, 0, -1, -1, -1 } count:8]);
    OrgJodaTimePeriodType_cHours = type;
  }
  return type;
}

OrgJodaTimePeriodType *OrgJodaTimePeriodType_minutes() {
  OrgJodaTimePeriodType_initialize();
  OrgJodaTimePeriodType *type = OrgJodaTimePeriodType_cMinutes;
  if (type == nil) {
    type = new_OrgJodaTimePeriodType_initWithNSString_withOrgJodaTimeDurationFieldTypeArray_withIntArray_(@"Minutes", [IOSObjectArray newArrayWithObjects:(id[]){ OrgJodaTimeDurationFieldType_minutes() } count:1 type:OrgJodaTimeDurationFieldType_class_()], [IOSIntArray newArrayWithInts:(jint[]){ -1, -1, -1, -1, -1, 0, -1, -1 } count:8]);
    OrgJodaTimePeriodType_cMinutes = type;
  }
  return type;
}

OrgJodaTimePeriodType *OrgJodaTimePeriodType_seconds() {
  OrgJodaTimePeriodType_initialize();
  OrgJodaTimePeriodType *type = OrgJodaTimePeriodType_cSeconds;
  if (type == nil) {
    type = new_OrgJodaTimePeriodType_initWithNSString_withOrgJodaTimeDurationFieldTypeArray_withIntArray_(@"Seconds", [IOSObjectArray newArrayWithObjects:(id[]){ OrgJodaTimeDurationFieldType_seconds() } count:1 type:OrgJodaTimeDurationFieldType_class_()], [IOSIntArray newArrayWithInts:(jint[]){ -1, -1, -1, -1, -1, -1, 0, -1 } count:8]);
    OrgJodaTimePeriodType_cSeconds = type;
  }
  return type;
}

OrgJodaTimePeriodType *OrgJodaTimePeriodType_millis() {
  OrgJodaTimePeriodType_initialize();
  OrgJodaTimePeriodType *type = OrgJodaTimePeriodType_cMillis;
  if (type == nil) {
    type = new_OrgJodaTimePeriodType_initWithNSString_withOrgJodaTimeDurationFieldTypeArray_withIntArray_(@"Millis", [IOSObjectArray newArrayWithObjects:(id[]){ OrgJodaTimeDurationFieldType_millis() } count:1 type:OrgJodaTimeDurationFieldType_class_()], [IOSIntArray newArrayWithInts:(jint[]){ -1, -1, -1, -1, -1, -1, -1, 0 } count:8]);
    OrgJodaTimePeriodType_cMillis = type;
  }
  return type;
}

OrgJodaTimePeriodType *OrgJodaTimePeriodType_forFieldsWithOrgJodaTimeDurationFieldTypeArray_(IOSObjectArray *types) {
  OrgJodaTimePeriodType_initialize();
  @synchronized(OrgJodaTimePeriodType_class_()) {
    if (types == nil || types->size_ == 0) {
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Types array must not be null or empty");
    }
    for (jint i = 0; i < types->size_; i++) {
      if (IOSObjectArray_Get(types, i) == nil) {
        @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Types array must not contain null");
      }
    }
    id<JavaUtilMap> cache = OrgJodaTimePeriodType_cTypes;
    if ([((id<JavaUtilMap>) nil_chk(cache)) isEmpty]) {
      (void) [cache putWithId:OrgJodaTimePeriodType_standard() withId:OrgJodaTimePeriodType_standard()];
      (void) [cache putWithId:OrgJodaTimePeriodType_yearMonthDayTime() withId:OrgJodaTimePeriodType_yearMonthDayTime()];
      (void) [cache putWithId:OrgJodaTimePeriodType_yearMonthDay() withId:OrgJodaTimePeriodType_yearMonthDay()];
      (void) [cache putWithId:OrgJodaTimePeriodType_yearWeekDayTime() withId:OrgJodaTimePeriodType_yearWeekDayTime()];
      (void) [cache putWithId:OrgJodaTimePeriodType_yearWeekDay() withId:OrgJodaTimePeriodType_yearWeekDay()];
      (void) [cache putWithId:OrgJodaTimePeriodType_yearDayTime() withId:OrgJodaTimePeriodType_yearDayTime()];
      (void) [cache putWithId:OrgJodaTimePeriodType_yearDay() withId:OrgJodaTimePeriodType_yearDay()];
      (void) [cache putWithId:OrgJodaTimePeriodType_dayTime() withId:OrgJodaTimePeriodType_dayTime()];
      (void) [cache putWithId:OrgJodaTimePeriodType_time() withId:OrgJodaTimePeriodType_time()];
      (void) [cache putWithId:OrgJodaTimePeriodType_years() withId:OrgJodaTimePeriodType_years()];
      (void) [cache putWithId:OrgJodaTimePeriodType_months() withId:OrgJodaTimePeriodType_months()];
      (void) [cache putWithId:OrgJodaTimePeriodType_weeks() withId:OrgJodaTimePeriodType_weeks()];
      (void) [cache putWithId:OrgJodaTimePeriodType_days() withId:OrgJodaTimePeriodType_days()];
      (void) [cache putWithId:OrgJodaTimePeriodType_hours() withId:OrgJodaTimePeriodType_hours()];
      (void) [cache putWithId:OrgJodaTimePeriodType_minutes() withId:OrgJodaTimePeriodType_minutes()];
      (void) [cache putWithId:OrgJodaTimePeriodType_seconds() withId:OrgJodaTimePeriodType_seconds()];
      (void) [cache putWithId:OrgJodaTimePeriodType_millis() withId:OrgJodaTimePeriodType_millis()];
    }
    OrgJodaTimePeriodType *inPartType = new_OrgJodaTimePeriodType_initWithNSString_withOrgJodaTimeDurationFieldTypeArray_withIntArray_(nil, types, nil);
    id cached = [cache getWithId:inPartType];
    if ([cached isKindOfClass:[OrgJodaTimePeriodType class]]) {
      return (OrgJodaTimePeriodType *) cast_chk(cached, [OrgJodaTimePeriodType class]);
    }
    if (cached != nil) {
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@", @"PeriodType does not support fields: ", cached));
    }
    OrgJodaTimePeriodType *type = OrgJodaTimePeriodType_standard();
    id<JavaUtilList> list = new_JavaUtilArrayList_initWithJavaUtilCollection_(JavaUtilArrays_asListWithNSObjectArray_(types));
    if ([list removeWithId:OrgJodaTimeDurationFieldType_years()] == false) {
      type = [((OrgJodaTimePeriodType *) nil_chk(type)) withYearsRemoved];
    }
    if ([list removeWithId:OrgJodaTimeDurationFieldType_months()] == false) {
      type = [((OrgJodaTimePeriodType *) nil_chk(type)) withMonthsRemoved];
    }
    if ([list removeWithId:OrgJodaTimeDurationFieldType_weeks()] == false) {
      type = [((OrgJodaTimePeriodType *) nil_chk(type)) withWeeksRemoved];
    }
    if ([list removeWithId:OrgJodaTimeDurationFieldType_days()] == false) {
      type = [((OrgJodaTimePeriodType *) nil_chk(type)) withDaysRemoved];
    }
    if ([list removeWithId:OrgJodaTimeDurationFieldType_hours()] == false) {
      type = [((OrgJodaTimePeriodType *) nil_chk(type)) withHoursRemoved];
    }
    if ([list removeWithId:OrgJodaTimeDurationFieldType_minutes()] == false) {
      type = [((OrgJodaTimePeriodType *) nil_chk(type)) withMinutesRemoved];
    }
    if ([list removeWithId:OrgJodaTimeDurationFieldType_seconds()] == false) {
      type = [((OrgJodaTimePeriodType *) nil_chk(type)) withSecondsRemoved];
    }
    if ([list removeWithId:OrgJodaTimeDurationFieldType_millis()] == false) {
      type = [((OrgJodaTimePeriodType *) nil_chk(type)) withMillisRemoved];
    }
    if ([list size] > 0) {
      (void) [cache putWithId:inPartType withId:list];
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@", @"PeriodType does not support fields: ", list));
    }
    OrgJodaTimePeriodType *checkPartType = new_OrgJodaTimePeriodType_initWithNSString_withOrgJodaTimeDurationFieldTypeArray_withIntArray_(nil, ((OrgJodaTimePeriodType *) nil_chk(type))->iTypes_, nil);
    OrgJodaTimePeriodType *checkedType = (OrgJodaTimePeriodType *) cast_chk([cache getWithId:checkPartType], [OrgJodaTimePeriodType class]);
    if (checkedType != nil) {
      (void) [cache putWithId:checkPartType withId:checkedType];
      return checkedType;
    }
    (void) [cache putWithId:checkPartType withId:type];
    return type;
  }
}

void OrgJodaTimePeriodType_initWithNSString_withOrgJodaTimeDurationFieldTypeArray_withIntArray_(OrgJodaTimePeriodType *self, NSString *name, IOSObjectArray *types, IOSIntArray *indices) {
  NSObject_init(self);
  self->iName_ = name;
  self->iTypes_ = types;
  self->iIndices_ = indices;
}

OrgJodaTimePeriodType *new_OrgJodaTimePeriodType_initWithNSString_withOrgJodaTimeDurationFieldTypeArray_withIntArray_(NSString *name, IOSObjectArray *types, IOSIntArray *indices) {
  J2OBJC_NEW_IMPL(OrgJodaTimePeriodType, initWithNSString_withOrgJodaTimeDurationFieldTypeArray_withIntArray_, name, types, indices)
}

OrgJodaTimePeriodType *create_OrgJodaTimePeriodType_initWithNSString_withOrgJodaTimeDurationFieldTypeArray_withIntArray_(NSString *name, IOSObjectArray *types, IOSIntArray *indices) {
  J2OBJC_CREATE_IMPL(OrgJodaTimePeriodType, initWithNSString_withOrgJodaTimeDurationFieldTypeArray_withIntArray_, name, types, indices)
}

OrgJodaTimePeriodType *OrgJodaTimePeriodType_withFieldRemovedWithInt_withNSString_(OrgJodaTimePeriodType *self, jint indicesIndex, NSString *name) {
  jint fieldIndex = IOSIntArray_Get(nil_chk(self->iIndices_), indicesIndex);
  if (fieldIndex == -1) {
    return self;
  }
  IOSObjectArray *types = [IOSObjectArray newArrayWithLength:[self size] - 1 type:OrgJodaTimeDurationFieldType_class_()];
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(self->iTypes_))->size_; i++) {
    if (i < fieldIndex) {
      (void) IOSObjectArray_Set(types, i, IOSObjectArray_Get(self->iTypes_, i));
    }
    else if (i > fieldIndex) {
      (void) IOSObjectArray_Set(types, i - 1, IOSObjectArray_Get(self->iTypes_, i));
    }
  }
  IOSIntArray *indices = [IOSIntArray newArrayWithLength:8];
  for (jint i = 0; i < indices->size_; i++) {
    if (i < indicesIndex) {
      *IOSIntArray_GetRef(indices, i) = IOSIntArray_Get(self->iIndices_, i);
    }
    else if (i > indicesIndex) {
      *IOSIntArray_GetRef(indices, i) = (IOSIntArray_Get(self->iIndices_, i) == -1 ? -1 : IOSIntArray_Get(self->iIndices_, i) - 1);
    }
    else {
      *IOSIntArray_GetRef(indices, i) = -1;
    }
  }
  return new_OrgJodaTimePeriodType_initWithNSString_withOrgJodaTimeDurationFieldTypeArray_withIntArray_(JreStrcat("$$", [self getName], name), types, indices);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimePeriodType)
