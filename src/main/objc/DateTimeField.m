//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/eric/repos/360-j2objc/joda-time/build/mainTranslationExtraction/org/joda/time/DateTimeField.java
//

#include "DateTimeField.h"
#include "DateTimeFieldType.h"
#include "DurationField.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "ReadablePartial.h"
#include "java/util/Locale.h"

@implementation OrgJodaTimeDateTimeField

- (OrgJodaTimeDateTimeFieldType *)getType {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)getName {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)isSupported {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)isLenient {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)getWithLong:(jlong)instant {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)getAsTextWithLong:(jlong)instant
             withJavaUtilLocale:(JavaUtilLocale *)locale {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)getAsTextWithLong:(jlong)instant {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)getAsTextWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
                                              withInt:(jint)fieldValue
                                   withJavaUtilLocale:(JavaUtilLocale *)locale {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)getAsTextWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
                                   withJavaUtilLocale:(JavaUtilLocale *)locale {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)getAsTextWithInt:(jint)fieldValue
            withJavaUtilLocale:(JavaUtilLocale *)locale {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)getAsShortTextWithLong:(jlong)instant
                  withJavaUtilLocale:(JavaUtilLocale *)locale {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)getAsShortTextWithLong:(jlong)instant {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)getAsShortTextWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
                                                   withInt:(jint)fieldValue
                                        withJavaUtilLocale:(JavaUtilLocale *)locale {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)getAsShortTextWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
                                        withJavaUtilLocale:(JavaUtilLocale *)locale {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)getAsShortTextWithInt:(jint)fieldValue
                 withJavaUtilLocale:(JavaUtilLocale *)locale {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jlong)addWithLong:(jlong)instant
             withInt:(jint)value {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jlong)addWithLong:(jlong)instant
            withLong:(jlong)value {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (IOSIntArray *)addWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                           withInt:(jint)fieldIndex
                                      withIntArray:(IOSIntArray *)values
                                           withInt:(jint)valueToAdd {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (IOSIntArray *)addWrapPartialWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                                      withInt:(jint)fieldIndex
                                                 withIntArray:(IOSIntArray *)values
                                                      withInt:(jint)valueToAdd {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jlong)addWrapFieldWithLong:(jlong)instant
                      withInt:(jint)value {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (IOSIntArray *)addWrapFieldWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                                    withInt:(jint)fieldIndex
                                               withIntArray:(IOSIntArray *)values
                                                    withInt:(jint)valueToAdd {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)getDifferenceWithLong:(jlong)minuendInstant
                     withLong:(jlong)subtrahendInstant {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jlong)getDifferenceAsLongWithLong:(jlong)minuendInstant
                            withLong:(jlong)subtrahendInstant {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jlong)setWithLong:(jlong)instant
             withInt:(jint)value {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jlong)setExtendedWithLong:(jlong)instant
                     withInt:(jint)value {
  return [self setWithLong:instant withInt:value];
}

- (IOSIntArray *)setWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                           withInt:(jint)fieldIndex
                                      withIntArray:(IOSIntArray *)values
                                           withInt:(jint)newValue {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jlong)setWithLong:(jlong)instant
        withNSString:(NSString *)text
  withJavaUtilLocale:(JavaUtilLocale *)locale {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jlong)setWithLong:(jlong)instant
        withNSString:(NSString *)text {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (IOSIntArray *)setWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                           withInt:(jint)fieldIndex
                                      withIntArray:(IOSIntArray *)values
                                      withNSString:(NSString *)text
                                withJavaUtilLocale:(JavaUtilLocale *)locale {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgJodaTimeDurationField *)getDurationField {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgJodaTimeDurationField *)getRangeDurationField {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)isLeapWithLong:(jlong)instant {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)getLeapAmountWithLong:(jlong)instant {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgJodaTimeDurationField *)getLeapDurationField {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)getMinimumValue {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)getMinimumValueWithLong:(jlong)instant {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)getMinimumValueWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)getMinimumValueWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                         withIntArray:(IOSIntArray *)values {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)getMaximumValue {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)getMaximumValueWithLong:(jlong)instant {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)getMaximumValueWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)getMaximumValueWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                         withIntArray:(IOSIntArray *)values {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)getMaximumTextLengthWithJavaUtilLocale:(JavaUtilLocale *)locale {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)getMaximumShortTextLengthWithJavaUtilLocale:(JavaUtilLocale *)locale {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jlong)roundFloorWithLong:(jlong)instant {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jlong)roundCeilingWithLong:(jlong)instant {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jlong)roundHalfFloorWithLong:(jlong)instant {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jlong)roundHalfCeilingWithLong:(jlong)instant {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jlong)roundHalfEvenWithLong:(jlong)instant {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jlong)remainderWithLong:(jlong)instant {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)description {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJodaTimeDateTimeField_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgJodaTimeDateTimeFieldType;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, 2, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, 2, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, 2, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, 2, 5, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, 2, 6, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, 7, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, 7, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, 7, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, 7, 5, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, 7, 6, -1, -1, -1, -1 },
    { NULL, "J", 0x401, 8, 9, -1, -1, -1, -1 },
    { NULL, "J", 0x401, 8, 10, -1, -1, -1, -1 },
    { NULL, "[I", 0x401, 8, 11, -1, -1, -1, -1 },
    { NULL, "[I", 0x401, 12, 11, -1, -1, -1, -1 },
    { NULL, "J", 0x401, 13, 9, -1, -1, -1, -1 },
    { NULL, "[I", 0x401, 13, 11, -1, -1, -1, -1 },
    { NULL, "I", 0x401, 14, 10, -1, -1, -1, -1 },
    { NULL, "J", 0x401, 15, 10, -1, -1, -1, -1 },
    { NULL, "J", 0x401, 16, 9, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 17, 9, -1, -1, -1, -1 },
    { NULL, "[I", 0x401, 16, 11, -1, -1, -1, -1 },
    { NULL, "J", 0x401, 16, 18, -1, -1, -1, -1 },
    { NULL, "J", 0x401, 16, 19, -1, -1, -1, -1 },
    { NULL, "[I", 0x401, 16, 20, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDurationField;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDurationField;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 21, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, 22, 1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDurationField;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, 23, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, 23, 24, -1, -1, -1, -1 },
    { NULL, "I", 0x401, 23, 25, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, 26, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, 26, 24, -1, -1, -1, -1 },
    { NULL, "I", 0x401, 26, 25, -1, -1, -1, -1 },
    { NULL, "I", 0x401, 27, 28, -1, -1, -1, -1 },
    { NULL, "I", 0x401, 29, 28, -1, -1, -1, -1 },
    { NULL, "J", 0x401, 30, 1, -1, -1, -1, -1 },
    { NULL, "J", 0x401, 31, 1, -1, -1, -1, -1 },
    { NULL, "J", 0x401, 32, 1, -1, -1, -1, -1 },
    { NULL, "J", 0x401, 33, 1, -1, -1, -1, -1 },
    { NULL, "J", 0x401, 34, 1, -1, -1, -1, -1 },
    { NULL, "J", 0x401, 35, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, 36, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(getName);
  methods[2].selector = @selector(isSupported);
  methods[3].selector = @selector(isLenient);
  methods[4].selector = @selector(getWithLong:);
  methods[5].selector = @selector(getAsTextWithLong:withJavaUtilLocale:);
  methods[6].selector = @selector(getAsTextWithLong:);
  methods[7].selector = @selector(getAsTextWithOrgJodaTimeReadablePartial:withInt:withJavaUtilLocale:);
  methods[8].selector = @selector(getAsTextWithOrgJodaTimeReadablePartial:withJavaUtilLocale:);
  methods[9].selector = @selector(getAsTextWithInt:withJavaUtilLocale:);
  methods[10].selector = @selector(getAsShortTextWithLong:withJavaUtilLocale:);
  methods[11].selector = @selector(getAsShortTextWithLong:);
  methods[12].selector = @selector(getAsShortTextWithOrgJodaTimeReadablePartial:withInt:withJavaUtilLocale:);
  methods[13].selector = @selector(getAsShortTextWithOrgJodaTimeReadablePartial:withJavaUtilLocale:);
  methods[14].selector = @selector(getAsShortTextWithInt:withJavaUtilLocale:);
  methods[15].selector = @selector(addWithLong:withInt:);
  methods[16].selector = @selector(addWithLong:withLong:);
  methods[17].selector = @selector(addWithOrgJodaTimeReadablePartial:withInt:withIntArray:withInt:);
  methods[18].selector = @selector(addWrapPartialWithOrgJodaTimeReadablePartial:withInt:withIntArray:withInt:);
  methods[19].selector = @selector(addWrapFieldWithLong:withInt:);
  methods[20].selector = @selector(addWrapFieldWithOrgJodaTimeReadablePartial:withInt:withIntArray:withInt:);
  methods[21].selector = @selector(getDifferenceWithLong:withLong:);
  methods[22].selector = @selector(getDifferenceAsLongWithLong:withLong:);
  methods[23].selector = @selector(setWithLong:withInt:);
  methods[24].selector = @selector(setExtendedWithLong:withInt:);
  methods[25].selector = @selector(setWithOrgJodaTimeReadablePartial:withInt:withIntArray:withInt:);
  methods[26].selector = @selector(setWithLong:withNSString:withJavaUtilLocale:);
  methods[27].selector = @selector(setWithLong:withNSString:);
  methods[28].selector = @selector(setWithOrgJodaTimeReadablePartial:withInt:withIntArray:withNSString:withJavaUtilLocale:);
  methods[29].selector = @selector(getDurationField);
  methods[30].selector = @selector(getRangeDurationField);
  methods[31].selector = @selector(isLeapWithLong:);
  methods[32].selector = @selector(getLeapAmountWithLong:);
  methods[33].selector = @selector(getLeapDurationField);
  methods[34].selector = @selector(getMinimumValue);
  methods[35].selector = @selector(getMinimumValueWithLong:);
  methods[36].selector = @selector(getMinimumValueWithOrgJodaTimeReadablePartial:);
  methods[37].selector = @selector(getMinimumValueWithOrgJodaTimeReadablePartial:withIntArray:);
  methods[38].selector = @selector(getMaximumValue);
  methods[39].selector = @selector(getMaximumValueWithLong:);
  methods[40].selector = @selector(getMaximumValueWithOrgJodaTimeReadablePartial:);
  methods[41].selector = @selector(getMaximumValueWithOrgJodaTimeReadablePartial:withIntArray:);
  methods[42].selector = @selector(getMaximumTextLengthWithJavaUtilLocale:);
  methods[43].selector = @selector(getMaximumShortTextLengthWithJavaUtilLocale:);
  methods[44].selector = @selector(roundFloorWithLong:);
  methods[45].selector = @selector(roundCeilingWithLong:);
  methods[46].selector = @selector(roundHalfFloorWithLong:);
  methods[47].selector = @selector(roundHalfCeilingWithLong:);
  methods[48].selector = @selector(roundHalfEvenWithLong:);
  methods[49].selector = @selector(remainderWithLong:);
  methods[50].selector = @selector(description);
  methods[51].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "get", "J", "getAsText", "JLJavaUtilLocale;", "LOrgJodaTimeReadablePartial;ILJavaUtilLocale;", "LOrgJodaTimeReadablePartial;LJavaUtilLocale;", "ILJavaUtilLocale;", "getAsShortText", "add", "JI", "JJ", "LOrgJodaTimeReadablePartial;I[II", "addWrapPartial", "addWrapField", "getDifference", "getDifferenceAsLong", "set", "setExtended", "JLNSString;LJavaUtilLocale;", "JLNSString;", "LOrgJodaTimeReadablePartial;I[ILNSString;LJavaUtilLocale;", "isLeap", "getLeapAmount", "getMinimumValue", "LOrgJodaTimeReadablePartial;", "LOrgJodaTimeReadablePartial;[I", "getMaximumValue", "getMaximumTextLength", "LJavaUtilLocale;", "getMaximumShortTextLength", "roundFloor", "roundCeiling", "roundHalfFloor", "roundHalfCeiling", "roundHalfEven", "remainder", "toString" };
  static const J2ObjcClassInfo _OrgJodaTimeDateTimeField = { "DateTimeField", "org.joda.time", ptrTable, methods, NULL, 7, 0x401, 52, 0, -1, -1, -1, -1, -1 };
  return &_OrgJodaTimeDateTimeField;
}

@end

void OrgJodaTimeDateTimeField_init(OrgJodaTimeDateTimeField *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeDateTimeField)
