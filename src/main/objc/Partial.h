//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/eric/repos/360-j2objc/joda-time/build/mainTranslationExtraction/org/joda/time/Partial.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Partial")
#ifdef RESTRICT_Partial
#define INCLUDE_ALL_Partial 0
#else
#define INCLUDE_ALL_Partial 1
#endif
#undef RESTRICT_Partial

#if !defined (OrgJodaTimePartial_) && (INCLUDE_ALL_Partial || defined(INCLUDE_OrgJodaTimePartial))
#define OrgJodaTimePartial_

#define RESTRICT_AbstractPartial 1
#define INCLUDE_OrgJodaTimeBaseAbstractPartial 1
#include "AbstractPartial.h"

#define RESTRICT_ReadablePartial 1
#define INCLUDE_OrgJodaTimeReadablePartial 1
#include "ReadablePartial.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class IOSIntArray;
@class IOSObjectArray;
@class JavaUtilLocale;
@class OrgJodaTimeChronology;
@class OrgJodaTimeDateTimeField;
@class OrgJodaTimeDateTimeFieldType;
@class OrgJodaTimeDurationFieldType;
@class OrgJodaTimeFormatDateTimeFormatter;
@class OrgJodaTimePartial_Property;
@protocol OrgJodaTimeReadableInstant;
@protocol OrgJodaTimeReadablePeriod;

@interface OrgJodaTimePartial : OrgJodaTimeBaseAbstractPartial < OrgJodaTimeReadablePartial, JavaIoSerializable >

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono;

- (instancetype)initWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)type
                                             withInt:(jint)value;

- (instancetype)initWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)type
                                             withInt:(jint)value
                           withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology;

- (instancetype)initWithOrgJodaTimeDateTimeFieldTypeArray:(IOSObjectArray *)types
                                             withIntArray:(IOSIntArray *)values;

- (instancetype)initWithOrgJodaTimeDateTimeFieldTypeArray:(IOSObjectArray *)types
                                             withIntArray:(IOSIntArray *)values
                                withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology;

- (instancetype)initWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial;

- (OrgJodaTimeChronology *)getChronology;

- (OrgJodaTimeDateTimeFieldType *)getFieldTypeWithInt:(jint)index;

- (IOSObjectArray *)getFieldTypes;

- (OrgJodaTimeFormatDateTimeFormatter *)getFormatter;

- (jint)getValueWithInt:(jint)index;

- (IOSIntArray *)getValues;

- (jboolean)isMatchWithOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)instant;

- (jboolean)isMatchWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial;

- (OrgJodaTimePartial *)minusWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period;

- (OrgJodaTimePartial *)plusWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period;

- (OrgJodaTimePartial_Property *)propertyWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)type;

- (jint)size;

- (NSString *)description;

- (NSString *)toStringWithNSString:(NSString *)pattern;

- (NSString *)toStringWithNSString:(NSString *)pattern
                withJavaUtilLocale:(JavaUtilLocale *)locale;

- (NSString *)toStringList;

- (OrgJodaTimePartial *)withWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)fieldType
                                                     withInt:(jint)value;

- (OrgJodaTimePartial *)withChronologyRetainFieldsWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)newChronology;

- (OrgJodaTimePartial *)withFieldWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)fieldType
                                                          withInt:(jint)value;

- (OrgJodaTimePartial *)withFieldAddedWithOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)fieldType
                                                               withInt:(jint)amount;

- (OrgJodaTimePartial *)withFieldAddWrappedWithOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)fieldType
                                                                    withInt:(jint)amount;

- (OrgJodaTimePartial *)withoutWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)fieldType;

- (OrgJodaTimePartial *)withPeriodAddedWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period
                                                             withInt:(jint)scalar;

#pragma mark Protected

- (OrgJodaTimeDateTimeField *)getFieldWithInt:(jint)index
                    withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono;

#pragma mark Package-Private

- (instancetype)initWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology
        withOrgJodaTimeDateTimeFieldTypeArray:(IOSObjectArray *)types
                                 withIntArray:(IOSIntArray *)values;

- (instancetype)initWithOrgJodaTimePartial:(OrgJodaTimePartial *)partial
                              withIntArray:(IOSIntArray *)values;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimePartial)

FOUNDATION_EXPORT void OrgJodaTimePartial_init(OrgJodaTimePartial *self);

FOUNDATION_EXPORT OrgJodaTimePartial *new_OrgJodaTimePartial_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimePartial *create_OrgJodaTimePartial_init();

FOUNDATION_EXPORT void OrgJodaTimePartial_initWithOrgJodaTimeChronology_(OrgJodaTimePartial *self, OrgJodaTimeChronology *chrono);

FOUNDATION_EXPORT OrgJodaTimePartial *new_OrgJodaTimePartial_initWithOrgJodaTimeChronology_(OrgJodaTimeChronology *chrono) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimePartial *create_OrgJodaTimePartial_initWithOrgJodaTimeChronology_(OrgJodaTimeChronology *chrono);

FOUNDATION_EXPORT void OrgJodaTimePartial_initWithOrgJodaTimeDateTimeFieldType_withInt_(OrgJodaTimePartial *self, OrgJodaTimeDateTimeFieldType *type, jint value);

FOUNDATION_EXPORT OrgJodaTimePartial *new_OrgJodaTimePartial_initWithOrgJodaTimeDateTimeFieldType_withInt_(OrgJodaTimeDateTimeFieldType *type, jint value) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimePartial *create_OrgJodaTimePartial_initWithOrgJodaTimeDateTimeFieldType_withInt_(OrgJodaTimeDateTimeFieldType *type, jint value);

FOUNDATION_EXPORT void OrgJodaTimePartial_initWithOrgJodaTimeDateTimeFieldType_withInt_withOrgJodaTimeChronology_(OrgJodaTimePartial *self, OrgJodaTimeDateTimeFieldType *type, jint value, OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT OrgJodaTimePartial *new_OrgJodaTimePartial_initWithOrgJodaTimeDateTimeFieldType_withInt_withOrgJodaTimeChronology_(OrgJodaTimeDateTimeFieldType *type, jint value, OrgJodaTimeChronology *chronology) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimePartial *create_OrgJodaTimePartial_initWithOrgJodaTimeDateTimeFieldType_withInt_withOrgJodaTimeChronology_(OrgJodaTimeDateTimeFieldType *type, jint value, OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT void OrgJodaTimePartial_initWithOrgJodaTimeDateTimeFieldTypeArray_withIntArray_(OrgJodaTimePartial *self, IOSObjectArray *types, IOSIntArray *values);

FOUNDATION_EXPORT OrgJodaTimePartial *new_OrgJodaTimePartial_initWithOrgJodaTimeDateTimeFieldTypeArray_withIntArray_(IOSObjectArray *types, IOSIntArray *values) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimePartial *create_OrgJodaTimePartial_initWithOrgJodaTimeDateTimeFieldTypeArray_withIntArray_(IOSObjectArray *types, IOSIntArray *values);

FOUNDATION_EXPORT void OrgJodaTimePartial_initWithOrgJodaTimeDateTimeFieldTypeArray_withIntArray_withOrgJodaTimeChronology_(OrgJodaTimePartial *self, IOSObjectArray *types, IOSIntArray *values, OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT OrgJodaTimePartial *new_OrgJodaTimePartial_initWithOrgJodaTimeDateTimeFieldTypeArray_withIntArray_withOrgJodaTimeChronology_(IOSObjectArray *types, IOSIntArray *values, OrgJodaTimeChronology *chronology) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimePartial *create_OrgJodaTimePartial_initWithOrgJodaTimeDateTimeFieldTypeArray_withIntArray_withOrgJodaTimeChronology_(IOSObjectArray *types, IOSIntArray *values, OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT void OrgJodaTimePartial_initWithOrgJodaTimeReadablePartial_(OrgJodaTimePartial *self, id<OrgJodaTimeReadablePartial> partial);

FOUNDATION_EXPORT OrgJodaTimePartial *new_OrgJodaTimePartial_initWithOrgJodaTimeReadablePartial_(id<OrgJodaTimeReadablePartial> partial) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimePartial *create_OrgJodaTimePartial_initWithOrgJodaTimeReadablePartial_(id<OrgJodaTimeReadablePartial> partial);

FOUNDATION_EXPORT void OrgJodaTimePartial_initWithOrgJodaTimePartial_withIntArray_(OrgJodaTimePartial *self, OrgJodaTimePartial *partial, IOSIntArray *values);

FOUNDATION_EXPORT OrgJodaTimePartial *new_OrgJodaTimePartial_initWithOrgJodaTimePartial_withIntArray_(OrgJodaTimePartial *partial, IOSIntArray *values) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimePartial *create_OrgJodaTimePartial_initWithOrgJodaTimePartial_withIntArray_(OrgJodaTimePartial *partial, IOSIntArray *values);

FOUNDATION_EXPORT void OrgJodaTimePartial_initWithOrgJodaTimeChronology_withOrgJodaTimeDateTimeFieldTypeArray_withIntArray_(OrgJodaTimePartial *self, OrgJodaTimeChronology *chronology, IOSObjectArray *types, IOSIntArray *values);

FOUNDATION_EXPORT OrgJodaTimePartial *new_OrgJodaTimePartial_initWithOrgJodaTimeChronology_withOrgJodaTimeDateTimeFieldTypeArray_withIntArray_(OrgJodaTimeChronology *chronology, IOSObjectArray *types, IOSIntArray *values) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimePartial *create_OrgJodaTimePartial_initWithOrgJodaTimeChronology_withOrgJodaTimeDateTimeFieldTypeArray_withIntArray_(OrgJodaTimeChronology *chronology, IOSObjectArray *types, IOSIntArray *values);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimePartial)

#endif

#if !defined (OrgJodaTimePartial_Property_) && (INCLUDE_ALL_Partial || defined(INCLUDE_OrgJodaTimePartial_Property))
#define OrgJodaTimePartial_Property_

#define RESTRICT_AbstractPartialFieldProperty 1
#define INCLUDE_OrgJodaTimeFieldAbstractPartialFieldProperty 1
#include "AbstractPartialFieldProperty.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class JavaUtilLocale;
@class OrgJodaTimeDateTimeField;
@class OrgJodaTimePartial;
@protocol OrgJodaTimeReadablePartial;

@interface OrgJodaTimePartial_Property : OrgJodaTimeFieldAbstractPartialFieldProperty < JavaIoSerializable >

#pragma mark Public

- (OrgJodaTimePartial *)addToCopyWithInt:(jint)valueToAdd;

- (OrgJodaTimePartial *)addWrapFieldToCopyWithInt:(jint)valueToAdd;

- (jint)get;

- (OrgJodaTimeDateTimeField *)getField;

- (OrgJodaTimePartial *)getPartial;

- (OrgJodaTimePartial *)setCopyWithInt:(jint)value;

- (OrgJodaTimePartial *)setCopyWithNSString:(NSString *)text;

- (OrgJodaTimePartial *)setCopyWithNSString:(NSString *)text
                         withJavaUtilLocale:(JavaUtilLocale *)locale;

- (OrgJodaTimePartial *)withMaximumValue;

- (OrgJodaTimePartial *)withMinimumValue;

#pragma mark Protected

- (id<OrgJodaTimeReadablePartial>)getReadablePartial;

#pragma mark Package-Private

- (instancetype)initWithOrgJodaTimePartial:(OrgJodaTimePartial *)partial
                                   withInt:(jint)fieldIndex;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimePartial_Property)

FOUNDATION_EXPORT void OrgJodaTimePartial_Property_initWithOrgJodaTimePartial_withInt_(OrgJodaTimePartial_Property *self, OrgJodaTimePartial *partial, jint fieldIndex);

FOUNDATION_EXPORT OrgJodaTimePartial_Property *new_OrgJodaTimePartial_Property_initWithOrgJodaTimePartial_withInt_(OrgJodaTimePartial *partial, jint fieldIndex) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimePartial_Property *create_OrgJodaTimePartial_Property_initWithOrgJodaTimePartial_withInt_(OrgJodaTimePartial *partial, jint fieldIndex);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimePartial_Property)

#endif

#pragma pop_macro("INCLUDE_ALL_Partial")
