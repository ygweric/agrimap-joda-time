//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/eric/repos/360-j2objc/joda-time/build/mainTranslationExtraction/org/joda/time/chrono/BasicWeekOfWeekyearDateTimeField.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_BasicWeekOfWeekyearDateTimeField")
#ifdef RESTRICT_BasicWeekOfWeekyearDateTimeField
#define INCLUDE_ALL_BasicWeekOfWeekyearDateTimeField 0
#else
#define INCLUDE_ALL_BasicWeekOfWeekyearDateTimeField 1
#endif
#undef RESTRICT_BasicWeekOfWeekyearDateTimeField

#if !defined (OrgJodaTimeChronoBasicWeekOfWeekyearDateTimeField_) && (INCLUDE_ALL_BasicWeekOfWeekyearDateTimeField || defined(INCLUDE_OrgJodaTimeChronoBasicWeekOfWeekyearDateTimeField))
#define OrgJodaTimeChronoBasicWeekOfWeekyearDateTimeField_

#define RESTRICT_PreciseDurationDateTimeField 1
#define INCLUDE_OrgJodaTimeFieldPreciseDurationDateTimeField 1
#include "PreciseDurationDateTimeField.h"

@class IOSIntArray;
@class OrgJodaTimeChronoBasicChronology;
@class OrgJodaTimeDurationField;
@protocol OrgJodaTimeReadablePartial;

@interface OrgJodaTimeChronoBasicWeekOfWeekyearDateTimeField : OrgJodaTimeFieldPreciseDurationDateTimeField

#pragma mark Public

- (jint)getWithLong:(jlong)instant;

- (jint)getMaximumValue;

- (jint)getMaximumValueWithLong:(jlong)instant;

- (jint)getMaximumValueWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial;

- (jint)getMaximumValueWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
                                         withIntArray:(IOSIntArray *)values;

- (jint)getMinimumValue;

- (OrgJodaTimeDurationField *)getRangeDurationField;

- (jlong)remainderWithLong:(jlong)instant;

- (jlong)roundCeilingWithLong:(jlong)instant;

- (jlong)roundFloorWithLong:(jlong)instant;

#pragma mark Protected

- (jint)getMaximumValueForSetWithLong:(jlong)instant
                              withInt:(jint)value;

#pragma mark Package-Private

- (instancetype)initWithOrgJodaTimeChronoBasicChronology:(OrgJodaTimeChronoBasicChronology *)chronology
                            withOrgJodaTimeDurationField:(OrgJodaTimeDurationField *)weeks;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeChronoBasicWeekOfWeekyearDateTimeField)

FOUNDATION_EXPORT void OrgJodaTimeChronoBasicWeekOfWeekyearDateTimeField_initWithOrgJodaTimeChronoBasicChronology_withOrgJodaTimeDurationField_(OrgJodaTimeChronoBasicWeekOfWeekyearDateTimeField *self, OrgJodaTimeChronoBasicChronology *chronology, OrgJodaTimeDurationField *weeks);

FOUNDATION_EXPORT OrgJodaTimeChronoBasicWeekOfWeekyearDateTimeField *new_OrgJodaTimeChronoBasicWeekOfWeekyearDateTimeField_initWithOrgJodaTimeChronoBasicChronology_withOrgJodaTimeDurationField_(OrgJodaTimeChronoBasicChronology *chronology, OrgJodaTimeDurationField *weeks) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeChronoBasicWeekOfWeekyearDateTimeField *create_OrgJodaTimeChronoBasicWeekOfWeekyearDateTimeField_initWithOrgJodaTimeChronoBasicChronology_withOrgJodaTimeDurationField_(OrgJodaTimeChronoBasicChronology *chronology, OrgJodaTimeDurationField *weeks);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeChronoBasicWeekOfWeekyearDateTimeField)

#endif

#pragma pop_macro("INCLUDE_ALL_BasicWeekOfWeekyearDateTimeField")
