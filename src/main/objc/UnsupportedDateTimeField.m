//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/eric/repos/360-j2objc/joda-time/build/mainTranslationExtraction/org/joda/time/field/UnsupportedDateTimeField.java
//

#include "DateTimeField.h"
#include "DateTimeFieldType.h"
#include "DurationField.h"
#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "ReadablePartial.h"
#include "UnsupportedDateTimeField.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/HashMap.h"
#include "java/util/Locale.h"

@interface OrgJodaTimeFieldUnsupportedDateTimeField () {
 @public
  OrgJodaTimeDateTimeFieldType *iType_;
  OrgJodaTimeDurationField *iDurationField_;
}

- (instancetype)initWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)type
                        withOrgJodaTimeDurationField:(OrgJodaTimeDurationField *)durationField;

- (id)readResolve;

- (JavaLangUnsupportedOperationException *)unsupported;

@end

J2OBJC_FIELD_SETTER(OrgJodaTimeFieldUnsupportedDateTimeField, iType_, OrgJodaTimeDateTimeFieldType *)
J2OBJC_FIELD_SETTER(OrgJodaTimeFieldUnsupportedDateTimeField, iDurationField_, OrgJodaTimeDurationField *)

inline jlong OrgJodaTimeFieldUnsupportedDateTimeField_get_serialVersionUID();
#define OrgJodaTimeFieldUnsupportedDateTimeField_serialVersionUID -1934618396111902255LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeFieldUnsupportedDateTimeField, serialVersionUID, jlong)

inline JavaUtilHashMap *OrgJodaTimeFieldUnsupportedDateTimeField_get_cCache();
inline JavaUtilHashMap *OrgJodaTimeFieldUnsupportedDateTimeField_set_cCache(JavaUtilHashMap *value);
static JavaUtilHashMap *OrgJodaTimeFieldUnsupportedDateTimeField_cCache;
J2OBJC_STATIC_FIELD_OBJ(OrgJodaTimeFieldUnsupportedDateTimeField, cCache, JavaUtilHashMap *)

__attribute__((unused)) static void OrgJodaTimeFieldUnsupportedDateTimeField_initWithOrgJodaTimeDateTimeFieldType_withOrgJodaTimeDurationField_(OrgJodaTimeFieldUnsupportedDateTimeField *self, OrgJodaTimeDateTimeFieldType *type, OrgJodaTimeDurationField *durationField);

__attribute__((unused)) static OrgJodaTimeFieldUnsupportedDateTimeField *new_OrgJodaTimeFieldUnsupportedDateTimeField_initWithOrgJodaTimeDateTimeFieldType_withOrgJodaTimeDurationField_(OrgJodaTimeDateTimeFieldType *type, OrgJodaTimeDurationField *durationField) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgJodaTimeFieldUnsupportedDateTimeField *create_OrgJodaTimeFieldUnsupportedDateTimeField_initWithOrgJodaTimeDateTimeFieldType_withOrgJodaTimeDurationField_(OrgJodaTimeDateTimeFieldType *type, OrgJodaTimeDurationField *durationField);

__attribute__((unused)) static JavaLangUnsupportedOperationException *OrgJodaTimeFieldUnsupportedDateTimeField_unsupported(OrgJodaTimeFieldUnsupportedDateTimeField *self);

@implementation OrgJodaTimeFieldUnsupportedDateTimeField

+ (OrgJodaTimeFieldUnsupportedDateTimeField *)getInstanceWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)type
                                                             withOrgJodaTimeDurationField:(OrgJodaTimeDurationField *)durationField {
  return OrgJodaTimeFieldUnsupportedDateTimeField_getInstanceWithOrgJodaTimeDateTimeFieldType_withOrgJodaTimeDurationField_(type, durationField);
}

- (instancetype)initWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)type
                        withOrgJodaTimeDurationField:(OrgJodaTimeDurationField *)durationField {
  OrgJodaTimeFieldUnsupportedDateTimeField_initWithOrgJodaTimeDateTimeFieldType_withOrgJodaTimeDurationField_(self, type, durationField);
  return self;
}

- (OrgJodaTimeDateTimeFieldType *)getType {
  return iType_;
}

- (NSString *)getName {
  return [((OrgJodaTimeDateTimeFieldType *) nil_chk(iType_)) getName];
}

- (jboolean)isSupported {
  return false;
}

- (jboolean)isLenient {
  return false;
}

- (jint)getWithLong:(jlong)instant {
  @throw OrgJodaTimeFieldUnsupportedDateTimeField_unsupported(self);
}

- (NSString *)getAsTextWithLong:(jlong)instant
             withJavaUtilLocale:(JavaUtilLocale *)locale {
  @throw OrgJodaTimeFieldUnsupportedDateTimeField_unsupported(self);
}

- (NSString *)getAsTextWithLong:(jlong)instant {
  @throw OrgJodaTimeFieldUnsupportedDateTimeField_unsupported(self);
}

- (NSString *)getAsTextWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
                                              withInt:(jint)fieldValue
                                   withJavaUtilLocale:(JavaUtilLocale *)locale {
  @throw OrgJodaTimeFieldUnsupportedDateTimeField_unsupported(self);
}

- (NSString *)getAsTextWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
                                   withJavaUtilLocale:(JavaUtilLocale *)locale {
  @throw OrgJodaTimeFieldUnsupportedDateTimeField_unsupported(self);
}

- (NSString *)getAsTextWithInt:(jint)fieldValue
            withJavaUtilLocale:(JavaUtilLocale *)locale {
  @throw OrgJodaTimeFieldUnsupportedDateTimeField_unsupported(self);
}

- (NSString *)getAsShortTextWithLong:(jlong)instant
                  withJavaUtilLocale:(JavaUtilLocale *)locale {
  @throw OrgJodaTimeFieldUnsupportedDateTimeField_unsupported(self);
}

- (NSString *)getAsShortTextWithLong:(jlong)instant {
  @throw OrgJodaTimeFieldUnsupportedDateTimeField_unsupported(self);
}

- (NSString *)getAsShortTextWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
                                                   withInt:(jint)fieldValue
                                        withJavaUtilLocale:(JavaUtilLocale *)locale {
  @throw OrgJodaTimeFieldUnsupportedDateTimeField_unsupported(self);
}

- (NSString *)getAsShortTextWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
                                        withJavaUtilLocale:(JavaUtilLocale *)locale {
  @throw OrgJodaTimeFieldUnsupportedDateTimeField_unsupported(self);
}

- (NSString *)getAsShortTextWithInt:(jint)fieldValue
                 withJavaUtilLocale:(JavaUtilLocale *)locale {
  @throw OrgJodaTimeFieldUnsupportedDateTimeField_unsupported(self);
}

- (jlong)addWithLong:(jlong)instant
             withInt:(jint)value {
  return [((OrgJodaTimeDurationField *) nil_chk([self getDurationField])) addWithLong:instant withInt:value];
}

- (jlong)addWithLong:(jlong)instant
            withLong:(jlong)value {
  return [((OrgJodaTimeDurationField *) nil_chk([self getDurationField])) addWithLong:instant withLong:value];
}

- (IOSIntArray *)addWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                           withInt:(jint)fieldIndex
                                      withIntArray:(IOSIntArray *)values
                                           withInt:(jint)valueToAdd {
  @throw OrgJodaTimeFieldUnsupportedDateTimeField_unsupported(self);
}

- (IOSIntArray *)addWrapPartialWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                                      withInt:(jint)fieldIndex
                                                 withIntArray:(IOSIntArray *)values
                                                      withInt:(jint)valueToAdd {
  @throw OrgJodaTimeFieldUnsupportedDateTimeField_unsupported(self);
}

- (jlong)addWrapFieldWithLong:(jlong)instant
                      withInt:(jint)value {
  @throw OrgJodaTimeFieldUnsupportedDateTimeField_unsupported(self);
}

- (IOSIntArray *)addWrapFieldWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                                    withInt:(jint)fieldIndex
                                               withIntArray:(IOSIntArray *)values
                                                    withInt:(jint)valueToAdd {
  @throw OrgJodaTimeFieldUnsupportedDateTimeField_unsupported(self);
}

- (jint)getDifferenceWithLong:(jlong)minuendInstant
                     withLong:(jlong)subtrahendInstant {
  return [((OrgJodaTimeDurationField *) nil_chk([self getDurationField])) getDifferenceWithLong:minuendInstant withLong:subtrahendInstant];
}

- (jlong)getDifferenceAsLongWithLong:(jlong)minuendInstant
                            withLong:(jlong)subtrahendInstant {
  return [((OrgJodaTimeDurationField *) nil_chk([self getDurationField])) getDifferenceAsLongWithLong:minuendInstant withLong:subtrahendInstant];
}

- (jlong)setWithLong:(jlong)instant
             withInt:(jint)value {
  @throw OrgJodaTimeFieldUnsupportedDateTimeField_unsupported(self);
}

- (IOSIntArray *)setWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                           withInt:(jint)fieldIndex
                                      withIntArray:(IOSIntArray *)values
                                           withInt:(jint)newValue {
  @throw OrgJodaTimeFieldUnsupportedDateTimeField_unsupported(self);
}

- (jlong)setWithLong:(jlong)instant
        withNSString:(NSString *)text
  withJavaUtilLocale:(JavaUtilLocale *)locale {
  @throw OrgJodaTimeFieldUnsupportedDateTimeField_unsupported(self);
}

- (jlong)setWithLong:(jlong)instant
        withNSString:(NSString *)text {
  @throw OrgJodaTimeFieldUnsupportedDateTimeField_unsupported(self);
}

- (IOSIntArray *)setWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                           withInt:(jint)fieldIndex
                                      withIntArray:(IOSIntArray *)values
                                      withNSString:(NSString *)text
                                withJavaUtilLocale:(JavaUtilLocale *)locale {
  @throw OrgJodaTimeFieldUnsupportedDateTimeField_unsupported(self);
}

- (OrgJodaTimeDurationField *)getDurationField {
  return iDurationField_;
}

- (OrgJodaTimeDurationField *)getRangeDurationField {
  return nil;
}

- (jboolean)isLeapWithLong:(jlong)instant {
  @throw OrgJodaTimeFieldUnsupportedDateTimeField_unsupported(self);
}

- (jint)getLeapAmountWithLong:(jlong)instant {
  @throw OrgJodaTimeFieldUnsupportedDateTimeField_unsupported(self);
}

- (OrgJodaTimeDurationField *)getLeapDurationField {
  return nil;
}

- (jint)getMinimumValue {
  @throw OrgJodaTimeFieldUnsupportedDateTimeField_unsupported(self);
}

- (jint)getMinimumValueWithLong:(jlong)instant {
  @throw OrgJodaTimeFieldUnsupportedDateTimeField_unsupported(self);
}

- (jint)getMinimumValueWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant {
  @throw OrgJodaTimeFieldUnsupportedDateTimeField_unsupported(self);
}

- (jint)getMinimumValueWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                         withIntArray:(IOSIntArray *)values {
  @throw OrgJodaTimeFieldUnsupportedDateTimeField_unsupported(self);
}

- (jint)getMaximumValue {
  @throw OrgJodaTimeFieldUnsupportedDateTimeField_unsupported(self);
}

- (jint)getMaximumValueWithLong:(jlong)instant {
  @throw OrgJodaTimeFieldUnsupportedDateTimeField_unsupported(self);
}

- (jint)getMaximumValueWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant {
  @throw OrgJodaTimeFieldUnsupportedDateTimeField_unsupported(self);
}

- (jint)getMaximumValueWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                         withIntArray:(IOSIntArray *)values {
  @throw OrgJodaTimeFieldUnsupportedDateTimeField_unsupported(self);
}

- (jint)getMaximumTextLengthWithJavaUtilLocale:(JavaUtilLocale *)locale {
  @throw OrgJodaTimeFieldUnsupportedDateTimeField_unsupported(self);
}

- (jint)getMaximumShortTextLengthWithJavaUtilLocale:(JavaUtilLocale *)locale {
  @throw OrgJodaTimeFieldUnsupportedDateTimeField_unsupported(self);
}

- (jlong)roundFloorWithLong:(jlong)instant {
  @throw OrgJodaTimeFieldUnsupportedDateTimeField_unsupported(self);
}

- (jlong)roundCeilingWithLong:(jlong)instant {
  @throw OrgJodaTimeFieldUnsupportedDateTimeField_unsupported(self);
}

- (jlong)roundHalfFloorWithLong:(jlong)instant {
  @throw OrgJodaTimeFieldUnsupportedDateTimeField_unsupported(self);
}

- (jlong)roundHalfCeilingWithLong:(jlong)instant {
  @throw OrgJodaTimeFieldUnsupportedDateTimeField_unsupported(self);
}

- (jlong)roundHalfEvenWithLong:(jlong)instant {
  @throw OrgJodaTimeFieldUnsupportedDateTimeField_unsupported(self);
}

- (jlong)remainderWithLong:(jlong)instant {
  @throw OrgJodaTimeFieldUnsupportedDateTimeField_unsupported(self);
}

- (NSString *)description {
  return @"UnsupportedDateTimeField";
}

- (id)readResolve {
  return OrgJodaTimeFieldUnsupportedDateTimeField_getInstanceWithOrgJodaTimeDateTimeFieldType_withOrgJodaTimeDurationField_(iType_, iDurationField_);
}

- (JavaLangUnsupportedOperationException *)unsupported {
  return OrgJodaTimeFieldUnsupportedDateTimeField_unsupported(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgJodaTimeFieldUnsupportedDateTimeField;", 0x29, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDateTimeFieldType;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, 6, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, 7, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, 8, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 9, 5, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 9, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 9, 6, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 9, 7, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 9, 8, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 10, 11, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 10, 12, -1, -1, -1, -1 },
    { NULL, "[I", 0x1, 10, 13, -1, -1, -1, -1 },
    { NULL, "[I", 0x1, 14, 13, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 15, 11, -1, -1, -1, -1 },
    { NULL, "[I", 0x1, 15, 13, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 16, 12, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 17, 12, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 18, 11, -1, -1, -1, -1 },
    { NULL, "[I", 0x1, 18, 13, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 18, 19, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 18, 20, -1, -1, -1, -1 },
    { NULL, "[I", 0x1, 18, 21, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDurationField;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDurationField;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 22, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 23, 3, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDurationField;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 24, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 24, 25, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 24, 26, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 27, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 27, 25, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 27, 26, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 28, 29, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 30, 29, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 31, 3, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 32, 3, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 33, 3, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 34, 3, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 35, 3, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 36, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 37, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangUnsupportedOperationException;", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getInstanceWithOrgJodaTimeDateTimeFieldType:withOrgJodaTimeDurationField:);
  methods[1].selector = @selector(initWithOrgJodaTimeDateTimeFieldType:withOrgJodaTimeDurationField:);
  methods[2].selector = @selector(getType);
  methods[3].selector = @selector(getName);
  methods[4].selector = @selector(isSupported);
  methods[5].selector = @selector(isLenient);
  methods[6].selector = @selector(getWithLong:);
  methods[7].selector = @selector(getAsTextWithLong:withJavaUtilLocale:);
  methods[8].selector = @selector(getAsTextWithLong:);
  methods[9].selector = @selector(getAsTextWithOrgJodaTimeReadablePartial:withInt:withJavaUtilLocale:);
  methods[10].selector = @selector(getAsTextWithOrgJodaTimeReadablePartial:withJavaUtilLocale:);
  methods[11].selector = @selector(getAsTextWithInt:withJavaUtilLocale:);
  methods[12].selector = @selector(getAsShortTextWithLong:withJavaUtilLocale:);
  methods[13].selector = @selector(getAsShortTextWithLong:);
  methods[14].selector = @selector(getAsShortTextWithOrgJodaTimeReadablePartial:withInt:withJavaUtilLocale:);
  methods[15].selector = @selector(getAsShortTextWithOrgJodaTimeReadablePartial:withJavaUtilLocale:);
  methods[16].selector = @selector(getAsShortTextWithInt:withJavaUtilLocale:);
  methods[17].selector = @selector(addWithLong:withInt:);
  methods[18].selector = @selector(addWithLong:withLong:);
  methods[19].selector = @selector(addWithOrgJodaTimeReadablePartial:withInt:withIntArray:withInt:);
  methods[20].selector = @selector(addWrapPartialWithOrgJodaTimeReadablePartial:withInt:withIntArray:withInt:);
  methods[21].selector = @selector(addWrapFieldWithLong:withInt:);
  methods[22].selector = @selector(addWrapFieldWithOrgJodaTimeReadablePartial:withInt:withIntArray:withInt:);
  methods[23].selector = @selector(getDifferenceWithLong:withLong:);
  methods[24].selector = @selector(getDifferenceAsLongWithLong:withLong:);
  methods[25].selector = @selector(setWithLong:withInt:);
  methods[26].selector = @selector(setWithOrgJodaTimeReadablePartial:withInt:withIntArray:withInt:);
  methods[27].selector = @selector(setWithLong:withNSString:withJavaUtilLocale:);
  methods[28].selector = @selector(setWithLong:withNSString:);
  methods[29].selector = @selector(setWithOrgJodaTimeReadablePartial:withInt:withIntArray:withNSString:withJavaUtilLocale:);
  methods[30].selector = @selector(getDurationField);
  methods[31].selector = @selector(getRangeDurationField);
  methods[32].selector = @selector(isLeapWithLong:);
  methods[33].selector = @selector(getLeapAmountWithLong:);
  methods[34].selector = @selector(getLeapDurationField);
  methods[35].selector = @selector(getMinimumValue);
  methods[36].selector = @selector(getMinimumValueWithLong:);
  methods[37].selector = @selector(getMinimumValueWithOrgJodaTimeReadablePartial:);
  methods[38].selector = @selector(getMinimumValueWithOrgJodaTimeReadablePartial:withIntArray:);
  methods[39].selector = @selector(getMaximumValue);
  methods[40].selector = @selector(getMaximumValueWithLong:);
  methods[41].selector = @selector(getMaximumValueWithOrgJodaTimeReadablePartial:);
  methods[42].selector = @selector(getMaximumValueWithOrgJodaTimeReadablePartial:withIntArray:);
  methods[43].selector = @selector(getMaximumTextLengthWithJavaUtilLocale:);
  methods[44].selector = @selector(getMaximumShortTextLengthWithJavaUtilLocale:);
  methods[45].selector = @selector(roundFloorWithLong:);
  methods[46].selector = @selector(roundCeilingWithLong:);
  methods[47].selector = @selector(roundHalfFloorWithLong:);
  methods[48].selector = @selector(roundHalfCeilingWithLong:);
  methods[49].selector = @selector(roundHalfEvenWithLong:);
  methods[50].selector = @selector(remainderWithLong:);
  methods[51].selector = @selector(description);
  methods[52].selector = @selector(readResolve);
  methods[53].selector = @selector(unsupported);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = OrgJodaTimeFieldUnsupportedDateTimeField_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "cCache", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0xa, -1, 38, 39, -1 },
    { "iType_", "LOrgJodaTimeDateTimeFieldType;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "iDurationField_", "LOrgJodaTimeDurationField;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LOrgJodaTimeDateTimeFieldType;LOrgJodaTimeDurationField;", "get", "J", "getAsText", "JLJavaUtilLocale;", "LOrgJodaTimeReadablePartial;ILJavaUtilLocale;", "LOrgJodaTimeReadablePartial;LJavaUtilLocale;", "ILJavaUtilLocale;", "getAsShortText", "add", "JI", "JJ", "LOrgJodaTimeReadablePartial;I[II", "addWrapPartial", "addWrapField", "getDifference", "getDifferenceAsLong", "set", "JLNSString;LJavaUtilLocale;", "JLNSString;", "LOrgJodaTimeReadablePartial;I[ILNSString;LJavaUtilLocale;", "isLeap", "getLeapAmount", "getMinimumValue", "LOrgJodaTimeReadablePartial;", "LOrgJodaTimeReadablePartial;[I", "getMaximumValue", "getMaximumTextLength", "LJavaUtilLocale;", "getMaximumShortTextLength", "roundFloor", "roundCeiling", "roundHalfFloor", "roundHalfCeiling", "roundHalfEven", "remainder", "toString", &OrgJodaTimeFieldUnsupportedDateTimeField_cCache, "Ljava/util/HashMap<Lorg/joda/time/DateTimeFieldType;Lorg/joda/time/field/UnsupportedDateTimeField;>;" };
  static const J2ObjcClassInfo _OrgJodaTimeFieldUnsupportedDateTimeField = { "UnsupportedDateTimeField", "org.joda.time.field", ptrTable, methods, fields, 7, 0x11, 54, 4, -1, -1, -1, -1, -1 };
  return &_OrgJodaTimeFieldUnsupportedDateTimeField;
}

@end

OrgJodaTimeFieldUnsupportedDateTimeField *OrgJodaTimeFieldUnsupportedDateTimeField_getInstanceWithOrgJodaTimeDateTimeFieldType_withOrgJodaTimeDurationField_(OrgJodaTimeDateTimeFieldType *type, OrgJodaTimeDurationField *durationField) {
  OrgJodaTimeFieldUnsupportedDateTimeField_initialize();
  @synchronized(OrgJodaTimeFieldUnsupportedDateTimeField_class_()) {
    OrgJodaTimeFieldUnsupportedDateTimeField *field;
    if (OrgJodaTimeFieldUnsupportedDateTimeField_cCache == nil) {
      OrgJodaTimeFieldUnsupportedDateTimeField_cCache = new_JavaUtilHashMap_initWithInt_(7);
      field = nil;
    }
    else {
      field = [OrgJodaTimeFieldUnsupportedDateTimeField_cCache getWithId:type];
      if (field != nil && [field getDurationField] != durationField) {
        field = nil;
      }
    }
    if (field == nil) {
      field = new_OrgJodaTimeFieldUnsupportedDateTimeField_initWithOrgJodaTimeDateTimeFieldType_withOrgJodaTimeDurationField_(type, durationField);
      (void) [((JavaUtilHashMap *) nil_chk(OrgJodaTimeFieldUnsupportedDateTimeField_cCache)) putWithId:type withId:field];
    }
    return field;
  }
}

void OrgJodaTimeFieldUnsupportedDateTimeField_initWithOrgJodaTimeDateTimeFieldType_withOrgJodaTimeDurationField_(OrgJodaTimeFieldUnsupportedDateTimeField *self, OrgJodaTimeDateTimeFieldType *type, OrgJodaTimeDurationField *durationField) {
  OrgJodaTimeDateTimeField_init(self);
  if (type == nil || durationField == nil) {
    @throw new_JavaLangIllegalArgumentException_init();
  }
  self->iType_ = type;
  self->iDurationField_ = durationField;
}

OrgJodaTimeFieldUnsupportedDateTimeField *new_OrgJodaTimeFieldUnsupportedDateTimeField_initWithOrgJodaTimeDateTimeFieldType_withOrgJodaTimeDurationField_(OrgJodaTimeDateTimeFieldType *type, OrgJodaTimeDurationField *durationField) {
  J2OBJC_NEW_IMPL(OrgJodaTimeFieldUnsupportedDateTimeField, initWithOrgJodaTimeDateTimeFieldType_withOrgJodaTimeDurationField_, type, durationField)
}

OrgJodaTimeFieldUnsupportedDateTimeField *create_OrgJodaTimeFieldUnsupportedDateTimeField_initWithOrgJodaTimeDateTimeFieldType_withOrgJodaTimeDurationField_(OrgJodaTimeDateTimeFieldType *type, OrgJodaTimeDurationField *durationField) {
  J2OBJC_CREATE_IMPL(OrgJodaTimeFieldUnsupportedDateTimeField, initWithOrgJodaTimeDateTimeFieldType_withOrgJodaTimeDurationField_, type, durationField)
}

JavaLangUnsupportedOperationException *OrgJodaTimeFieldUnsupportedDateTimeField_unsupported(OrgJodaTimeFieldUnsupportedDateTimeField *self) {
  return new_JavaLangUnsupportedOperationException_initWithNSString_(JreStrcat("@$", self->iType_, @" field is unsupported"));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeFieldUnsupportedDateTimeField)
