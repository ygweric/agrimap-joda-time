//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/eric/repos/360-j2objc/joda-time/build/mainTranslationExtraction/org/joda/time/tz/UTCProvider.java
//

#include "DateTimeZone.h"
#include "J2ObjC_source.h"
#include "UTCProvider.h"
#include "java/util/Collections.h"
#include "java/util/Set.h"

inline id<JavaUtilSet> OrgJodaTimeTzUTCProvider_get_AVAILABLE_IDS();
static id<JavaUtilSet> OrgJodaTimeTzUTCProvider_AVAILABLE_IDS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeTzUTCProvider, AVAILABLE_IDS, id<JavaUtilSet>)

J2OBJC_INITIALIZED_DEFN(OrgJodaTimeTzUTCProvider)

@implementation OrgJodaTimeTzUTCProvider

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJodaTimeTzUTCProvider_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgJodaTimeDateTimeZone *)getZoneWithNSString:(NSString *)id_ {
  if ([@"UTC" equalsIgnoreCase:id_]) {
    return JreLoadStatic(OrgJodaTimeDateTimeZone, UTC);
  }
  return nil;
}

- (id<JavaUtilSet>)getAvailableIDs {
  return OrgJodaTimeTzUTCProvider_AVAILABLE_IDS;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDateTimeZone;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getZoneWithNSString:);
  methods[2].selector = @selector(getAvailableIDs);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "AVAILABLE_IDS", "LJavaUtilSet;", .constantValue.asLong = 0, 0x1a, -1, 3, 4, -1 },
  };
  static const void *ptrTable[] = { "getZone", "LNSString;", "()Ljava/util/Set<Ljava/lang/String;>;", &OrgJodaTimeTzUTCProvider_AVAILABLE_IDS, "Ljava/util/Set<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _OrgJodaTimeTzUTCProvider = { "UTCProvider", "org.joda.time.tz", ptrTable, methods, fields, 7, 0x11, 3, 1, -1, -1, -1, -1, -1 };
  return &_OrgJodaTimeTzUTCProvider;
}

+ (void)initialize {
  if (self == [OrgJodaTimeTzUTCProvider class]) {
    OrgJodaTimeTzUTCProvider_AVAILABLE_IDS = JavaUtilCollections_singletonWithId_(@"UTC");
    J2OBJC_SET_INITIALIZED(OrgJodaTimeTzUTCProvider)
  }
}

@end

void OrgJodaTimeTzUTCProvider_init(OrgJodaTimeTzUTCProvider *self) {
  NSObject_init(self);
}

OrgJodaTimeTzUTCProvider *new_OrgJodaTimeTzUTCProvider_init() {
  J2OBJC_NEW_IMPL(OrgJodaTimeTzUTCProvider, init)
}

OrgJodaTimeTzUTCProvider *create_OrgJodaTimeTzUTCProvider_init() {
  J2OBJC_CREATE_IMPL(OrgJodaTimeTzUTCProvider, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeTzUTCProvider)
