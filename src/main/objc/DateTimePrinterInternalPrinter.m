//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/eric/repos/360-j2objc/joda-time/build/mainTranslationExtraction/org/joda/time/format/DateTimePrinterInternalPrinter.java
//

#include "Chronology.h"
#include "DateTimePrinter.h"
#include "DateTimePrinterInternalPrinter.h"
#include "DateTimeZone.h"
#include "IOSClass.h"
#include "InternalPrinter.h"
#include "InternalPrinterDateTimePrinter.h"
#include "J2ObjC_source.h"
#include "ReadablePartial.h"
#include "java/io/Writer.h"
#include "java/lang/Appendable.h"
#include "java/lang/StringBuffer.h"
#include "java/util/Locale.h"

@interface OrgJodaTimeFormatDateTimePrinterInternalPrinter () {
 @public
  id<OrgJodaTimeFormatDateTimePrinter> underlying_;
}

- (instancetype)initWithOrgJodaTimeFormatDateTimePrinter:(id<OrgJodaTimeFormatDateTimePrinter>)underlying;

@end

J2OBJC_FIELD_SETTER(OrgJodaTimeFormatDateTimePrinterInternalPrinter, underlying_, id<OrgJodaTimeFormatDateTimePrinter>)

__attribute__((unused)) static void OrgJodaTimeFormatDateTimePrinterInternalPrinter_initWithOrgJodaTimeFormatDateTimePrinter_(OrgJodaTimeFormatDateTimePrinterInternalPrinter *self, id<OrgJodaTimeFormatDateTimePrinter> underlying);

__attribute__((unused)) static OrgJodaTimeFormatDateTimePrinterInternalPrinter *new_OrgJodaTimeFormatDateTimePrinterInternalPrinter_initWithOrgJodaTimeFormatDateTimePrinter_(id<OrgJodaTimeFormatDateTimePrinter> underlying) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgJodaTimeFormatDateTimePrinterInternalPrinter *create_OrgJodaTimeFormatDateTimePrinterInternalPrinter_initWithOrgJodaTimeFormatDateTimePrinter_(id<OrgJodaTimeFormatDateTimePrinter> underlying);

@implementation OrgJodaTimeFormatDateTimePrinterInternalPrinter

+ (id<OrgJodaTimeFormatInternalPrinter>)ofWithOrgJodaTimeFormatDateTimePrinter:(id<OrgJodaTimeFormatDateTimePrinter>)underlying {
  return OrgJodaTimeFormatDateTimePrinterInternalPrinter_ofWithOrgJodaTimeFormatDateTimePrinter_(underlying);
}

- (instancetype)initWithOrgJodaTimeFormatDateTimePrinter:(id<OrgJodaTimeFormatDateTimePrinter>)underlying {
  OrgJodaTimeFormatDateTimePrinterInternalPrinter_initWithOrgJodaTimeFormatDateTimePrinter_(self, underlying);
  return self;
}

- (id<OrgJodaTimeFormatDateTimePrinter>)getUnderlying {
  return underlying_;
}

- (jint)estimatePrintedLength {
  return [((id<OrgJodaTimeFormatDateTimePrinter>) nil_chk(underlying_)) estimatePrintedLength];
}

- (void)printToWithJavaLangAppendable:(id<JavaLangAppendable>)appendable
                             withLong:(jlong)instant
            withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono
                              withInt:(jint)displayOffset
          withOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)displayZone
                   withJavaUtilLocale:(JavaUtilLocale *)locale {
  if ([appendable isKindOfClass:[JavaLangStringBuffer class]]) {
    JavaLangStringBuffer *buf = (JavaLangStringBuffer *) cast_chk(appendable, [JavaLangStringBuffer class]);
    [((id<OrgJodaTimeFormatDateTimePrinter>) nil_chk(underlying_)) printToWithJavaLangStringBuffer:buf withLong:instant withOrgJodaTimeChronology:chrono withInt:displayOffset withOrgJodaTimeDateTimeZone:displayZone withJavaUtilLocale:locale];
  }
  if ([appendable isKindOfClass:[JavaIoWriter class]]) {
    JavaIoWriter *out = (JavaIoWriter *) cast_chk(appendable, [JavaIoWriter class]);
    [((id<OrgJodaTimeFormatDateTimePrinter>) nil_chk(underlying_)) printToWithJavaIoWriter:out withLong:instant withOrgJodaTimeChronology:chrono withInt:displayOffset withOrgJodaTimeDateTimeZone:displayZone withJavaUtilLocale:locale];
  }
  JavaLangStringBuffer *buf = new_JavaLangStringBuffer_initWithInt_([self estimatePrintedLength]);
  [((id<OrgJodaTimeFormatDateTimePrinter>) nil_chk(underlying_)) printToWithJavaLangStringBuffer:buf withLong:instant withOrgJodaTimeChronology:chrono withInt:displayOffset withOrgJodaTimeDateTimeZone:displayZone withJavaUtilLocale:locale];
  (void) [((id<JavaLangAppendable>) nil_chk(appendable)) appendWithJavaLangCharSequence:buf];
}

- (void)printToWithJavaLangAppendable:(id<JavaLangAppendable>)appendable
       withOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
                   withJavaUtilLocale:(JavaUtilLocale *)locale {
  if ([appendable isKindOfClass:[JavaLangStringBuffer class]]) {
    JavaLangStringBuffer *buf = (JavaLangStringBuffer *) cast_chk(appendable, [JavaLangStringBuffer class]);
    [((id<OrgJodaTimeFormatDateTimePrinter>) nil_chk(underlying_)) printToWithJavaLangStringBuffer:buf withOrgJodaTimeReadablePartial:partial withJavaUtilLocale:locale];
  }
  if ([appendable isKindOfClass:[JavaIoWriter class]]) {
    JavaIoWriter *out = (JavaIoWriter *) cast_chk(appendable, [JavaIoWriter class]);
    [((id<OrgJodaTimeFormatDateTimePrinter>) nil_chk(underlying_)) printToWithJavaIoWriter:out withOrgJodaTimeReadablePartial:partial withJavaUtilLocale:locale];
  }
  JavaLangStringBuffer *buf = new_JavaLangStringBuffer_initWithInt_([self estimatePrintedLength]);
  [((id<OrgJodaTimeFormatDateTimePrinter>) nil_chk(underlying_)) printToWithJavaLangStringBuffer:buf withOrgJodaTimeReadablePartial:partial withJavaUtilLocale:locale];
  (void) [((id<JavaLangAppendable>) nil_chk(appendable)) appendWithJavaLangCharSequence:buf];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgJodaTimeFormatInternalPrinter;", 0x8, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeFormatDateTimePrinter;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 5, 4, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(ofWithOrgJodaTimeFormatDateTimePrinter:);
  methods[1].selector = @selector(initWithOrgJodaTimeFormatDateTimePrinter:);
  methods[2].selector = @selector(getUnderlying);
  methods[3].selector = @selector(estimatePrintedLength);
  methods[4].selector = @selector(printToWithJavaLangAppendable:withLong:withOrgJodaTimeChronology:withInt:withOrgJodaTimeDateTimeZone:withJavaUtilLocale:);
  methods[5].selector = @selector(printToWithJavaLangAppendable:withOrgJodaTimeReadablePartial:withJavaUtilLocale:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "underlying_", "LOrgJodaTimeFormatDateTimePrinter;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "of", "LOrgJodaTimeFormatDateTimePrinter;", "printTo", "LJavaLangAppendable;JLOrgJodaTimeChronology;ILOrgJodaTimeDateTimeZone;LJavaUtilLocale;", "LJavaIoIOException;", "LJavaLangAppendable;LOrgJodaTimeReadablePartial;LJavaUtilLocale;" };
  static const J2ObjcClassInfo _OrgJodaTimeFormatDateTimePrinterInternalPrinter = { "DateTimePrinterInternalPrinter", "org.joda.time.format", ptrTable, methods, fields, 7, 0x0, 6, 1, -1, -1, -1, -1, -1 };
  return &_OrgJodaTimeFormatDateTimePrinterInternalPrinter;
}

@end

id<OrgJodaTimeFormatInternalPrinter> OrgJodaTimeFormatDateTimePrinterInternalPrinter_ofWithOrgJodaTimeFormatDateTimePrinter_(id<OrgJodaTimeFormatDateTimePrinter> underlying) {
  OrgJodaTimeFormatDateTimePrinterInternalPrinter_initialize();
  if ([underlying isKindOfClass:[OrgJodaTimeFormatInternalPrinterDateTimePrinter class]]) {
    return (id<OrgJodaTimeFormatInternalPrinter>) cast_check(underlying, OrgJodaTimeFormatInternalPrinter_class_());
  }
  if (underlying == nil) {
    return nil;
  }
  return new_OrgJodaTimeFormatDateTimePrinterInternalPrinter_initWithOrgJodaTimeFormatDateTimePrinter_(underlying);
}

void OrgJodaTimeFormatDateTimePrinterInternalPrinter_initWithOrgJodaTimeFormatDateTimePrinter_(OrgJodaTimeFormatDateTimePrinterInternalPrinter *self, id<OrgJodaTimeFormatDateTimePrinter> underlying) {
  NSObject_init(self);
  self->underlying_ = underlying;
}

OrgJodaTimeFormatDateTimePrinterInternalPrinter *new_OrgJodaTimeFormatDateTimePrinterInternalPrinter_initWithOrgJodaTimeFormatDateTimePrinter_(id<OrgJodaTimeFormatDateTimePrinter> underlying) {
  J2OBJC_NEW_IMPL(OrgJodaTimeFormatDateTimePrinterInternalPrinter, initWithOrgJodaTimeFormatDateTimePrinter_, underlying)
}

OrgJodaTimeFormatDateTimePrinterInternalPrinter *create_OrgJodaTimeFormatDateTimePrinterInternalPrinter_initWithOrgJodaTimeFormatDateTimePrinter_(id<OrgJodaTimeFormatDateTimePrinter> underlying) {
  J2OBJC_CREATE_IMPL(OrgJodaTimeFormatDateTimePrinterInternalPrinter, initWithOrgJodaTimeFormatDateTimePrinter_, underlying)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeFormatDateTimePrinterInternalPrinter)
