//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/eric/repos/360-j2objc/joda-time/build/mainTranslationExtraction/org/joda/time/field/MillisDurationField.java
//

#include "DurationField.h"
#include "DurationFieldType.h"
#include "FieldUtils.h"
#include "J2ObjC_source.h"
#include "MillisDurationField.h"

@interface OrgJodaTimeFieldMillisDurationField ()

- (instancetype)init;

- (id)readResolve;

@end

inline jlong OrgJodaTimeFieldMillisDurationField_get_serialVersionUID();
#define OrgJodaTimeFieldMillisDurationField_serialVersionUID 2656707858124633367LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeFieldMillisDurationField, serialVersionUID, jlong)

__attribute__((unused)) static void OrgJodaTimeFieldMillisDurationField_init(OrgJodaTimeFieldMillisDurationField *self);

__attribute__((unused)) static OrgJodaTimeFieldMillisDurationField *new_OrgJodaTimeFieldMillisDurationField_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgJodaTimeFieldMillisDurationField *create_OrgJodaTimeFieldMillisDurationField_init();

__attribute__((unused)) static jlong OrgJodaTimeFieldMillisDurationField_getUnitMillis(OrgJodaTimeFieldMillisDurationField *self);

J2OBJC_INITIALIZED_DEFN(OrgJodaTimeFieldMillisDurationField)

OrgJodaTimeDurationField *OrgJodaTimeFieldMillisDurationField_INSTANCE;

@implementation OrgJodaTimeFieldMillisDurationField

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJodaTimeFieldMillisDurationField_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgJodaTimeDurationFieldType *)getType {
  return OrgJodaTimeDurationFieldType_millis();
}

- (NSString *)getName {
  return @"millis";
}

- (jboolean)isSupported {
  return true;
}

- (jboolean)isPrecise {
  return true;
}

- (jlong)getUnitMillis {
  return OrgJodaTimeFieldMillisDurationField_getUnitMillis(self);
}

- (jint)getValueWithLong:(jlong)duration {
  return OrgJodaTimeFieldFieldUtils_safeToIntWithLong_(duration);
}

- (jlong)getValueAsLongWithLong:(jlong)duration {
  return duration;
}

- (jint)getValueWithLong:(jlong)duration
                withLong:(jlong)instant {
  return OrgJodaTimeFieldFieldUtils_safeToIntWithLong_(duration);
}

- (jlong)getValueAsLongWithLong:(jlong)duration
                       withLong:(jlong)instant {
  return duration;
}

- (jlong)getMillisWithInt:(jint)value {
  return value;
}

- (jlong)getMillisWithLong:(jlong)value {
  return value;
}

- (jlong)getMillisWithInt:(jint)value
                 withLong:(jlong)instant {
  return value;
}

- (jlong)getMillisWithLong:(jlong)value
                  withLong:(jlong)instant {
  return value;
}

- (jlong)addWithLong:(jlong)instant
             withInt:(jint)value {
  return OrgJodaTimeFieldFieldUtils_safeAddWithLong_withLong_(instant, value);
}

- (jlong)addWithLong:(jlong)instant
            withLong:(jlong)value {
  return OrgJodaTimeFieldFieldUtils_safeAddWithLong_withLong_(instant, value);
}

- (jint)getDifferenceWithLong:(jlong)minuendInstant
                     withLong:(jlong)subtrahendInstant {
  return OrgJodaTimeFieldFieldUtils_safeToIntWithLong_(OrgJodaTimeFieldFieldUtils_safeSubtractWithLong_withLong_(minuendInstant, subtrahendInstant));
}

- (jlong)getDifferenceAsLongWithLong:(jlong)minuendInstant
                            withLong:(jlong)subtrahendInstant {
  return OrgJodaTimeFieldFieldUtils_safeSubtractWithLong_withLong_(minuendInstant, subtrahendInstant);
}

- (jint)compareToWithId:(OrgJodaTimeDurationField *)otherField {
  (void) cast_chk(otherField, [OrgJodaTimeDurationField class]);
  jlong otherMillis = [((OrgJodaTimeDurationField *) nil_chk(otherField)) getUnitMillis];
  jlong thisMillis = OrgJodaTimeFieldMillisDurationField_getUnitMillis(self);
  if (thisMillis == otherMillis) {
    return 0;
  }
  if (thisMillis < otherMillis) {
    return -1;
  }
  else {
    return 1;
  }
}

- (jboolean)isEqual:(id)obj {
  if ([obj isKindOfClass:[OrgJodaTimeFieldMillisDurationField class]]) {
    return OrgJodaTimeFieldMillisDurationField_getUnitMillis(self) == OrgJodaTimeFieldMillisDurationField_getUnitMillis(nil_chk(((OrgJodaTimeFieldMillisDurationField *) cast_chk(obj, [OrgJodaTimeFieldMillisDurationField class]))));
  }
  return false;
}

- (NSUInteger)hash {
  return (jint) OrgJodaTimeFieldMillisDurationField_getUnitMillis(self);
}

- (NSString *)description {
  return @"DurationField[millis]";
}

- (id)readResolve {
  return OrgJodaTimeFieldMillisDurationField_INSTANCE;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDurationFieldType;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 2, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 0, 3, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 4, 1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 4, 6, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 4, 3, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 7, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 9, 3, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 10, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 13, 14, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 15, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 16, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getType);
  methods[2].selector = @selector(getName);
  methods[3].selector = @selector(isSupported);
  methods[4].selector = @selector(isPrecise);
  methods[5].selector = @selector(getUnitMillis);
  methods[6].selector = @selector(getValueWithLong:);
  methods[7].selector = @selector(getValueAsLongWithLong:);
  methods[8].selector = @selector(getValueWithLong:withLong:);
  methods[9].selector = @selector(getValueAsLongWithLong:withLong:);
  methods[10].selector = @selector(getMillisWithInt:);
  methods[11].selector = @selector(getMillisWithLong:);
  methods[12].selector = @selector(getMillisWithInt:withLong:);
  methods[13].selector = @selector(getMillisWithLong:withLong:);
  methods[14].selector = @selector(addWithLong:withInt:);
  methods[15].selector = @selector(addWithLong:withLong:);
  methods[16].selector = @selector(getDifferenceWithLong:withLong:);
  methods[17].selector = @selector(getDifferenceAsLongWithLong:withLong:);
  methods[18].selector = @selector(compareToWithId:);
  methods[19].selector = @selector(isEqual:);
  methods[20].selector = @selector(hash);
  methods[21].selector = @selector(description);
  methods[22].selector = @selector(readResolve);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = OrgJodaTimeFieldMillisDurationField_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "INSTANCE", "LOrgJodaTimeDurationField;", .constantValue.asLong = 0, 0x19, -1, 17, -1, -1 },
  };
  static const void *ptrTable[] = { "getValue", "J", "getValueAsLong", "JJ", "getMillis", "I", "IJ", "add", "JI", "getDifference", "getDifferenceAsLong", "compareTo", "LOrgJodaTimeDurationField;", "equals", "LNSObject;", "hashCode", "toString", &OrgJodaTimeFieldMillisDurationField_INSTANCE };
  static const J2ObjcClassInfo _OrgJodaTimeFieldMillisDurationField = { "MillisDurationField", "org.joda.time.field", ptrTable, methods, fields, 7, 0x11, 23, 2, -1, -1, -1, -1, -1 };
  return &_OrgJodaTimeFieldMillisDurationField;
}

+ (void)initialize {
  if (self == [OrgJodaTimeFieldMillisDurationField class]) {
    OrgJodaTimeFieldMillisDurationField_INSTANCE = new_OrgJodaTimeFieldMillisDurationField_init();
    J2OBJC_SET_INITIALIZED(OrgJodaTimeFieldMillisDurationField)
  }
}

@end

void OrgJodaTimeFieldMillisDurationField_init(OrgJodaTimeFieldMillisDurationField *self) {
  OrgJodaTimeDurationField_init(self);
}

OrgJodaTimeFieldMillisDurationField *new_OrgJodaTimeFieldMillisDurationField_init() {
  J2OBJC_NEW_IMPL(OrgJodaTimeFieldMillisDurationField, init)
}

OrgJodaTimeFieldMillisDurationField *create_OrgJodaTimeFieldMillisDurationField_init() {
  J2OBJC_CREATE_IMPL(OrgJodaTimeFieldMillisDurationField, init)
}

jlong OrgJodaTimeFieldMillisDurationField_getUnitMillis(OrgJodaTimeFieldMillisDurationField *self) {
  return 1;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeFieldMillisDurationField)
