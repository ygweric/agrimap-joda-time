//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/eric/repos/360-j2objc/joda-time/build/mainTranslationExtraction/org/joda/time/chrono/GJDayOfWeekDateTimeField.java
//

#include "BasicChronology.h"
#include "DateTimeConstants.h"
#include "DateTimeField.h"
#include "DateTimeFieldType.h"
#include "DurationField.h"
#include "GJDayOfWeekDateTimeField.h"
#include "GJLocaleSymbols.h"
#include "J2ObjC_source.h"
#include "PreciseDurationDateTimeField.h"
#include "java/util/Locale.h"

@interface OrgJodaTimeChronoGJDayOfWeekDateTimeField () {
 @public
  OrgJodaTimeChronoBasicChronology *iChronology_;
}

- (id)readResolve;

@end

J2OBJC_FIELD_SETTER(OrgJodaTimeChronoGJDayOfWeekDateTimeField, iChronology_, OrgJodaTimeChronoBasicChronology *)

inline jlong OrgJodaTimeChronoGJDayOfWeekDateTimeField_get_serialVersionUID();
#define OrgJodaTimeChronoGJDayOfWeekDateTimeField_serialVersionUID -3857947176719041436LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeChronoGJDayOfWeekDateTimeField, serialVersionUID, jlong)

@implementation OrgJodaTimeChronoGJDayOfWeekDateTimeField

- (instancetype)initWithOrgJodaTimeChronoBasicChronology:(OrgJodaTimeChronoBasicChronology *)chronology
                            withOrgJodaTimeDurationField:(OrgJodaTimeDurationField *)days {
  OrgJodaTimeChronoGJDayOfWeekDateTimeField_initWithOrgJodaTimeChronoBasicChronology_withOrgJodaTimeDurationField_(self, chronology, days);
  return self;
}

- (jint)getWithLong:(jlong)instant {
  return [((OrgJodaTimeChronoBasicChronology *) nil_chk(iChronology_)) getDayOfWeekWithLong:instant];
}

- (NSString *)getAsTextWithInt:(jint)fieldValue
            withJavaUtilLocale:(JavaUtilLocale *)locale {
  return [((OrgJodaTimeChronoGJLocaleSymbols *) nil_chk(OrgJodaTimeChronoGJLocaleSymbols_forLocaleWithJavaUtilLocale_(locale))) dayOfWeekValueToTextWithInt:fieldValue];
}

- (NSString *)getAsShortTextWithInt:(jint)fieldValue
                 withJavaUtilLocale:(JavaUtilLocale *)locale {
  return [((OrgJodaTimeChronoGJLocaleSymbols *) nil_chk(OrgJodaTimeChronoGJLocaleSymbols_forLocaleWithJavaUtilLocale_(locale))) dayOfWeekValueToShortTextWithInt:fieldValue];
}

- (jint)convertTextWithNSString:(NSString *)text
             withJavaUtilLocale:(JavaUtilLocale *)locale {
  return [((OrgJodaTimeChronoGJLocaleSymbols *) nil_chk(OrgJodaTimeChronoGJLocaleSymbols_forLocaleWithJavaUtilLocale_(locale))) dayOfWeekTextToValueWithNSString:text];
}

- (OrgJodaTimeDurationField *)getRangeDurationField {
  return [((OrgJodaTimeChronoBasicChronology *) nil_chk(iChronology_)) weeks];
}

- (jint)getMinimumValue {
  return OrgJodaTimeDateTimeConstants_MONDAY;
}

- (jint)getMaximumValue {
  return OrgJodaTimeDateTimeConstants_SUNDAY;
}

- (jint)getMaximumTextLengthWithJavaUtilLocale:(JavaUtilLocale *)locale {
  return [((OrgJodaTimeChronoGJLocaleSymbols *) nil_chk(OrgJodaTimeChronoGJLocaleSymbols_forLocaleWithJavaUtilLocale_(locale))) getDayOfWeekMaxTextLength];
}

- (jint)getMaximumShortTextLengthWithJavaUtilLocale:(JavaUtilLocale *)locale {
  return [((OrgJodaTimeChronoGJLocaleSymbols *) nil_chk(OrgJodaTimeChronoGJLocaleSymbols_forLocaleWithJavaUtilLocale_(locale))) getDayOfWeekMaxShortTextLength];
}

- (id)readResolve {
  return [((OrgJodaTimeChronoBasicChronology *) nil_chk(iChronology_)) dayOfWeek];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 5, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x4, 6, 7, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDurationField;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 10, 9, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgJodaTimeChronoBasicChronology:withOrgJodaTimeDurationField:);
  methods[1].selector = @selector(getWithLong:);
  methods[2].selector = @selector(getAsTextWithInt:withJavaUtilLocale:);
  methods[3].selector = @selector(getAsShortTextWithInt:withJavaUtilLocale:);
  methods[4].selector = @selector(convertTextWithNSString:withJavaUtilLocale:);
  methods[5].selector = @selector(getRangeDurationField);
  methods[6].selector = @selector(getMinimumValue);
  methods[7].selector = @selector(getMaximumValue);
  methods[8].selector = @selector(getMaximumTextLengthWithJavaUtilLocale:);
  methods[9].selector = @selector(getMaximumShortTextLengthWithJavaUtilLocale:);
  methods[10].selector = @selector(readResolve);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = OrgJodaTimeChronoGJDayOfWeekDateTimeField_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "iChronology_", "LOrgJodaTimeChronoBasicChronology;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgJodaTimeChronoBasicChronology;LOrgJodaTimeDurationField;", "get", "J", "getAsText", "ILJavaUtilLocale;", "getAsShortText", "convertText", "LNSString;LJavaUtilLocale;", "getMaximumTextLength", "LJavaUtilLocale;", "getMaximumShortTextLength" };
  static const J2ObjcClassInfo _OrgJodaTimeChronoGJDayOfWeekDateTimeField = { "GJDayOfWeekDateTimeField", "org.joda.time.chrono", ptrTable, methods, fields, 7, 0x10, 11, 2, -1, -1, -1, -1, -1 };
  return &_OrgJodaTimeChronoGJDayOfWeekDateTimeField;
}

@end

void OrgJodaTimeChronoGJDayOfWeekDateTimeField_initWithOrgJodaTimeChronoBasicChronology_withOrgJodaTimeDurationField_(OrgJodaTimeChronoGJDayOfWeekDateTimeField *self, OrgJodaTimeChronoBasicChronology *chronology, OrgJodaTimeDurationField *days) {
  OrgJodaTimeFieldPreciseDurationDateTimeField_initWithOrgJodaTimeDateTimeFieldType_withOrgJodaTimeDurationField_(self, OrgJodaTimeDateTimeFieldType_dayOfWeek(), days);
  self->iChronology_ = chronology;
}

OrgJodaTimeChronoGJDayOfWeekDateTimeField *new_OrgJodaTimeChronoGJDayOfWeekDateTimeField_initWithOrgJodaTimeChronoBasicChronology_withOrgJodaTimeDurationField_(OrgJodaTimeChronoBasicChronology *chronology, OrgJodaTimeDurationField *days) {
  J2OBJC_NEW_IMPL(OrgJodaTimeChronoGJDayOfWeekDateTimeField, initWithOrgJodaTimeChronoBasicChronology_withOrgJodaTimeDurationField_, chronology, days)
}

OrgJodaTimeChronoGJDayOfWeekDateTimeField *create_OrgJodaTimeChronoGJDayOfWeekDateTimeField_initWithOrgJodaTimeChronoBasicChronology_withOrgJodaTimeDurationField_(OrgJodaTimeChronoBasicChronology *chronology, OrgJodaTimeDurationField *days) {
  J2OBJC_CREATE_IMPL(OrgJodaTimeChronoGJDayOfWeekDateTimeField, initWithOrgJodaTimeChronoBasicChronology_withOrgJodaTimeDurationField_, chronology, days)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeChronoGJDayOfWeekDateTimeField)
