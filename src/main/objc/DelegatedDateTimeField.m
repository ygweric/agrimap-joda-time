//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/eric/repos/360-j2objc/joda-time/build/mainTranslationExtraction/org/joda/time/field/DelegatedDateTimeField.java
//

#include "DateTimeField.h"
#include "DateTimeFieldType.h"
#include "DelegatedDateTimeField.h"
#include "DurationField.h"
#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "ReadablePartial.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/Locale.h"

@interface OrgJodaTimeFieldDelegatedDateTimeField () {
 @public
  OrgJodaTimeDateTimeField *iField_;
  OrgJodaTimeDurationField *iRangeDurationField_;
  OrgJodaTimeDateTimeFieldType *iType_;
}

@end

J2OBJC_FIELD_SETTER(OrgJodaTimeFieldDelegatedDateTimeField, iField_, OrgJodaTimeDateTimeField *)
J2OBJC_FIELD_SETTER(OrgJodaTimeFieldDelegatedDateTimeField, iRangeDurationField_, OrgJodaTimeDurationField *)
J2OBJC_FIELD_SETTER(OrgJodaTimeFieldDelegatedDateTimeField, iType_, OrgJodaTimeDateTimeFieldType *)

inline jlong OrgJodaTimeFieldDelegatedDateTimeField_get_serialVersionUID();
#define OrgJodaTimeFieldDelegatedDateTimeField_serialVersionUID -4730164440214502503LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeFieldDelegatedDateTimeField, serialVersionUID, jlong)

@implementation OrgJodaTimeFieldDelegatedDateTimeField

- (instancetype)initWithOrgJodaTimeDateTimeField:(OrgJodaTimeDateTimeField *)field {
  OrgJodaTimeFieldDelegatedDateTimeField_initWithOrgJodaTimeDateTimeField_(self, field);
  return self;
}

- (instancetype)initWithOrgJodaTimeDateTimeField:(OrgJodaTimeDateTimeField *)field
                withOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)type {
  OrgJodaTimeFieldDelegatedDateTimeField_initWithOrgJodaTimeDateTimeField_withOrgJodaTimeDateTimeFieldType_(self, field, type);
  return self;
}

- (instancetype)initWithOrgJodaTimeDateTimeField:(OrgJodaTimeDateTimeField *)field
                    withOrgJodaTimeDurationField:(OrgJodaTimeDurationField *)rangeField
                withOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)type {
  OrgJodaTimeFieldDelegatedDateTimeField_initWithOrgJodaTimeDateTimeField_withOrgJodaTimeDurationField_withOrgJodaTimeDateTimeFieldType_(self, field, rangeField, type);
  return self;
}

- (OrgJodaTimeDateTimeField *)getWrappedField {
  return iField_;
}

- (OrgJodaTimeDateTimeFieldType *)getType {
  return iType_;
}

- (NSString *)getName {
  return [((OrgJodaTimeDateTimeFieldType *) nil_chk(iType_)) getName];
}

- (jboolean)isSupported {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) isSupported];
}

- (jboolean)isLenient {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) isLenient];
}

- (jint)getWithLong:(jlong)instant {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getWithLong:instant];
}

- (NSString *)getAsTextWithLong:(jlong)instant
             withJavaUtilLocale:(JavaUtilLocale *)locale {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getAsTextWithLong:instant withJavaUtilLocale:locale];
}

- (NSString *)getAsTextWithLong:(jlong)instant {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getAsTextWithLong:instant];
}

- (NSString *)getAsTextWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
                                              withInt:(jint)fieldValue
                                   withJavaUtilLocale:(JavaUtilLocale *)locale {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getAsTextWithOrgJodaTimeReadablePartial:partial withInt:fieldValue withJavaUtilLocale:locale];
}

- (NSString *)getAsTextWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
                                   withJavaUtilLocale:(JavaUtilLocale *)locale {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getAsTextWithOrgJodaTimeReadablePartial:partial withJavaUtilLocale:locale];
}

- (NSString *)getAsTextWithInt:(jint)fieldValue
            withJavaUtilLocale:(JavaUtilLocale *)locale {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getAsTextWithInt:fieldValue withJavaUtilLocale:locale];
}

- (NSString *)getAsShortTextWithLong:(jlong)instant
                  withJavaUtilLocale:(JavaUtilLocale *)locale {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getAsShortTextWithLong:instant withJavaUtilLocale:locale];
}

- (NSString *)getAsShortTextWithLong:(jlong)instant {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getAsShortTextWithLong:instant];
}

- (NSString *)getAsShortTextWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
                                                   withInt:(jint)fieldValue
                                        withJavaUtilLocale:(JavaUtilLocale *)locale {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getAsShortTextWithOrgJodaTimeReadablePartial:partial withInt:fieldValue withJavaUtilLocale:locale];
}

- (NSString *)getAsShortTextWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
                                        withJavaUtilLocale:(JavaUtilLocale *)locale {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getAsShortTextWithOrgJodaTimeReadablePartial:partial withJavaUtilLocale:locale];
}

- (NSString *)getAsShortTextWithInt:(jint)fieldValue
                 withJavaUtilLocale:(JavaUtilLocale *)locale {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getAsShortTextWithInt:fieldValue withJavaUtilLocale:locale];
}

- (jlong)addWithLong:(jlong)instant
             withInt:(jint)value {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) addWithLong:instant withInt:value];
}

- (jlong)addWithLong:(jlong)instant
            withLong:(jlong)value {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) addWithLong:instant withLong:value];
}

- (IOSIntArray *)addWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                           withInt:(jint)fieldIndex
                                      withIntArray:(IOSIntArray *)values
                                           withInt:(jint)valueToAdd {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) addWithOrgJodaTimeReadablePartial:instant withInt:fieldIndex withIntArray:values withInt:valueToAdd];
}

- (IOSIntArray *)addWrapPartialWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                                      withInt:(jint)fieldIndex
                                                 withIntArray:(IOSIntArray *)values
                                                      withInt:(jint)valueToAdd {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) addWrapPartialWithOrgJodaTimeReadablePartial:instant withInt:fieldIndex withIntArray:values withInt:valueToAdd];
}

- (jlong)addWrapFieldWithLong:(jlong)instant
                      withInt:(jint)value {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) addWrapFieldWithLong:instant withInt:value];
}

- (IOSIntArray *)addWrapFieldWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                                    withInt:(jint)fieldIndex
                                               withIntArray:(IOSIntArray *)values
                                                    withInt:(jint)valueToAdd {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) addWrapFieldWithOrgJodaTimeReadablePartial:instant withInt:fieldIndex withIntArray:values withInt:valueToAdd];
}

- (jint)getDifferenceWithLong:(jlong)minuendInstant
                     withLong:(jlong)subtrahendInstant {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getDifferenceWithLong:minuendInstant withLong:subtrahendInstant];
}

- (jlong)getDifferenceAsLongWithLong:(jlong)minuendInstant
                            withLong:(jlong)subtrahendInstant {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getDifferenceAsLongWithLong:minuendInstant withLong:subtrahendInstant];
}

- (jlong)setWithLong:(jlong)instant
             withInt:(jint)value {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) setWithLong:instant withInt:value];
}

- (jlong)setWithLong:(jlong)instant
        withNSString:(NSString *)text
  withJavaUtilLocale:(JavaUtilLocale *)locale {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) setWithLong:instant withNSString:text withJavaUtilLocale:locale];
}

- (jlong)setWithLong:(jlong)instant
        withNSString:(NSString *)text {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) setWithLong:instant withNSString:text];
}

- (IOSIntArray *)setWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                           withInt:(jint)fieldIndex
                                      withIntArray:(IOSIntArray *)values
                                           withInt:(jint)newValue {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) setWithOrgJodaTimeReadablePartial:instant withInt:fieldIndex withIntArray:values withInt:newValue];
}

- (IOSIntArray *)setWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                           withInt:(jint)fieldIndex
                                      withIntArray:(IOSIntArray *)values
                                      withNSString:(NSString *)text
                                withJavaUtilLocale:(JavaUtilLocale *)locale {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) setWithOrgJodaTimeReadablePartial:instant withInt:fieldIndex withIntArray:values withNSString:text withJavaUtilLocale:locale];
}

- (OrgJodaTimeDurationField *)getDurationField {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getDurationField];
}

- (OrgJodaTimeDurationField *)getRangeDurationField {
  if (iRangeDurationField_ != nil) {
    return iRangeDurationField_;
  }
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getRangeDurationField];
}

- (jboolean)isLeapWithLong:(jlong)instant {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) isLeapWithLong:instant];
}

- (jint)getLeapAmountWithLong:(jlong)instant {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getLeapAmountWithLong:instant];
}

- (OrgJodaTimeDurationField *)getLeapDurationField {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getLeapDurationField];
}

- (jint)getMinimumValue {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getMinimumValue];
}

- (jint)getMinimumValueWithLong:(jlong)instant {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getMinimumValueWithLong:instant];
}

- (jint)getMinimumValueWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getMinimumValueWithOrgJodaTimeReadablePartial:instant];
}

- (jint)getMinimumValueWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                         withIntArray:(IOSIntArray *)values {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getMinimumValueWithOrgJodaTimeReadablePartial:instant withIntArray:values];
}

- (jint)getMaximumValue {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getMaximumValue];
}

- (jint)getMaximumValueWithLong:(jlong)instant {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getMaximumValueWithLong:instant];
}

- (jint)getMaximumValueWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getMaximumValueWithOrgJodaTimeReadablePartial:instant];
}

- (jint)getMaximumValueWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                         withIntArray:(IOSIntArray *)values {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getMaximumValueWithOrgJodaTimeReadablePartial:instant withIntArray:values];
}

- (jint)getMaximumTextLengthWithJavaUtilLocale:(JavaUtilLocale *)locale {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getMaximumTextLengthWithJavaUtilLocale:locale];
}

- (jint)getMaximumShortTextLengthWithJavaUtilLocale:(JavaUtilLocale *)locale {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getMaximumShortTextLengthWithJavaUtilLocale:locale];
}

- (jlong)roundFloorWithLong:(jlong)instant {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) roundFloorWithLong:instant];
}

- (jlong)roundCeilingWithLong:(jlong)instant {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) roundCeilingWithLong:instant];
}

- (jlong)roundHalfFloorWithLong:(jlong)instant {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) roundHalfFloorWithLong:instant];
}

- (jlong)roundHalfCeilingWithLong:(jlong)instant {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) roundHalfCeilingWithLong:instant];
}

- (jlong)roundHalfEvenWithLong:(jlong)instant {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) roundHalfEvenWithLong:instant];
}

- (jlong)remainderWithLong:(jlong)instant {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) remainderWithLong:instant];
}

- (NSString *)description {
  return (JreStrcat("$$C", @"DateTimeField[", [self getName], ']'));
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDateTimeField;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDateTimeFieldType;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 5, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 5, 7, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 5, 8, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 5, 9, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 10, 6, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 10, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 10, 7, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 10, 8, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 10, 9, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 11, 13, -1, -1, -1, -1 },
    { NULL, "[I", 0x1, 11, 14, -1, -1, -1, -1 },
    { NULL, "[I", 0x1, 15, 14, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 16, 12, -1, -1, -1, -1 },
    { NULL, "[I", 0x1, 16, 14, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 17, 13, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 18, 13, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 19, 12, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 19, 20, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 19, 21, -1, -1, -1, -1 },
    { NULL, "[I", 0x1, 19, 14, -1, -1, -1, -1 },
    { NULL, "[I", 0x1, 19, 22, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDurationField;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDurationField;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 23, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 24, 4, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDurationField;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 25, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 25, 26, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 25, 27, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 28, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 28, 26, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 28, 27, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 29, 30, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 31, 30, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 32, 4, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 33, 4, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 34, 4, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 35, 4, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 36, 4, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 37, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 38, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgJodaTimeDateTimeField:);
  methods[1].selector = @selector(initWithOrgJodaTimeDateTimeField:withOrgJodaTimeDateTimeFieldType:);
  methods[2].selector = @selector(initWithOrgJodaTimeDateTimeField:withOrgJodaTimeDurationField:withOrgJodaTimeDateTimeFieldType:);
  methods[3].selector = @selector(getWrappedField);
  methods[4].selector = @selector(getType);
  methods[5].selector = @selector(getName);
  methods[6].selector = @selector(isSupported);
  methods[7].selector = @selector(isLenient);
  methods[8].selector = @selector(getWithLong:);
  methods[9].selector = @selector(getAsTextWithLong:withJavaUtilLocale:);
  methods[10].selector = @selector(getAsTextWithLong:);
  methods[11].selector = @selector(getAsTextWithOrgJodaTimeReadablePartial:withInt:withJavaUtilLocale:);
  methods[12].selector = @selector(getAsTextWithOrgJodaTimeReadablePartial:withJavaUtilLocale:);
  methods[13].selector = @selector(getAsTextWithInt:withJavaUtilLocale:);
  methods[14].selector = @selector(getAsShortTextWithLong:withJavaUtilLocale:);
  methods[15].selector = @selector(getAsShortTextWithLong:);
  methods[16].selector = @selector(getAsShortTextWithOrgJodaTimeReadablePartial:withInt:withJavaUtilLocale:);
  methods[17].selector = @selector(getAsShortTextWithOrgJodaTimeReadablePartial:withJavaUtilLocale:);
  methods[18].selector = @selector(getAsShortTextWithInt:withJavaUtilLocale:);
  methods[19].selector = @selector(addWithLong:withInt:);
  methods[20].selector = @selector(addWithLong:withLong:);
  methods[21].selector = @selector(addWithOrgJodaTimeReadablePartial:withInt:withIntArray:withInt:);
  methods[22].selector = @selector(addWrapPartialWithOrgJodaTimeReadablePartial:withInt:withIntArray:withInt:);
  methods[23].selector = @selector(addWrapFieldWithLong:withInt:);
  methods[24].selector = @selector(addWrapFieldWithOrgJodaTimeReadablePartial:withInt:withIntArray:withInt:);
  methods[25].selector = @selector(getDifferenceWithLong:withLong:);
  methods[26].selector = @selector(getDifferenceAsLongWithLong:withLong:);
  methods[27].selector = @selector(setWithLong:withInt:);
  methods[28].selector = @selector(setWithLong:withNSString:withJavaUtilLocale:);
  methods[29].selector = @selector(setWithLong:withNSString:);
  methods[30].selector = @selector(setWithOrgJodaTimeReadablePartial:withInt:withIntArray:withInt:);
  methods[31].selector = @selector(setWithOrgJodaTimeReadablePartial:withInt:withIntArray:withNSString:withJavaUtilLocale:);
  methods[32].selector = @selector(getDurationField);
  methods[33].selector = @selector(getRangeDurationField);
  methods[34].selector = @selector(isLeapWithLong:);
  methods[35].selector = @selector(getLeapAmountWithLong:);
  methods[36].selector = @selector(getLeapDurationField);
  methods[37].selector = @selector(getMinimumValue);
  methods[38].selector = @selector(getMinimumValueWithLong:);
  methods[39].selector = @selector(getMinimumValueWithOrgJodaTimeReadablePartial:);
  methods[40].selector = @selector(getMinimumValueWithOrgJodaTimeReadablePartial:withIntArray:);
  methods[41].selector = @selector(getMaximumValue);
  methods[42].selector = @selector(getMaximumValueWithLong:);
  methods[43].selector = @selector(getMaximumValueWithOrgJodaTimeReadablePartial:);
  methods[44].selector = @selector(getMaximumValueWithOrgJodaTimeReadablePartial:withIntArray:);
  methods[45].selector = @selector(getMaximumTextLengthWithJavaUtilLocale:);
  methods[46].selector = @selector(getMaximumShortTextLengthWithJavaUtilLocale:);
  methods[47].selector = @selector(roundFloorWithLong:);
  methods[48].selector = @selector(roundCeilingWithLong:);
  methods[49].selector = @selector(roundHalfFloorWithLong:);
  methods[50].selector = @selector(roundHalfCeilingWithLong:);
  methods[51].selector = @selector(roundHalfEvenWithLong:);
  methods[52].selector = @selector(remainderWithLong:);
  methods[53].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = OrgJodaTimeFieldDelegatedDateTimeField_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "iField_", "LOrgJodaTimeDateTimeField;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "iRangeDurationField_", "LOrgJodaTimeDurationField;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "iType_", "LOrgJodaTimeDateTimeFieldType;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgJodaTimeDateTimeField;", "LOrgJodaTimeDateTimeField;LOrgJodaTimeDateTimeFieldType;", "LOrgJodaTimeDateTimeField;LOrgJodaTimeDurationField;LOrgJodaTimeDateTimeFieldType;", "get", "J", "getAsText", "JLJavaUtilLocale;", "LOrgJodaTimeReadablePartial;ILJavaUtilLocale;", "LOrgJodaTimeReadablePartial;LJavaUtilLocale;", "ILJavaUtilLocale;", "getAsShortText", "add", "JI", "JJ", "LOrgJodaTimeReadablePartial;I[II", "addWrapPartial", "addWrapField", "getDifference", "getDifferenceAsLong", "set", "JLNSString;LJavaUtilLocale;", "JLNSString;", "LOrgJodaTimeReadablePartial;I[ILNSString;LJavaUtilLocale;", "isLeap", "getLeapAmount", "getMinimumValue", "LOrgJodaTimeReadablePartial;", "LOrgJodaTimeReadablePartial;[I", "getMaximumValue", "getMaximumTextLength", "LJavaUtilLocale;", "getMaximumShortTextLength", "roundFloor", "roundCeiling", "roundHalfFloor", "roundHalfCeiling", "roundHalfEven", "remainder", "toString" };
  static const J2ObjcClassInfo _OrgJodaTimeFieldDelegatedDateTimeField = { "DelegatedDateTimeField", "org.joda.time.field", ptrTable, methods, fields, 7, 0x1, 54, 4, -1, -1, -1, -1, -1 };
  return &_OrgJodaTimeFieldDelegatedDateTimeField;
}

@end

void OrgJodaTimeFieldDelegatedDateTimeField_initWithOrgJodaTimeDateTimeField_(OrgJodaTimeFieldDelegatedDateTimeField *self, OrgJodaTimeDateTimeField *field) {
  OrgJodaTimeFieldDelegatedDateTimeField_initWithOrgJodaTimeDateTimeField_withOrgJodaTimeDateTimeFieldType_(self, field, nil);
}

OrgJodaTimeFieldDelegatedDateTimeField *new_OrgJodaTimeFieldDelegatedDateTimeField_initWithOrgJodaTimeDateTimeField_(OrgJodaTimeDateTimeField *field) {
  J2OBJC_NEW_IMPL(OrgJodaTimeFieldDelegatedDateTimeField, initWithOrgJodaTimeDateTimeField_, field)
}

OrgJodaTimeFieldDelegatedDateTimeField *create_OrgJodaTimeFieldDelegatedDateTimeField_initWithOrgJodaTimeDateTimeField_(OrgJodaTimeDateTimeField *field) {
  J2OBJC_CREATE_IMPL(OrgJodaTimeFieldDelegatedDateTimeField, initWithOrgJodaTimeDateTimeField_, field)
}

void OrgJodaTimeFieldDelegatedDateTimeField_initWithOrgJodaTimeDateTimeField_withOrgJodaTimeDateTimeFieldType_(OrgJodaTimeFieldDelegatedDateTimeField *self, OrgJodaTimeDateTimeField *field, OrgJodaTimeDateTimeFieldType *type) {
  OrgJodaTimeFieldDelegatedDateTimeField_initWithOrgJodaTimeDateTimeField_withOrgJodaTimeDurationField_withOrgJodaTimeDateTimeFieldType_(self, field, nil, type);
}

OrgJodaTimeFieldDelegatedDateTimeField *new_OrgJodaTimeFieldDelegatedDateTimeField_initWithOrgJodaTimeDateTimeField_withOrgJodaTimeDateTimeFieldType_(OrgJodaTimeDateTimeField *field, OrgJodaTimeDateTimeFieldType *type) {
  J2OBJC_NEW_IMPL(OrgJodaTimeFieldDelegatedDateTimeField, initWithOrgJodaTimeDateTimeField_withOrgJodaTimeDateTimeFieldType_, field, type)
}

OrgJodaTimeFieldDelegatedDateTimeField *create_OrgJodaTimeFieldDelegatedDateTimeField_initWithOrgJodaTimeDateTimeField_withOrgJodaTimeDateTimeFieldType_(OrgJodaTimeDateTimeField *field, OrgJodaTimeDateTimeFieldType *type) {
  J2OBJC_CREATE_IMPL(OrgJodaTimeFieldDelegatedDateTimeField, initWithOrgJodaTimeDateTimeField_withOrgJodaTimeDateTimeFieldType_, field, type)
}

void OrgJodaTimeFieldDelegatedDateTimeField_initWithOrgJodaTimeDateTimeField_withOrgJodaTimeDurationField_withOrgJodaTimeDateTimeFieldType_(OrgJodaTimeFieldDelegatedDateTimeField *self, OrgJodaTimeDateTimeField *field, OrgJodaTimeDurationField *rangeField, OrgJodaTimeDateTimeFieldType *type) {
  OrgJodaTimeDateTimeField_init(self);
  if (field == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"The field must not be null");
  }
  self->iField_ = field;
  self->iRangeDurationField_ = rangeField;
  self->iType_ = (type == nil ? [field getType] : type);
}

OrgJodaTimeFieldDelegatedDateTimeField *new_OrgJodaTimeFieldDelegatedDateTimeField_initWithOrgJodaTimeDateTimeField_withOrgJodaTimeDurationField_withOrgJodaTimeDateTimeFieldType_(OrgJodaTimeDateTimeField *field, OrgJodaTimeDurationField *rangeField, OrgJodaTimeDateTimeFieldType *type) {
  J2OBJC_NEW_IMPL(OrgJodaTimeFieldDelegatedDateTimeField, initWithOrgJodaTimeDateTimeField_withOrgJodaTimeDurationField_withOrgJodaTimeDateTimeFieldType_, field, rangeField, type)
}

OrgJodaTimeFieldDelegatedDateTimeField *create_OrgJodaTimeFieldDelegatedDateTimeField_initWithOrgJodaTimeDateTimeField_withOrgJodaTimeDurationField_withOrgJodaTimeDateTimeFieldType_(OrgJodaTimeDateTimeField *field, OrgJodaTimeDurationField *rangeField, OrgJodaTimeDateTimeFieldType *type) {
  J2OBJC_CREATE_IMPL(OrgJodaTimeFieldDelegatedDateTimeField, initWithOrgJodaTimeDateTimeField_withOrgJodaTimeDurationField_withOrgJodaTimeDateTimeFieldType_, field, rangeField, type)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeFieldDelegatedDateTimeField)
