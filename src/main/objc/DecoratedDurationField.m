//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/eric/repos/360-j2objc/joda-time/build/mainTranslationExtraction/org/joda/time/field/DecoratedDurationField.java
//

#include "BaseDurationField.h"
#include "DecoratedDurationField.h"
#include "DurationField.h"
#include "DurationFieldType.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"

@interface OrgJodaTimeFieldDecoratedDurationField () {
 @public
  OrgJodaTimeDurationField *iField_;
}

@end

J2OBJC_FIELD_SETTER(OrgJodaTimeFieldDecoratedDurationField, iField_, OrgJodaTimeDurationField *)

inline jlong OrgJodaTimeFieldDecoratedDurationField_get_serialVersionUID();
#define OrgJodaTimeFieldDecoratedDurationField_serialVersionUID 8019982251647420015LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeFieldDecoratedDurationField, serialVersionUID, jlong)

@implementation OrgJodaTimeFieldDecoratedDurationField

- (instancetype)initWithOrgJodaTimeDurationField:(OrgJodaTimeDurationField *)field
                withOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)type {
  OrgJodaTimeFieldDecoratedDurationField_initWithOrgJodaTimeDurationField_withOrgJodaTimeDurationFieldType_(self, field, type);
  return self;
}

- (OrgJodaTimeDurationField *)getWrappedField {
  return iField_;
}

- (jboolean)isPrecise {
  return [((OrgJodaTimeDurationField *) nil_chk(iField_)) isPrecise];
}

- (jlong)getValueAsLongWithLong:(jlong)duration
                       withLong:(jlong)instant {
  return [((OrgJodaTimeDurationField *) nil_chk(iField_)) getValueAsLongWithLong:duration withLong:instant];
}

- (jlong)getMillisWithInt:(jint)value
                 withLong:(jlong)instant {
  return [((OrgJodaTimeDurationField *) nil_chk(iField_)) getMillisWithInt:value withLong:instant];
}

- (jlong)getMillisWithLong:(jlong)value
                  withLong:(jlong)instant {
  return [((OrgJodaTimeDurationField *) nil_chk(iField_)) getMillisWithLong:value withLong:instant];
}

- (jlong)addWithLong:(jlong)instant
             withInt:(jint)value {
  return [((OrgJodaTimeDurationField *) nil_chk(iField_)) addWithLong:instant withInt:value];
}

- (jlong)addWithLong:(jlong)instant
            withLong:(jlong)value {
  return [((OrgJodaTimeDurationField *) nil_chk(iField_)) addWithLong:instant withLong:value];
}

- (jlong)getDifferenceAsLongWithLong:(jlong)minuendInstant
                            withLong:(jlong)subtrahendInstant {
  return [((OrgJodaTimeDurationField *) nil_chk(iField_)) getDifferenceAsLongWithLong:minuendInstant withLong:subtrahendInstant];
}

- (jlong)getUnitMillis {
  return [((OrgJodaTimeDurationField *) nil_chk(iField_)) getUnitMillis];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDurationField;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 5, 2, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 7, 2, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgJodaTimeDurationField:withOrgJodaTimeDurationFieldType:);
  methods[1].selector = @selector(getWrappedField);
  methods[2].selector = @selector(isPrecise);
  methods[3].selector = @selector(getValueAsLongWithLong:withLong:);
  methods[4].selector = @selector(getMillisWithInt:withLong:);
  methods[5].selector = @selector(getMillisWithLong:withLong:);
  methods[6].selector = @selector(addWithLong:withInt:);
  methods[7].selector = @selector(addWithLong:withLong:);
  methods[8].selector = @selector(getDifferenceAsLongWithLong:withLong:);
  methods[9].selector = @selector(getUnitMillis);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = OrgJodaTimeFieldDecoratedDurationField_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "iField_", "LOrgJodaTimeDurationField;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgJodaTimeDurationField;LOrgJodaTimeDurationFieldType;", "getValueAsLong", "JJ", "getMillis", "IJ", "add", "JI", "getDifferenceAsLong" };
  static const J2ObjcClassInfo _OrgJodaTimeFieldDecoratedDurationField = { "DecoratedDurationField", "org.joda.time.field", ptrTable, methods, fields, 7, 0x1, 10, 2, -1, -1, -1, -1, -1 };
  return &_OrgJodaTimeFieldDecoratedDurationField;
}

@end

void OrgJodaTimeFieldDecoratedDurationField_initWithOrgJodaTimeDurationField_withOrgJodaTimeDurationFieldType_(OrgJodaTimeFieldDecoratedDurationField *self, OrgJodaTimeDurationField *field, OrgJodaTimeDurationFieldType *type) {
  OrgJodaTimeFieldBaseDurationField_initWithOrgJodaTimeDurationFieldType_(self, type);
  if (field == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"The field must not be null");
  }
  if (![field isSupported]) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"The field must be supported");
  }
  self->iField_ = field;
}

OrgJodaTimeFieldDecoratedDurationField *new_OrgJodaTimeFieldDecoratedDurationField_initWithOrgJodaTimeDurationField_withOrgJodaTimeDurationFieldType_(OrgJodaTimeDurationField *field, OrgJodaTimeDurationFieldType *type) {
  J2OBJC_NEW_IMPL(OrgJodaTimeFieldDecoratedDurationField, initWithOrgJodaTimeDurationField_withOrgJodaTimeDurationFieldType_, field, type)
}

OrgJodaTimeFieldDecoratedDurationField *create_OrgJodaTimeFieldDecoratedDurationField_initWithOrgJodaTimeDurationField_withOrgJodaTimeDurationFieldType_(OrgJodaTimeDurationField *field, OrgJodaTimeDurationFieldType *type) {
  J2OBJC_CREATE_IMPL(OrgJodaTimeFieldDecoratedDurationField, initWithOrgJodaTimeDurationField_withOrgJodaTimeDurationFieldType_, field, type)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeFieldDecoratedDurationField)
