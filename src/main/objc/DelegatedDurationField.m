//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/eric/repos/360-j2objc/joda-time/build/mainTranslationExtraction/org/joda/time/field/DelegatedDurationField.java
//

#include "DelegatedDurationField.h"
#include "DurationField.h"
#include "DurationFieldType.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"

@interface OrgJodaTimeFieldDelegatedDurationField () {
 @public
  OrgJodaTimeDurationField *iField_;
  OrgJodaTimeDurationFieldType *iType_;
}

@end

J2OBJC_FIELD_SETTER(OrgJodaTimeFieldDelegatedDurationField, iField_, OrgJodaTimeDurationField *)
J2OBJC_FIELD_SETTER(OrgJodaTimeFieldDelegatedDurationField, iType_, OrgJodaTimeDurationFieldType *)

inline jlong OrgJodaTimeFieldDelegatedDurationField_get_serialVersionUID();
#define OrgJodaTimeFieldDelegatedDurationField_serialVersionUID -5576443481242007829LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeFieldDelegatedDurationField, serialVersionUID, jlong)

@implementation OrgJodaTimeFieldDelegatedDurationField

- (instancetype)initWithOrgJodaTimeDurationField:(OrgJodaTimeDurationField *)field {
  OrgJodaTimeFieldDelegatedDurationField_initWithOrgJodaTimeDurationField_(self, field);
  return self;
}

- (instancetype)initWithOrgJodaTimeDurationField:(OrgJodaTimeDurationField *)field
                withOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)type {
  OrgJodaTimeFieldDelegatedDurationField_initWithOrgJodaTimeDurationField_withOrgJodaTimeDurationFieldType_(self, field, type);
  return self;
}

- (OrgJodaTimeDurationField *)getWrappedField {
  return iField_;
}

- (OrgJodaTimeDurationFieldType *)getType {
  return iType_;
}

- (NSString *)getName {
  return [((OrgJodaTimeDurationFieldType *) nil_chk(iType_)) getName];
}

- (jboolean)isSupported {
  return [((OrgJodaTimeDurationField *) nil_chk(iField_)) isSupported];
}

- (jboolean)isPrecise {
  return [((OrgJodaTimeDurationField *) nil_chk(iField_)) isPrecise];
}

- (jint)getValueWithLong:(jlong)duration {
  return [((OrgJodaTimeDurationField *) nil_chk(iField_)) getValueWithLong:duration];
}

- (jlong)getValueAsLongWithLong:(jlong)duration {
  return [((OrgJodaTimeDurationField *) nil_chk(iField_)) getValueAsLongWithLong:duration];
}

- (jint)getValueWithLong:(jlong)duration
                withLong:(jlong)instant {
  return [((OrgJodaTimeDurationField *) nil_chk(iField_)) getValueWithLong:duration withLong:instant];
}

- (jlong)getValueAsLongWithLong:(jlong)duration
                       withLong:(jlong)instant {
  return [((OrgJodaTimeDurationField *) nil_chk(iField_)) getValueAsLongWithLong:duration withLong:instant];
}

- (jlong)getMillisWithInt:(jint)value {
  return [((OrgJodaTimeDurationField *) nil_chk(iField_)) getMillisWithInt:value];
}

- (jlong)getMillisWithLong:(jlong)value {
  return [((OrgJodaTimeDurationField *) nil_chk(iField_)) getMillisWithLong:value];
}

- (jlong)getMillisWithInt:(jint)value
                 withLong:(jlong)instant {
  return [((OrgJodaTimeDurationField *) nil_chk(iField_)) getMillisWithInt:value withLong:instant];
}

- (jlong)getMillisWithLong:(jlong)value
                  withLong:(jlong)instant {
  return [((OrgJodaTimeDurationField *) nil_chk(iField_)) getMillisWithLong:value withLong:instant];
}

- (jlong)addWithLong:(jlong)instant
             withInt:(jint)value {
  return [((OrgJodaTimeDurationField *) nil_chk(iField_)) addWithLong:instant withInt:value];
}

- (jlong)addWithLong:(jlong)instant
            withLong:(jlong)value {
  return [((OrgJodaTimeDurationField *) nil_chk(iField_)) addWithLong:instant withLong:value];
}

- (jint)getDifferenceWithLong:(jlong)minuendInstant
                     withLong:(jlong)subtrahendInstant {
  return [((OrgJodaTimeDurationField *) nil_chk(iField_)) getDifferenceWithLong:minuendInstant withLong:subtrahendInstant];
}

- (jlong)getDifferenceAsLongWithLong:(jlong)minuendInstant
                            withLong:(jlong)subtrahendInstant {
  return [((OrgJodaTimeDurationField *) nil_chk(iField_)) getDifferenceAsLongWithLong:minuendInstant withLong:subtrahendInstant];
}

- (jlong)getUnitMillis {
  return [((OrgJodaTimeDurationField *) nil_chk(iField_)) getUnitMillis];
}

- (jint)compareToWithId:(OrgJodaTimeDurationField *)durationField {
  (void) cast_chk(durationField, [OrgJodaTimeDurationField class]);
  return [((OrgJodaTimeDurationField *) nil_chk(iField_)) compareToWithId:durationField];
}

- (jboolean)isEqual:(id)obj {
  if ([obj isKindOfClass:[OrgJodaTimeFieldDelegatedDurationField class]]) {
    return [((OrgJodaTimeDurationField *) nil_chk(iField_)) isEqual:((OrgJodaTimeFieldDelegatedDurationField *) nil_chk(((OrgJodaTimeFieldDelegatedDurationField *) cast_chk(obj, [OrgJodaTimeFieldDelegatedDurationField class]))))->iField_];
  }
  return false;
}

- (NSUInteger)hash {
  return ((jint) [((OrgJodaTimeDurationField *) nil_chk(iField_)) hash]) ^ ((jint) [((OrgJodaTimeDurationFieldType *) nil_chk(iType_)) hash]);
}

- (NSString *)description {
  return (iType_ == nil) ? [((OrgJodaTimeDurationField *) nil_chk(iField_)) description] : (JreStrcat("$@C", @"DurationField[", iType_, ']'));
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDurationField;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDurationFieldType;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 4, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 2, 5, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 6, 3, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 6, 8, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 6, 5, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 9, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 11, 5, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 12, 5, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 13, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 14, 15, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 16, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 17, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgJodaTimeDurationField:);
  methods[1].selector = @selector(initWithOrgJodaTimeDurationField:withOrgJodaTimeDurationFieldType:);
  methods[2].selector = @selector(getWrappedField);
  methods[3].selector = @selector(getType);
  methods[4].selector = @selector(getName);
  methods[5].selector = @selector(isSupported);
  methods[6].selector = @selector(isPrecise);
  methods[7].selector = @selector(getValueWithLong:);
  methods[8].selector = @selector(getValueAsLongWithLong:);
  methods[9].selector = @selector(getValueWithLong:withLong:);
  methods[10].selector = @selector(getValueAsLongWithLong:withLong:);
  methods[11].selector = @selector(getMillisWithInt:);
  methods[12].selector = @selector(getMillisWithLong:);
  methods[13].selector = @selector(getMillisWithInt:withLong:);
  methods[14].selector = @selector(getMillisWithLong:withLong:);
  methods[15].selector = @selector(addWithLong:withInt:);
  methods[16].selector = @selector(addWithLong:withLong:);
  methods[17].selector = @selector(getDifferenceWithLong:withLong:);
  methods[18].selector = @selector(getDifferenceAsLongWithLong:withLong:);
  methods[19].selector = @selector(getUnitMillis);
  methods[20].selector = @selector(compareToWithId:);
  methods[21].selector = @selector(isEqual:);
  methods[22].selector = @selector(hash);
  methods[23].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = OrgJodaTimeFieldDelegatedDurationField_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "iField_", "LOrgJodaTimeDurationField;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "iType_", "LOrgJodaTimeDurationFieldType;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgJodaTimeDurationField;", "LOrgJodaTimeDurationField;LOrgJodaTimeDurationFieldType;", "getValue", "J", "getValueAsLong", "JJ", "getMillis", "I", "IJ", "add", "JI", "getDifference", "getDifferenceAsLong", "compareTo", "equals", "LNSObject;", "hashCode", "toString" };
  static const J2ObjcClassInfo _OrgJodaTimeFieldDelegatedDurationField = { "DelegatedDurationField", "org.joda.time.field", ptrTable, methods, fields, 7, 0x1, 24, 3, -1, -1, -1, -1, -1 };
  return &_OrgJodaTimeFieldDelegatedDurationField;
}

@end

void OrgJodaTimeFieldDelegatedDurationField_initWithOrgJodaTimeDurationField_(OrgJodaTimeFieldDelegatedDurationField *self, OrgJodaTimeDurationField *field) {
  OrgJodaTimeFieldDelegatedDurationField_initWithOrgJodaTimeDurationField_withOrgJodaTimeDurationFieldType_(self, field, nil);
}

OrgJodaTimeFieldDelegatedDurationField *new_OrgJodaTimeFieldDelegatedDurationField_initWithOrgJodaTimeDurationField_(OrgJodaTimeDurationField *field) {
  J2OBJC_NEW_IMPL(OrgJodaTimeFieldDelegatedDurationField, initWithOrgJodaTimeDurationField_, field)
}

OrgJodaTimeFieldDelegatedDurationField *create_OrgJodaTimeFieldDelegatedDurationField_initWithOrgJodaTimeDurationField_(OrgJodaTimeDurationField *field) {
  J2OBJC_CREATE_IMPL(OrgJodaTimeFieldDelegatedDurationField, initWithOrgJodaTimeDurationField_, field)
}

void OrgJodaTimeFieldDelegatedDurationField_initWithOrgJodaTimeDurationField_withOrgJodaTimeDurationFieldType_(OrgJodaTimeFieldDelegatedDurationField *self, OrgJodaTimeDurationField *field, OrgJodaTimeDurationFieldType *type) {
  OrgJodaTimeDurationField_init(self);
  if (field == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"The field must not be null");
  }
  self->iField_ = field;
  self->iType_ = (type == nil ? [field getType] : type);
}

OrgJodaTimeFieldDelegatedDurationField *new_OrgJodaTimeFieldDelegatedDurationField_initWithOrgJodaTimeDurationField_withOrgJodaTimeDurationFieldType_(OrgJodaTimeDurationField *field, OrgJodaTimeDurationFieldType *type) {
  J2OBJC_NEW_IMPL(OrgJodaTimeFieldDelegatedDurationField, initWithOrgJodaTimeDurationField_withOrgJodaTimeDurationFieldType_, field, type)
}

OrgJodaTimeFieldDelegatedDurationField *create_OrgJodaTimeFieldDelegatedDurationField_initWithOrgJodaTimeDurationField_withOrgJodaTimeDurationFieldType_(OrgJodaTimeDurationField *field, OrgJodaTimeDurationFieldType *type) {
  J2OBJC_CREATE_IMPL(OrgJodaTimeFieldDelegatedDurationField, initWithOrgJodaTimeDurationField_withOrgJodaTimeDurationFieldType_, field, type)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeFieldDelegatedDurationField)
