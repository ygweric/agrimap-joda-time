//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/eric/repos/360-j2objc/joda-time/build/mainTranslationExtraction/org/joda/time/convert/ReadableDurationConverter.java
//

#include "AbstractConverter.h"
#include "Chronology.h"
#include "DateTimeUtils.h"
#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "ReadWritablePeriod.h"
#include "ReadableDuration.h"
#include "ReadableDurationConverter.h"

J2OBJC_INITIALIZED_DEFN(OrgJodaTimeConvertReadableDurationConverter)

OrgJodaTimeConvertReadableDurationConverter *OrgJodaTimeConvertReadableDurationConverter_INSTANCE;

@implementation OrgJodaTimeConvertReadableDurationConverter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJodaTimeConvertReadableDurationConverter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jlong)getDurationMillisWithId:(id)object {
  return [((id<OrgJodaTimeReadableDuration>) nil_chk(((id<OrgJodaTimeReadableDuration>) cast_check(object, OrgJodaTimeReadableDuration_class_())))) getMillis];
}

- (void)setIntoWithOrgJodaTimeReadWritablePeriod:(id<OrgJodaTimeReadWritablePeriod>)writablePeriod
                                          withId:(id)object
                       withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono {
  id<OrgJodaTimeReadableDuration> dur = (id<OrgJodaTimeReadableDuration>) cast_check(object, OrgJodaTimeReadableDuration_class_());
  chrono = OrgJodaTimeDateTimeUtils_getChronologyWithOrgJodaTimeChronology_(chrono);
  jlong duration = [((id<OrgJodaTimeReadableDuration>) nil_chk(dur)) getMillis];
  IOSIntArray *values = [((OrgJodaTimeChronology *) nil_chk(chrono)) getWithOrgJodaTimeReadablePeriod:writablePeriod withLong:duration];
  for (jint i = 0; i < ((IOSIntArray *) nil_chk(values))->size_; i++) {
    [((id<OrgJodaTimeReadWritablePeriod>) nil_chk(writablePeriod)) setValueWithInt:i withInt:IOSIntArray_Get(values, i)];
  }
}

- (IOSClass *)getSupportedType {
  return OrgJodaTimeReadableDuration_class_();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getDurationMillisWithId:);
  methods[2].selector = @selector(setIntoWithOrgJodaTimeReadWritablePeriod:withId:withOrgJodaTimeChronology:);
  methods[3].selector = @selector(getSupportedType);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LOrgJodaTimeConvertReadableDurationConverter;", .constantValue.asLong = 0, 0x18, -1, 5, -1, -1 },
  };
  static const void *ptrTable[] = { "getDurationMillis", "LNSObject;", "setInto", "LOrgJodaTimeReadWritablePeriod;LNSObject;LOrgJodaTimeChronology;", "()Ljava/lang/Class<*>;", &OrgJodaTimeConvertReadableDurationConverter_INSTANCE };
  static const J2ObjcClassInfo _OrgJodaTimeConvertReadableDurationConverter = { "ReadableDurationConverter", "org.joda.time.convert", ptrTable, methods, fields, 7, 0x0, 4, 1, -1, -1, -1, -1, -1 };
  return &_OrgJodaTimeConvertReadableDurationConverter;
}

+ (void)initialize {
  if (self == [OrgJodaTimeConvertReadableDurationConverter class]) {
    OrgJodaTimeConvertReadableDurationConverter_INSTANCE = new_OrgJodaTimeConvertReadableDurationConverter_init();
    J2OBJC_SET_INITIALIZED(OrgJodaTimeConvertReadableDurationConverter)
  }
}

@end

void OrgJodaTimeConvertReadableDurationConverter_init(OrgJodaTimeConvertReadableDurationConverter *self) {
  OrgJodaTimeConvertAbstractConverter_init(self);
}

OrgJodaTimeConvertReadableDurationConverter *new_OrgJodaTimeConvertReadableDurationConverter_init() {
  J2OBJC_NEW_IMPL(OrgJodaTimeConvertReadableDurationConverter, init)
}

OrgJodaTimeConvertReadableDurationConverter *create_OrgJodaTimeConvertReadableDurationConverter_init() {
  J2OBJC_CREATE_IMPL(OrgJodaTimeConvertReadableDurationConverter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeConvertReadableDurationConverter)
