//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/eric/repos/360-j2objc/joda-time/build/mainTranslationExtraction/org/joda/time/YearMonth.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_YearMonth")
#ifdef RESTRICT_YearMonth
#define INCLUDE_ALL_YearMonth 0
#else
#define INCLUDE_ALL_YearMonth 1
#endif
#undef RESTRICT_YearMonth

#if !defined (OrgJodaTimeYearMonth_) && (INCLUDE_ALL_YearMonth || defined(INCLUDE_OrgJodaTimeYearMonth))
#define OrgJodaTimeYearMonth_

#define RESTRICT_BasePartial 1
#define INCLUDE_OrgJodaTimeBaseBasePartial 1
#include "BasePartial.h"

#define RESTRICT_ReadablePartial 1
#define INCLUDE_OrgJodaTimeReadablePartial 1
#include "ReadablePartial.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class IOSIntArray;
@class IOSObjectArray;
@class JavaUtilCalendar;
@class JavaUtilDate;
@class JavaUtilLocale;
@class OrgJodaTimeChronology;
@class OrgJodaTimeDateTimeField;
@class OrgJodaTimeDateTimeFieldType;
@class OrgJodaTimeDateTimeZone;
@class OrgJodaTimeDurationFieldType;
@class OrgJodaTimeFormatDateTimeFormatter;
@class OrgJodaTimeInterval;
@class OrgJodaTimeLocalDate;
@class OrgJodaTimeYearMonth_Property;
@protocol OrgJodaTimeReadablePeriod;

@interface OrgJodaTimeYearMonth : OrgJodaTimeBaseBasePartial < OrgJodaTimeReadablePartial, JavaIoSerializable >

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology;

- (instancetype)initWithOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)zone;

- (instancetype)initWithInt:(jint)year
                    withInt:(jint)monthOfYear;

- (instancetype)initWithInt:(jint)year
                    withInt:(jint)monthOfYear
  withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology;

- (instancetype)initWithLong:(jlong)instant;

- (instancetype)initWithLong:(jlong)instant
   withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology;

- (instancetype)initWithId:(id)instant;

- (instancetype)initWithId:(id)instant
 withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology;

+ (OrgJodaTimeYearMonth *)fromCalendarFieldsWithJavaUtilCalendar:(JavaUtilCalendar *)calendar;

+ (OrgJodaTimeYearMonth *)fromDateFieldsWithJavaUtilDate:(JavaUtilDate *)date;

- (OrgJodaTimeDateTimeFieldType *)getFieldTypeWithInt:(jint)index;

- (IOSObjectArray *)getFieldTypes;

- (jint)getMonthOfYear;

- (jint)getYear;

- (OrgJodaTimeYearMonth *)minusWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period;

- (OrgJodaTimeYearMonth *)minusMonthsWithInt:(jint)months;

- (OrgJodaTimeYearMonth *)minusYearsWithInt:(jint)years;

- (OrgJodaTimeYearMonth_Property *)monthOfYear;

+ (OrgJodaTimeYearMonth *)now;

+ (OrgJodaTimeYearMonth *)nowWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology;

+ (OrgJodaTimeYearMonth *)nowWithOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)zone;

+ (OrgJodaTimeYearMonth *)parseWithNSString:(NSString *)str;

+ (OrgJodaTimeYearMonth *)parseWithNSString:(NSString *)str
     withOrgJodaTimeFormatDateTimeFormatter:(OrgJodaTimeFormatDateTimeFormatter *)formatter;

- (OrgJodaTimeYearMonth *)plusWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period;

- (OrgJodaTimeYearMonth *)plusMonthsWithInt:(jint)months;

- (OrgJodaTimeYearMonth *)plusYearsWithInt:(jint)years;

- (OrgJodaTimeYearMonth_Property *)propertyWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)type;

- (jint)size;

- (OrgJodaTimeInterval *)toInterval;

- (OrgJodaTimeInterval *)toIntervalWithOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)zone;

- (OrgJodaTimeLocalDate *)toLocalDateWithInt:(jint)dayOfMonth;

- (NSString *)description;

- (NSString *)toStringWithNSString:(NSString *)pattern;

- (NSString *)toStringWithNSString:(NSString *)pattern
                withJavaUtilLocale:(JavaUtilLocale *)locale;

- (OrgJodaTimeYearMonth *)withChronologyRetainFieldsWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)newChronology;

- (OrgJodaTimeYearMonth *)withFieldWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)fieldType
                                                            withInt:(jint)value;

- (OrgJodaTimeYearMonth *)withFieldAddedWithOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)fieldType
                                                                 withInt:(jint)amount;

- (OrgJodaTimeYearMonth *)withMonthOfYearWithInt:(jint)monthOfYear;

- (OrgJodaTimeYearMonth *)withPeriodAddedWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period
                                                               withInt:(jint)scalar;

- (OrgJodaTimeYearMonth *)withYearWithInt:(jint)year;

- (OrgJodaTimeYearMonth_Property *)year;

#pragma mark Protected

- (OrgJodaTimeDateTimeField *)getFieldWithInt:(jint)index
                    withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono;

#pragma mark Package-Private

- (instancetype)initWithOrgJodaTimeYearMonth:(OrgJodaTimeYearMonth *)partial
                   withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono;

- (instancetype)initWithOrgJodaTimeYearMonth:(OrgJodaTimeYearMonth *)partial
                                withIntArray:(IOSIntArray *)values;

@end

J2OBJC_STATIC_INIT(OrgJodaTimeYearMonth)

inline jint OrgJodaTimeYearMonth_get_YEAR();
#define OrgJodaTimeYearMonth_YEAR 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeYearMonth, YEAR, jint)

inline jint OrgJodaTimeYearMonth_get_MONTH_OF_YEAR();
#define OrgJodaTimeYearMonth_MONTH_OF_YEAR 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeYearMonth, MONTH_OF_YEAR, jint)

FOUNDATION_EXPORT OrgJodaTimeYearMonth *OrgJodaTimeYearMonth_now();

FOUNDATION_EXPORT OrgJodaTimeYearMonth *OrgJodaTimeYearMonth_nowWithOrgJodaTimeDateTimeZone_(OrgJodaTimeDateTimeZone *zone);

FOUNDATION_EXPORT OrgJodaTimeYearMonth *OrgJodaTimeYearMonth_nowWithOrgJodaTimeChronology_(OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT OrgJodaTimeYearMonth *OrgJodaTimeYearMonth_parseWithNSString_(NSString *str);

FOUNDATION_EXPORT OrgJodaTimeYearMonth *OrgJodaTimeYearMonth_parseWithNSString_withOrgJodaTimeFormatDateTimeFormatter_(NSString *str, OrgJodaTimeFormatDateTimeFormatter *formatter);

FOUNDATION_EXPORT OrgJodaTimeYearMonth *OrgJodaTimeYearMonth_fromCalendarFieldsWithJavaUtilCalendar_(JavaUtilCalendar *calendar);

FOUNDATION_EXPORT OrgJodaTimeYearMonth *OrgJodaTimeYearMonth_fromDateFieldsWithJavaUtilDate_(JavaUtilDate *date);

FOUNDATION_EXPORT void OrgJodaTimeYearMonth_init(OrgJodaTimeYearMonth *self);

FOUNDATION_EXPORT OrgJodaTimeYearMonth *new_OrgJodaTimeYearMonth_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeYearMonth *create_OrgJodaTimeYearMonth_init();

FOUNDATION_EXPORT void OrgJodaTimeYearMonth_initWithOrgJodaTimeDateTimeZone_(OrgJodaTimeYearMonth *self, OrgJodaTimeDateTimeZone *zone);

FOUNDATION_EXPORT OrgJodaTimeYearMonth *new_OrgJodaTimeYearMonth_initWithOrgJodaTimeDateTimeZone_(OrgJodaTimeDateTimeZone *zone) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeYearMonth *create_OrgJodaTimeYearMonth_initWithOrgJodaTimeDateTimeZone_(OrgJodaTimeDateTimeZone *zone);

FOUNDATION_EXPORT void OrgJodaTimeYearMonth_initWithOrgJodaTimeChronology_(OrgJodaTimeYearMonth *self, OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT OrgJodaTimeYearMonth *new_OrgJodaTimeYearMonth_initWithOrgJodaTimeChronology_(OrgJodaTimeChronology *chronology) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeYearMonth *create_OrgJodaTimeYearMonth_initWithOrgJodaTimeChronology_(OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT void OrgJodaTimeYearMonth_initWithLong_(OrgJodaTimeYearMonth *self, jlong instant);

FOUNDATION_EXPORT OrgJodaTimeYearMonth *new_OrgJodaTimeYearMonth_initWithLong_(jlong instant) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeYearMonth *create_OrgJodaTimeYearMonth_initWithLong_(jlong instant);

FOUNDATION_EXPORT void OrgJodaTimeYearMonth_initWithLong_withOrgJodaTimeChronology_(OrgJodaTimeYearMonth *self, jlong instant, OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT OrgJodaTimeYearMonth *new_OrgJodaTimeYearMonth_initWithLong_withOrgJodaTimeChronology_(jlong instant, OrgJodaTimeChronology *chronology) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeYearMonth *create_OrgJodaTimeYearMonth_initWithLong_withOrgJodaTimeChronology_(jlong instant, OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT void OrgJodaTimeYearMonth_initWithId_(OrgJodaTimeYearMonth *self, id instant);

FOUNDATION_EXPORT OrgJodaTimeYearMonth *new_OrgJodaTimeYearMonth_initWithId_(id instant) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeYearMonth *create_OrgJodaTimeYearMonth_initWithId_(id instant);

FOUNDATION_EXPORT void OrgJodaTimeYearMonth_initWithId_withOrgJodaTimeChronology_(OrgJodaTimeYearMonth *self, id instant, OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT OrgJodaTimeYearMonth *new_OrgJodaTimeYearMonth_initWithId_withOrgJodaTimeChronology_(id instant, OrgJodaTimeChronology *chronology) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeYearMonth *create_OrgJodaTimeYearMonth_initWithId_withOrgJodaTimeChronology_(id instant, OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT void OrgJodaTimeYearMonth_initWithInt_withInt_(OrgJodaTimeYearMonth *self, jint year, jint monthOfYear);

FOUNDATION_EXPORT OrgJodaTimeYearMonth *new_OrgJodaTimeYearMonth_initWithInt_withInt_(jint year, jint monthOfYear) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeYearMonth *create_OrgJodaTimeYearMonth_initWithInt_withInt_(jint year, jint monthOfYear);

FOUNDATION_EXPORT void OrgJodaTimeYearMonth_initWithInt_withInt_withOrgJodaTimeChronology_(OrgJodaTimeYearMonth *self, jint year, jint monthOfYear, OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT OrgJodaTimeYearMonth *new_OrgJodaTimeYearMonth_initWithInt_withInt_withOrgJodaTimeChronology_(jint year, jint monthOfYear, OrgJodaTimeChronology *chronology) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeYearMonth *create_OrgJodaTimeYearMonth_initWithInt_withInt_withOrgJodaTimeChronology_(jint year, jint monthOfYear, OrgJodaTimeChronology *chronology);

FOUNDATION_EXPORT void OrgJodaTimeYearMonth_initWithOrgJodaTimeYearMonth_withIntArray_(OrgJodaTimeYearMonth *self, OrgJodaTimeYearMonth *partial, IOSIntArray *values);

FOUNDATION_EXPORT OrgJodaTimeYearMonth *new_OrgJodaTimeYearMonth_initWithOrgJodaTimeYearMonth_withIntArray_(OrgJodaTimeYearMonth *partial, IOSIntArray *values) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeYearMonth *create_OrgJodaTimeYearMonth_initWithOrgJodaTimeYearMonth_withIntArray_(OrgJodaTimeYearMonth *partial, IOSIntArray *values);

FOUNDATION_EXPORT void OrgJodaTimeYearMonth_initWithOrgJodaTimeYearMonth_withOrgJodaTimeChronology_(OrgJodaTimeYearMonth *self, OrgJodaTimeYearMonth *partial, OrgJodaTimeChronology *chrono);

FOUNDATION_EXPORT OrgJodaTimeYearMonth *new_OrgJodaTimeYearMonth_initWithOrgJodaTimeYearMonth_withOrgJodaTimeChronology_(OrgJodaTimeYearMonth *partial, OrgJodaTimeChronology *chrono) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeYearMonth *create_OrgJodaTimeYearMonth_initWithOrgJodaTimeYearMonth_withOrgJodaTimeChronology_(OrgJodaTimeYearMonth *partial, OrgJodaTimeChronology *chrono);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeYearMonth)

#endif

#if !defined (OrgJodaTimeYearMonth_Property_) && (INCLUDE_ALL_YearMonth || defined(INCLUDE_OrgJodaTimeYearMonth_Property))
#define OrgJodaTimeYearMonth_Property_

#define RESTRICT_AbstractPartialFieldProperty 1
#define INCLUDE_OrgJodaTimeFieldAbstractPartialFieldProperty 1
#include "AbstractPartialFieldProperty.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class JavaUtilLocale;
@class OrgJodaTimeDateTimeField;
@class OrgJodaTimeYearMonth;
@protocol OrgJodaTimeReadablePartial;

@interface OrgJodaTimeYearMonth_Property : OrgJodaTimeFieldAbstractPartialFieldProperty < JavaIoSerializable >

#pragma mark Public

- (OrgJodaTimeYearMonth *)addToCopyWithInt:(jint)valueToAdd;

- (OrgJodaTimeYearMonth *)addWrapFieldToCopyWithInt:(jint)valueToAdd;

- (jint)get;

- (OrgJodaTimeDateTimeField *)getField;

- (OrgJodaTimeYearMonth *)getYearMonth;

- (OrgJodaTimeYearMonth *)setCopyWithInt:(jint)value;

- (OrgJodaTimeYearMonth *)setCopyWithNSString:(NSString *)text;

- (OrgJodaTimeYearMonth *)setCopyWithNSString:(NSString *)text
                           withJavaUtilLocale:(JavaUtilLocale *)locale;

#pragma mark Protected

- (id<OrgJodaTimeReadablePartial>)getReadablePartial;

#pragma mark Package-Private

- (instancetype)initWithOrgJodaTimeYearMonth:(OrgJodaTimeYearMonth *)partial
                                     withInt:(jint)fieldIndex;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeYearMonth_Property)

FOUNDATION_EXPORT void OrgJodaTimeYearMonth_Property_initWithOrgJodaTimeYearMonth_withInt_(OrgJodaTimeYearMonth_Property *self, OrgJodaTimeYearMonth *partial, jint fieldIndex);

FOUNDATION_EXPORT OrgJodaTimeYearMonth_Property *new_OrgJodaTimeYearMonth_Property_initWithOrgJodaTimeYearMonth_withInt_(OrgJodaTimeYearMonth *partial, jint fieldIndex) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeYearMonth_Property *create_OrgJodaTimeYearMonth_Property_initWithOrgJodaTimeYearMonth_withInt_(OrgJodaTimeYearMonth *partial, jint fieldIndex);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeYearMonth_Property)

#endif

#pragma pop_macro("INCLUDE_ALL_YearMonth")
