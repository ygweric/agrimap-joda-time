//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/eric/repos/360-j2objc/joda-time/build/mainTranslationExtraction/org/joda/time/field/ImpreciseDateTimeField.java
//

#include "BaseDateTimeField.h"
#include "BaseDurationField.h"
#include "DateTimeFieldType.h"
#include "DurationField.h"
#include "DurationFieldType.h"
#include "FieldUtils.h"
#include "ImpreciseDateTimeField.h"
#include "J2ObjC_source.h"

@interface OrgJodaTimeFieldImpreciseDateTimeField () {
 @public
  OrgJodaTimeDurationField *iDurationField_;
}

@end

J2OBJC_FIELD_SETTER(OrgJodaTimeFieldImpreciseDateTimeField, iDurationField_, OrgJodaTimeDurationField *)

inline jlong OrgJodaTimeFieldImpreciseDateTimeField_get_serialVersionUID();
#define OrgJodaTimeFieldImpreciseDateTimeField_serialVersionUID 7190739608550251860LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeFieldImpreciseDateTimeField, serialVersionUID, jlong)

@interface OrgJodaTimeFieldImpreciseDateTimeField_LinkedDurationField : OrgJodaTimeFieldBaseDurationField {
 @public
  OrgJodaTimeFieldImpreciseDateTimeField *this$0_;
}

- (instancetype)initWithOrgJodaTimeFieldImpreciseDateTimeField:(OrgJodaTimeFieldImpreciseDateTimeField *)outer$
                              withOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)type;

- (jboolean)isPrecise;

- (jlong)getUnitMillis;

- (jint)getValueWithLong:(jlong)duration
                withLong:(jlong)instant;

- (jlong)getValueAsLongWithLong:(jlong)duration
                       withLong:(jlong)instant;

- (jlong)getMillisWithInt:(jint)value
                 withLong:(jlong)instant;

- (jlong)getMillisWithLong:(jlong)value
                  withLong:(jlong)instant;

- (jlong)addWithLong:(jlong)instant
             withInt:(jint)value;

- (jlong)addWithLong:(jlong)instant
            withLong:(jlong)value;

- (jint)getDifferenceWithLong:(jlong)minuendInstant
                     withLong:(jlong)subtrahendInstant;

- (jlong)getDifferenceAsLongWithLong:(jlong)minuendInstant
                            withLong:(jlong)subtrahendInstant;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeFieldImpreciseDateTimeField_LinkedDurationField)

J2OBJC_FIELD_SETTER(OrgJodaTimeFieldImpreciseDateTimeField_LinkedDurationField, this$0_, OrgJodaTimeFieldImpreciseDateTimeField *)

inline jlong OrgJodaTimeFieldImpreciseDateTimeField_LinkedDurationField_get_serialVersionUID();
#define OrgJodaTimeFieldImpreciseDateTimeField_LinkedDurationField_serialVersionUID -203813474600094134LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeFieldImpreciseDateTimeField_LinkedDurationField, serialVersionUID, jlong)

__attribute__((unused)) static void OrgJodaTimeFieldImpreciseDateTimeField_LinkedDurationField_initWithOrgJodaTimeFieldImpreciseDateTimeField_withOrgJodaTimeDurationFieldType_(OrgJodaTimeFieldImpreciseDateTimeField_LinkedDurationField *self, OrgJodaTimeFieldImpreciseDateTimeField *outer$, OrgJodaTimeDurationFieldType *type);

__attribute__((unused)) static OrgJodaTimeFieldImpreciseDateTimeField_LinkedDurationField *new_OrgJodaTimeFieldImpreciseDateTimeField_LinkedDurationField_initWithOrgJodaTimeFieldImpreciseDateTimeField_withOrgJodaTimeDurationFieldType_(OrgJodaTimeFieldImpreciseDateTimeField *outer$, OrgJodaTimeDurationFieldType *type) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgJodaTimeFieldImpreciseDateTimeField_LinkedDurationField *create_OrgJodaTimeFieldImpreciseDateTimeField_LinkedDurationField_initWithOrgJodaTimeFieldImpreciseDateTimeField_withOrgJodaTimeDurationFieldType_(OrgJodaTimeFieldImpreciseDateTimeField *outer$, OrgJodaTimeDurationFieldType *type);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeFieldImpreciseDateTimeField_LinkedDurationField)

@implementation OrgJodaTimeFieldImpreciseDateTimeField

- (instancetype)initWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)type
                                            withLong:(jlong)unitMillis {
  OrgJodaTimeFieldImpreciseDateTimeField_initWithOrgJodaTimeDateTimeFieldType_withLong_(self, type, unitMillis);
  return self;
}

- (jint)getWithLong:(jlong)instant {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jlong)setWithLong:(jlong)instant
             withInt:(jint)value {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jlong)addWithLong:(jlong)instant
             withInt:(jint)value {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jlong)addWithLong:(jlong)instant
            withLong:(jlong)value {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)getDifferenceWithLong:(jlong)minuendInstant
                     withLong:(jlong)subtrahendInstant {
  return OrgJodaTimeFieldFieldUtils_safeToIntWithLong_([self getDifferenceAsLongWithLong:minuendInstant withLong:subtrahendInstant]);
}

- (jlong)getDifferenceAsLongWithLong:(jlong)minuendInstant
                            withLong:(jlong)subtrahendInstant {
  if (minuendInstant < subtrahendInstant) {
    return -[self getDifferenceAsLongWithLong:subtrahendInstant withLong:minuendInstant];
  }
  jlong difference = (minuendInstant - subtrahendInstant) / iUnitMillis_;
  if ([self addWithLong:subtrahendInstant withLong:difference] < minuendInstant) {
    do {
      difference++;
    }
    while ([self addWithLong:subtrahendInstant withLong:difference] <= minuendInstant);
    difference--;
  }
  else if ([self addWithLong:subtrahendInstant withLong:difference] > minuendInstant) {
    do {
      difference--;
    }
    while ([self addWithLong:subtrahendInstant withLong:difference] > minuendInstant);
  }
  return difference;
}

- (OrgJodaTimeDurationField *)getDurationField {
  return iDurationField_;
}

- (OrgJodaTimeDurationField *)getRangeDurationField {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jlong)roundFloorWithLong:(jlong)instant {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jlong)getDurationUnitMillis {
  return iUnitMillis_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x401, 1, 2, -1, -1, -1, -1 },
    { NULL, "J", 0x401, 3, 4, -1, -1, -1, -1 },
    { NULL, "J", 0x401, 5, 4, -1, -1, -1, -1 },
    { NULL, "J", 0x401, 5, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 7, 6, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 8, 6, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDurationField;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDurationField;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x401, 9, 2, -1, -1, -1, -1 },
    { NULL, "J", 0x14, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgJodaTimeDateTimeFieldType:withLong:);
  methods[1].selector = @selector(getWithLong:);
  methods[2].selector = @selector(setWithLong:withInt:);
  methods[3].selector = @selector(addWithLong:withInt:);
  methods[4].selector = @selector(addWithLong:withLong:);
  methods[5].selector = @selector(getDifferenceWithLong:withLong:);
  methods[6].selector = @selector(getDifferenceAsLongWithLong:withLong:);
  methods[7].selector = @selector(getDurationField);
  methods[8].selector = @selector(getRangeDurationField);
  methods[9].selector = @selector(roundFloorWithLong:);
  methods[10].selector = @selector(getDurationUnitMillis);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = OrgJodaTimeFieldImpreciseDateTimeField_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "iUnitMillis_", "J", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "iDurationField_", "LOrgJodaTimeDurationField;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgJodaTimeDateTimeFieldType;J", "get", "J", "set", "JI", "add", "JJ", "getDifference", "getDifferenceAsLong", "roundFloor", "LOrgJodaTimeFieldImpreciseDateTimeField_LinkedDurationField;" };
  static const J2ObjcClassInfo _OrgJodaTimeFieldImpreciseDateTimeField = { "ImpreciseDateTimeField", "org.joda.time.field", ptrTable, methods, fields, 7, 0x401, 11, 3, -1, 10, -1, -1, -1 };
  return &_OrgJodaTimeFieldImpreciseDateTimeField;
}

@end

void OrgJodaTimeFieldImpreciseDateTimeField_initWithOrgJodaTimeDateTimeFieldType_withLong_(OrgJodaTimeFieldImpreciseDateTimeField *self, OrgJodaTimeDateTimeFieldType *type, jlong unitMillis) {
  OrgJodaTimeFieldBaseDateTimeField_initWithOrgJodaTimeDateTimeFieldType_(self, type);
  self->iUnitMillis_ = unitMillis;
  self->iDurationField_ = new_OrgJodaTimeFieldImpreciseDateTimeField_LinkedDurationField_initWithOrgJodaTimeFieldImpreciseDateTimeField_withOrgJodaTimeDurationFieldType_(self, [((OrgJodaTimeDateTimeFieldType *) nil_chk(type)) getDurationType]);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeFieldImpreciseDateTimeField)

@implementation OrgJodaTimeFieldImpreciseDateTimeField_LinkedDurationField

- (instancetype)initWithOrgJodaTimeFieldImpreciseDateTimeField:(OrgJodaTimeFieldImpreciseDateTimeField *)outer$
                              withOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)type {
  OrgJodaTimeFieldImpreciseDateTimeField_LinkedDurationField_initWithOrgJodaTimeFieldImpreciseDateTimeField_withOrgJodaTimeDurationFieldType_(self, outer$, type);
  return self;
}

- (jboolean)isPrecise {
  return false;
}

- (jlong)getUnitMillis {
  return this$0_->iUnitMillis_;
}

- (jint)getValueWithLong:(jlong)duration
                withLong:(jlong)instant {
  return [this$0_ getDifferenceWithLong:instant + duration withLong:instant];
}

- (jlong)getValueAsLongWithLong:(jlong)duration
                       withLong:(jlong)instant {
  return [this$0_ getDifferenceAsLongWithLong:instant + duration withLong:instant];
}

- (jlong)getMillisWithInt:(jint)value
                 withLong:(jlong)instant {
  return [this$0_ addWithLong:instant withInt:value] - instant;
}

- (jlong)getMillisWithLong:(jlong)value
                  withLong:(jlong)instant {
  return [this$0_ addWithLong:instant withLong:value] - instant;
}

- (jlong)addWithLong:(jlong)instant
             withInt:(jint)value {
  return [this$0_ addWithLong:instant withInt:value];
}

- (jlong)addWithLong:(jlong)instant
            withLong:(jlong)value {
  return [this$0_ addWithLong:instant withLong:value];
}

- (jint)getDifferenceWithLong:(jlong)minuendInstant
                     withLong:(jlong)subtrahendInstant {
  return [this$0_ getDifferenceWithLong:minuendInstant withLong:subtrahendInstant];
}

- (jlong)getDifferenceAsLongWithLong:(jlong)minuendInstant
                            withLong:(jlong)subtrahendInstant {
  return [this$0_ getDifferenceAsLongWithLong:minuendInstant withLong:subtrahendInstant];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 4, 2, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 6, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 8, 2, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 9, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgJodaTimeFieldImpreciseDateTimeField:withOrgJodaTimeDurationFieldType:);
  methods[1].selector = @selector(isPrecise);
  methods[2].selector = @selector(getUnitMillis);
  methods[3].selector = @selector(getValueWithLong:withLong:);
  methods[4].selector = @selector(getValueAsLongWithLong:withLong:);
  methods[5].selector = @selector(getMillisWithInt:withLong:);
  methods[6].selector = @selector(getMillisWithLong:withLong:);
  methods[7].selector = @selector(addWithLong:withInt:);
  methods[8].selector = @selector(addWithLong:withLong:);
  methods[9].selector = @selector(getDifferenceWithLong:withLong:);
  methods[10].selector = @selector(getDifferenceAsLongWithLong:withLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgJodaTimeFieldImpreciseDateTimeField;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = OrgJodaTimeFieldImpreciseDateTimeField_LinkedDurationField_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgJodaTimeFieldImpreciseDateTimeField;LOrgJodaTimeDurationFieldType;", "getValue", "JJ", "getValueAsLong", "getMillis", "IJ", "add", "JI", "getDifference", "getDifferenceAsLong", "LOrgJodaTimeFieldImpreciseDateTimeField;" };
  static const J2ObjcClassInfo _OrgJodaTimeFieldImpreciseDateTimeField_LinkedDurationField = { "LinkedDurationField", "org.joda.time.field", ptrTable, methods, fields, 7, 0x12, 11, 2, 10, -1, -1, -1, -1 };
  return &_OrgJodaTimeFieldImpreciseDateTimeField_LinkedDurationField;
}

@end

void OrgJodaTimeFieldImpreciseDateTimeField_LinkedDurationField_initWithOrgJodaTimeFieldImpreciseDateTimeField_withOrgJodaTimeDurationFieldType_(OrgJodaTimeFieldImpreciseDateTimeField_LinkedDurationField *self, OrgJodaTimeFieldImpreciseDateTimeField *outer$, OrgJodaTimeDurationFieldType *type) {
  self->this$0_ = outer$;
  OrgJodaTimeFieldBaseDurationField_initWithOrgJodaTimeDurationFieldType_(self, type);
}

OrgJodaTimeFieldImpreciseDateTimeField_LinkedDurationField *new_OrgJodaTimeFieldImpreciseDateTimeField_LinkedDurationField_initWithOrgJodaTimeFieldImpreciseDateTimeField_withOrgJodaTimeDurationFieldType_(OrgJodaTimeFieldImpreciseDateTimeField *outer$, OrgJodaTimeDurationFieldType *type) {
  J2OBJC_NEW_IMPL(OrgJodaTimeFieldImpreciseDateTimeField_LinkedDurationField, initWithOrgJodaTimeFieldImpreciseDateTimeField_withOrgJodaTimeDurationFieldType_, outer$, type)
}

OrgJodaTimeFieldImpreciseDateTimeField_LinkedDurationField *create_OrgJodaTimeFieldImpreciseDateTimeField_LinkedDurationField_initWithOrgJodaTimeFieldImpreciseDateTimeField_withOrgJodaTimeDurationFieldType_(OrgJodaTimeFieldImpreciseDateTimeField *outer$, OrgJodaTimeDurationFieldType *type) {
  J2OBJC_CREATE_IMPL(OrgJodaTimeFieldImpreciseDateTimeField_LinkedDurationField, initWithOrgJodaTimeFieldImpreciseDateTimeField_withOrgJodaTimeDurationFieldType_, outer$, type)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeFieldImpreciseDateTimeField_LinkedDurationField)
