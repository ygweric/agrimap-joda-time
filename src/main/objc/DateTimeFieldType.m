//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/eric/repos/360-j2objc/joda-time/build/mainTranslationExtraction/org/joda/time/DateTimeFieldType.java
//

#include "Chronology.h"
#include "DateTimeField.h"
#include "DateTimeFieldType.h"
#include "DateTimeUtils.h"
#include "DurationFieldType.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/InternalError.h"

@interface OrgJodaTimeDateTimeFieldType () {
 @public
  NSString *iName_;
}

@end

J2OBJC_FIELD_SETTER(OrgJodaTimeDateTimeFieldType, iName_, NSString *)

inline jlong OrgJodaTimeDateTimeFieldType_get_serialVersionUID();
#define OrgJodaTimeDateTimeFieldType_serialVersionUID -42615285973990LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeDateTimeFieldType, serialVersionUID, jlong)

inline OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_get_ERA_TYPE();
static OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_ERA_TYPE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeDateTimeFieldType, ERA_TYPE, OrgJodaTimeDateTimeFieldType *)

inline OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_get_YEAR_OF_ERA_TYPE();
static OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_YEAR_OF_ERA_TYPE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeDateTimeFieldType, YEAR_OF_ERA_TYPE, OrgJodaTimeDateTimeFieldType *)

inline OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_get_CENTURY_OF_ERA_TYPE();
static OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_CENTURY_OF_ERA_TYPE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeDateTimeFieldType, CENTURY_OF_ERA_TYPE, OrgJodaTimeDateTimeFieldType *)

inline OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_get_YEAR_OF_CENTURY_TYPE();
static OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_YEAR_OF_CENTURY_TYPE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeDateTimeFieldType, YEAR_OF_CENTURY_TYPE, OrgJodaTimeDateTimeFieldType *)

inline OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_get_YEAR_TYPE();
static OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_YEAR_TYPE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeDateTimeFieldType, YEAR_TYPE, OrgJodaTimeDateTimeFieldType *)

inline OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_get_DAY_OF_YEAR_TYPE();
static OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_DAY_OF_YEAR_TYPE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeDateTimeFieldType, DAY_OF_YEAR_TYPE, OrgJodaTimeDateTimeFieldType *)

inline OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_get_MONTH_OF_YEAR_TYPE();
static OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_MONTH_OF_YEAR_TYPE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeDateTimeFieldType, MONTH_OF_YEAR_TYPE, OrgJodaTimeDateTimeFieldType *)

inline OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_get_DAY_OF_MONTH_TYPE();
static OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_DAY_OF_MONTH_TYPE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeDateTimeFieldType, DAY_OF_MONTH_TYPE, OrgJodaTimeDateTimeFieldType *)

inline OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_get_WEEKYEAR_OF_CENTURY_TYPE();
static OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_WEEKYEAR_OF_CENTURY_TYPE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeDateTimeFieldType, WEEKYEAR_OF_CENTURY_TYPE, OrgJodaTimeDateTimeFieldType *)

inline OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_get_WEEKYEAR_TYPE();
static OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_WEEKYEAR_TYPE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeDateTimeFieldType, WEEKYEAR_TYPE, OrgJodaTimeDateTimeFieldType *)

inline OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_get_WEEK_OF_WEEKYEAR_TYPE();
static OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_WEEK_OF_WEEKYEAR_TYPE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeDateTimeFieldType, WEEK_OF_WEEKYEAR_TYPE, OrgJodaTimeDateTimeFieldType *)

inline OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_get_DAY_OF_WEEK_TYPE();
static OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_DAY_OF_WEEK_TYPE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeDateTimeFieldType, DAY_OF_WEEK_TYPE, OrgJodaTimeDateTimeFieldType *)

inline OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_get_HALFDAY_OF_DAY_TYPE();
static OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_HALFDAY_OF_DAY_TYPE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeDateTimeFieldType, HALFDAY_OF_DAY_TYPE, OrgJodaTimeDateTimeFieldType *)

inline OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_get_HOUR_OF_HALFDAY_TYPE();
static OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_HOUR_OF_HALFDAY_TYPE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeDateTimeFieldType, HOUR_OF_HALFDAY_TYPE, OrgJodaTimeDateTimeFieldType *)

inline OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_get_CLOCKHOUR_OF_HALFDAY_TYPE();
static OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_CLOCKHOUR_OF_HALFDAY_TYPE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeDateTimeFieldType, CLOCKHOUR_OF_HALFDAY_TYPE, OrgJodaTimeDateTimeFieldType *)

inline OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_get_CLOCKHOUR_OF_DAY_TYPE();
static OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_CLOCKHOUR_OF_DAY_TYPE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeDateTimeFieldType, CLOCKHOUR_OF_DAY_TYPE, OrgJodaTimeDateTimeFieldType *)

inline OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_get_HOUR_OF_DAY_TYPE();
static OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_HOUR_OF_DAY_TYPE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeDateTimeFieldType, HOUR_OF_DAY_TYPE, OrgJodaTimeDateTimeFieldType *)

inline OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_get_MINUTE_OF_DAY_TYPE();
static OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_MINUTE_OF_DAY_TYPE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeDateTimeFieldType, MINUTE_OF_DAY_TYPE, OrgJodaTimeDateTimeFieldType *)

inline OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_get_MINUTE_OF_HOUR_TYPE();
static OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_MINUTE_OF_HOUR_TYPE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeDateTimeFieldType, MINUTE_OF_HOUR_TYPE, OrgJodaTimeDateTimeFieldType *)

inline OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_get_SECOND_OF_DAY_TYPE();
static OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_SECOND_OF_DAY_TYPE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeDateTimeFieldType, SECOND_OF_DAY_TYPE, OrgJodaTimeDateTimeFieldType *)

inline OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_get_SECOND_OF_MINUTE_TYPE();
static OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_SECOND_OF_MINUTE_TYPE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeDateTimeFieldType, SECOND_OF_MINUTE_TYPE, OrgJodaTimeDateTimeFieldType *)

inline OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_get_MILLIS_OF_DAY_TYPE();
static OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_MILLIS_OF_DAY_TYPE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeDateTimeFieldType, MILLIS_OF_DAY_TYPE, OrgJodaTimeDateTimeFieldType *)

inline OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_get_MILLIS_OF_SECOND_TYPE();
static OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_MILLIS_OF_SECOND_TYPE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeDateTimeFieldType, MILLIS_OF_SECOND_TYPE, OrgJodaTimeDateTimeFieldType *)

@interface OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType : OrgJodaTimeDateTimeFieldType {
 @public
  jbyte iOrdinal_;
  OrgJodaTimeDurationFieldType *iUnitType_;
  OrgJodaTimeDurationFieldType *iRangeType_;
}

- (instancetype)initWithNSString:(NSString *)name
                        withByte:(jbyte)ordinal
withOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)unitType
withOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)rangeType;

- (OrgJodaTimeDurationFieldType *)getDurationType;

- (OrgJodaTimeDurationFieldType *)getRangeDurationType;

- (jboolean)isEqual:(id)obj;

- (NSUInteger)hash;

- (OrgJodaTimeDateTimeField *)getFieldWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology;

- (id)readResolve;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType)

J2OBJC_FIELD_SETTER(OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType, iUnitType_, OrgJodaTimeDurationFieldType *)
J2OBJC_FIELD_SETTER(OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType, iRangeType_, OrgJodaTimeDurationFieldType *)

inline jlong OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType_get_serialVersionUID();
#define OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType_serialVersionUID -9937958251642LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType, serialVersionUID, jlong)

__attribute__((unused)) static void OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType_initWithNSString_withByte_withOrgJodaTimeDurationFieldType_withOrgJodaTimeDurationFieldType_(OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType *self, NSString *name, jbyte ordinal, OrgJodaTimeDurationFieldType *unitType, OrgJodaTimeDurationFieldType *rangeType);

__attribute__((unused)) static OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType *new_OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType_initWithNSString_withByte_withOrgJodaTimeDurationFieldType_withOrgJodaTimeDurationFieldType_(NSString *name, jbyte ordinal, OrgJodaTimeDurationFieldType *unitType, OrgJodaTimeDurationFieldType *rangeType) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType *create_OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType_initWithNSString_withByte_withOrgJodaTimeDurationFieldType_withOrgJodaTimeDurationFieldType_(NSString *name, jbyte ordinal, OrgJodaTimeDurationFieldType *unitType, OrgJodaTimeDurationFieldType *rangeType);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType)

J2OBJC_INITIALIZED_DEFN(OrgJodaTimeDateTimeFieldType)

@implementation OrgJodaTimeDateTimeFieldType

- (instancetype)initWithNSString:(NSString *)name {
  OrgJodaTimeDateTimeFieldType_initWithNSString_(self, name);
  return self;
}

+ (OrgJodaTimeDateTimeFieldType *)millisOfSecond {
  return OrgJodaTimeDateTimeFieldType_millisOfSecond();
}

+ (OrgJodaTimeDateTimeFieldType *)millisOfDay {
  return OrgJodaTimeDateTimeFieldType_millisOfDay();
}

+ (OrgJodaTimeDateTimeFieldType *)secondOfMinute {
  return OrgJodaTimeDateTimeFieldType_secondOfMinute();
}

+ (OrgJodaTimeDateTimeFieldType *)secondOfDay {
  return OrgJodaTimeDateTimeFieldType_secondOfDay();
}

+ (OrgJodaTimeDateTimeFieldType *)minuteOfHour {
  return OrgJodaTimeDateTimeFieldType_minuteOfHour();
}

+ (OrgJodaTimeDateTimeFieldType *)minuteOfDay {
  return OrgJodaTimeDateTimeFieldType_minuteOfDay();
}

+ (OrgJodaTimeDateTimeFieldType *)hourOfDay {
  return OrgJodaTimeDateTimeFieldType_hourOfDay();
}

+ (OrgJodaTimeDateTimeFieldType *)clockhourOfDay {
  return OrgJodaTimeDateTimeFieldType_clockhourOfDay();
}

+ (OrgJodaTimeDateTimeFieldType *)hourOfHalfday {
  return OrgJodaTimeDateTimeFieldType_hourOfHalfday();
}

+ (OrgJodaTimeDateTimeFieldType *)clockhourOfHalfday {
  return OrgJodaTimeDateTimeFieldType_clockhourOfHalfday();
}

+ (OrgJodaTimeDateTimeFieldType *)halfdayOfDay {
  return OrgJodaTimeDateTimeFieldType_halfdayOfDay();
}

+ (OrgJodaTimeDateTimeFieldType *)dayOfWeek {
  return OrgJodaTimeDateTimeFieldType_dayOfWeek();
}

+ (OrgJodaTimeDateTimeFieldType *)dayOfMonth {
  return OrgJodaTimeDateTimeFieldType_dayOfMonth();
}

+ (OrgJodaTimeDateTimeFieldType *)dayOfYear {
  return OrgJodaTimeDateTimeFieldType_dayOfYear();
}

+ (OrgJodaTimeDateTimeFieldType *)weekOfWeekyear {
  return OrgJodaTimeDateTimeFieldType_weekOfWeekyear();
}

+ (OrgJodaTimeDateTimeFieldType *)weekyear {
  return OrgJodaTimeDateTimeFieldType_weekyear();
}

+ (OrgJodaTimeDateTimeFieldType *)weekyearOfCentury {
  return OrgJodaTimeDateTimeFieldType_weekyearOfCentury();
}

+ (OrgJodaTimeDateTimeFieldType *)monthOfYear {
  return OrgJodaTimeDateTimeFieldType_monthOfYear();
}

+ (OrgJodaTimeDateTimeFieldType *)year {
  return OrgJodaTimeDateTimeFieldType_year();
}

+ (OrgJodaTimeDateTimeFieldType *)yearOfEra {
  return OrgJodaTimeDateTimeFieldType_yearOfEra();
}

+ (OrgJodaTimeDateTimeFieldType *)yearOfCentury {
  return OrgJodaTimeDateTimeFieldType_yearOfCentury();
}

+ (OrgJodaTimeDateTimeFieldType *)centuryOfEra {
  return OrgJodaTimeDateTimeFieldType_centuryOfEra();
}

+ (OrgJodaTimeDateTimeFieldType *)era {
  return OrgJodaTimeDateTimeFieldType_era();
}

- (NSString *)getName {
  return iName_;
}

- (OrgJodaTimeDurationFieldType *)getDurationType {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgJodaTimeDurationFieldType *)getRangeDurationType {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgJodaTimeDateTimeField *)getFieldWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)isSupportedWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology {
  return [((OrgJodaTimeDateTimeField *) nil_chk([self getFieldWithOrgJodaTimeChronology:chronology])) isSupported];
}

- (NSString *)description {
  return [self getName];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDateTimeFieldType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDateTimeFieldType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDateTimeFieldType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDateTimeFieldType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDateTimeFieldType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDateTimeFieldType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDateTimeFieldType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDateTimeFieldType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDateTimeFieldType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDateTimeFieldType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDateTimeFieldType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDateTimeFieldType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDateTimeFieldType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDateTimeFieldType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDateTimeFieldType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDateTimeFieldType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDateTimeFieldType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDateTimeFieldType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDateTimeFieldType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDateTimeFieldType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDateTimeFieldType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDateTimeFieldType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDateTimeFieldType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDurationFieldType;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDurationFieldType;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDateTimeField;", 0x401, 1, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(millisOfSecond);
  methods[2].selector = @selector(millisOfDay);
  methods[3].selector = @selector(secondOfMinute);
  methods[4].selector = @selector(secondOfDay);
  methods[5].selector = @selector(minuteOfHour);
  methods[6].selector = @selector(minuteOfDay);
  methods[7].selector = @selector(hourOfDay);
  methods[8].selector = @selector(clockhourOfDay);
  methods[9].selector = @selector(hourOfHalfday);
  methods[10].selector = @selector(clockhourOfHalfday);
  methods[11].selector = @selector(halfdayOfDay);
  methods[12].selector = @selector(dayOfWeek);
  methods[13].selector = @selector(dayOfMonth);
  methods[14].selector = @selector(dayOfYear);
  methods[15].selector = @selector(weekOfWeekyear);
  methods[16].selector = @selector(weekyear);
  methods[17].selector = @selector(weekyearOfCentury);
  methods[18].selector = @selector(monthOfYear);
  methods[19].selector = @selector(year);
  methods[20].selector = @selector(yearOfEra);
  methods[21].selector = @selector(yearOfCentury);
  methods[22].selector = @selector(centuryOfEra);
  methods[23].selector = @selector(era);
  methods[24].selector = @selector(getName);
  methods[25].selector = @selector(getDurationType);
  methods[26].selector = @selector(getRangeDurationType);
  methods[27].selector = @selector(getFieldWithOrgJodaTimeChronology:);
  methods[28].selector = @selector(isSupportedWithOrgJodaTimeChronology:);
  methods[29].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = OrgJodaTimeDateTimeFieldType_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "ERA", "B", .constantValue.asChar = OrgJodaTimeDateTimeFieldType_ERA, 0x18, -1, -1, -1, -1 },
    { "YEAR_OF_ERA", "B", .constantValue.asChar = OrgJodaTimeDateTimeFieldType_YEAR_OF_ERA, 0x18, -1, -1, -1, -1 },
    { "CENTURY_OF_ERA", "B", .constantValue.asChar = OrgJodaTimeDateTimeFieldType_CENTURY_OF_ERA, 0x18, -1, -1, -1, -1 },
    { "YEAR_OF_CENTURY", "B", .constantValue.asChar = OrgJodaTimeDateTimeFieldType_YEAR_OF_CENTURY, 0x18, -1, -1, -1, -1 },
    { "YEAR", "B", .constantValue.asChar = OrgJodaTimeDateTimeFieldType_YEAR, 0x18, -1, -1, -1, -1 },
    { "DAY_OF_YEAR", "B", .constantValue.asChar = OrgJodaTimeDateTimeFieldType_DAY_OF_YEAR, 0x18, -1, -1, -1, -1 },
    { "MONTH_OF_YEAR", "B", .constantValue.asChar = OrgJodaTimeDateTimeFieldType_MONTH_OF_YEAR, 0x18, -1, -1, -1, -1 },
    { "DAY_OF_MONTH", "B", .constantValue.asChar = OrgJodaTimeDateTimeFieldType_DAY_OF_MONTH, 0x18, -1, -1, -1, -1 },
    { "WEEKYEAR_OF_CENTURY", "B", .constantValue.asChar = OrgJodaTimeDateTimeFieldType_WEEKYEAR_OF_CENTURY, 0x18, -1, -1, -1, -1 },
    { "WEEKYEAR", "B", .constantValue.asChar = OrgJodaTimeDateTimeFieldType_WEEKYEAR, 0x18, -1, -1, -1, -1 },
    { "WEEK_OF_WEEKYEAR", "B", .constantValue.asChar = OrgJodaTimeDateTimeFieldType_WEEK_OF_WEEKYEAR, 0x18, -1, -1, -1, -1 },
    { "DAY_OF_WEEK", "B", .constantValue.asChar = OrgJodaTimeDateTimeFieldType_DAY_OF_WEEK, 0x18, -1, -1, -1, -1 },
    { "HALFDAY_OF_DAY", "B", .constantValue.asChar = OrgJodaTimeDateTimeFieldType_HALFDAY_OF_DAY, 0x18, -1, -1, -1, -1 },
    { "HOUR_OF_HALFDAY", "B", .constantValue.asChar = OrgJodaTimeDateTimeFieldType_HOUR_OF_HALFDAY, 0x18, -1, -1, -1, -1 },
    { "CLOCKHOUR_OF_HALFDAY", "B", .constantValue.asChar = OrgJodaTimeDateTimeFieldType_CLOCKHOUR_OF_HALFDAY, 0x18, -1, -1, -1, -1 },
    { "CLOCKHOUR_OF_DAY", "B", .constantValue.asChar = OrgJodaTimeDateTimeFieldType_CLOCKHOUR_OF_DAY, 0x18, -1, -1, -1, -1 },
    { "HOUR_OF_DAY", "B", .constantValue.asChar = OrgJodaTimeDateTimeFieldType_HOUR_OF_DAY, 0x18, -1, -1, -1, -1 },
    { "MINUTE_OF_DAY", "B", .constantValue.asChar = OrgJodaTimeDateTimeFieldType_MINUTE_OF_DAY, 0x18, -1, -1, -1, -1 },
    { "MINUTE_OF_HOUR", "B", .constantValue.asChar = OrgJodaTimeDateTimeFieldType_MINUTE_OF_HOUR, 0x18, -1, -1, -1, -1 },
    { "SECOND_OF_DAY", "B", .constantValue.asChar = OrgJodaTimeDateTimeFieldType_SECOND_OF_DAY, 0x18, -1, -1, -1, -1 },
    { "SECOND_OF_MINUTE", "B", .constantValue.asChar = OrgJodaTimeDateTimeFieldType_SECOND_OF_MINUTE, 0x18, -1, -1, -1, -1 },
    { "MILLIS_OF_DAY", "B", .constantValue.asChar = OrgJodaTimeDateTimeFieldType_MILLIS_OF_DAY, 0x18, -1, -1, -1, -1 },
    { "MILLIS_OF_SECOND", "B", .constantValue.asChar = OrgJodaTimeDateTimeFieldType_MILLIS_OF_SECOND, 0x18, -1, -1, -1, -1 },
    { "ERA_TYPE", "LOrgJodaTimeDateTimeFieldType;", .constantValue.asLong = 0, 0x1a, -1, 5, -1, -1 },
    { "YEAR_OF_ERA_TYPE", "LOrgJodaTimeDateTimeFieldType;", .constantValue.asLong = 0, 0x1a, -1, 6, -1, -1 },
    { "CENTURY_OF_ERA_TYPE", "LOrgJodaTimeDateTimeFieldType;", .constantValue.asLong = 0, 0x1a, -1, 7, -1, -1 },
    { "YEAR_OF_CENTURY_TYPE", "LOrgJodaTimeDateTimeFieldType;", .constantValue.asLong = 0, 0x1a, -1, 8, -1, -1 },
    { "YEAR_TYPE", "LOrgJodaTimeDateTimeFieldType;", .constantValue.asLong = 0, 0x1a, -1, 9, -1, -1 },
    { "DAY_OF_YEAR_TYPE", "LOrgJodaTimeDateTimeFieldType;", .constantValue.asLong = 0, 0x1a, -1, 10, -1, -1 },
    { "MONTH_OF_YEAR_TYPE", "LOrgJodaTimeDateTimeFieldType;", .constantValue.asLong = 0, 0x1a, -1, 11, -1, -1 },
    { "DAY_OF_MONTH_TYPE", "LOrgJodaTimeDateTimeFieldType;", .constantValue.asLong = 0, 0x1a, -1, 12, -1, -1 },
    { "WEEKYEAR_OF_CENTURY_TYPE", "LOrgJodaTimeDateTimeFieldType;", .constantValue.asLong = 0, 0x1a, -1, 13, -1, -1 },
    { "WEEKYEAR_TYPE", "LOrgJodaTimeDateTimeFieldType;", .constantValue.asLong = 0, 0x1a, -1, 14, -1, -1 },
    { "WEEK_OF_WEEKYEAR_TYPE", "LOrgJodaTimeDateTimeFieldType;", .constantValue.asLong = 0, 0x1a, -1, 15, -1, -1 },
    { "DAY_OF_WEEK_TYPE", "LOrgJodaTimeDateTimeFieldType;", .constantValue.asLong = 0, 0x1a, -1, 16, -1, -1 },
    { "HALFDAY_OF_DAY_TYPE", "LOrgJodaTimeDateTimeFieldType;", .constantValue.asLong = 0, 0x1a, -1, 17, -1, -1 },
    { "HOUR_OF_HALFDAY_TYPE", "LOrgJodaTimeDateTimeFieldType;", .constantValue.asLong = 0, 0x1a, -1, 18, -1, -1 },
    { "CLOCKHOUR_OF_HALFDAY_TYPE", "LOrgJodaTimeDateTimeFieldType;", .constantValue.asLong = 0, 0x1a, -1, 19, -1, -1 },
    { "CLOCKHOUR_OF_DAY_TYPE", "LOrgJodaTimeDateTimeFieldType;", .constantValue.asLong = 0, 0x1a, -1, 20, -1, -1 },
    { "HOUR_OF_DAY_TYPE", "LOrgJodaTimeDateTimeFieldType;", .constantValue.asLong = 0, 0x1a, -1, 21, -1, -1 },
    { "MINUTE_OF_DAY_TYPE", "LOrgJodaTimeDateTimeFieldType;", .constantValue.asLong = 0, 0x1a, -1, 22, -1, -1 },
    { "MINUTE_OF_HOUR_TYPE", "LOrgJodaTimeDateTimeFieldType;", .constantValue.asLong = 0, 0x1a, -1, 23, -1, -1 },
    { "SECOND_OF_DAY_TYPE", "LOrgJodaTimeDateTimeFieldType;", .constantValue.asLong = 0, 0x1a, -1, 24, -1, -1 },
    { "SECOND_OF_MINUTE_TYPE", "LOrgJodaTimeDateTimeFieldType;", .constantValue.asLong = 0, 0x1a, -1, 25, -1, -1 },
    { "MILLIS_OF_DAY_TYPE", "LOrgJodaTimeDateTimeFieldType;", .constantValue.asLong = 0, 0x1a, -1, 26, -1, -1 },
    { "MILLIS_OF_SECOND_TYPE", "LOrgJodaTimeDateTimeFieldType;", .constantValue.asLong = 0, 0x1a, -1, 27, -1, -1 },
    { "iName_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "getField", "LOrgJodaTimeChronology;", "isSupported", "toString", &OrgJodaTimeDateTimeFieldType_ERA_TYPE, &OrgJodaTimeDateTimeFieldType_YEAR_OF_ERA_TYPE, &OrgJodaTimeDateTimeFieldType_CENTURY_OF_ERA_TYPE, &OrgJodaTimeDateTimeFieldType_YEAR_OF_CENTURY_TYPE, &OrgJodaTimeDateTimeFieldType_YEAR_TYPE, &OrgJodaTimeDateTimeFieldType_DAY_OF_YEAR_TYPE, &OrgJodaTimeDateTimeFieldType_MONTH_OF_YEAR_TYPE, &OrgJodaTimeDateTimeFieldType_DAY_OF_MONTH_TYPE, &OrgJodaTimeDateTimeFieldType_WEEKYEAR_OF_CENTURY_TYPE, &OrgJodaTimeDateTimeFieldType_WEEKYEAR_TYPE, &OrgJodaTimeDateTimeFieldType_WEEK_OF_WEEKYEAR_TYPE, &OrgJodaTimeDateTimeFieldType_DAY_OF_WEEK_TYPE, &OrgJodaTimeDateTimeFieldType_HALFDAY_OF_DAY_TYPE, &OrgJodaTimeDateTimeFieldType_HOUR_OF_HALFDAY_TYPE, &OrgJodaTimeDateTimeFieldType_CLOCKHOUR_OF_HALFDAY_TYPE, &OrgJodaTimeDateTimeFieldType_CLOCKHOUR_OF_DAY_TYPE, &OrgJodaTimeDateTimeFieldType_HOUR_OF_DAY_TYPE, &OrgJodaTimeDateTimeFieldType_MINUTE_OF_DAY_TYPE, &OrgJodaTimeDateTimeFieldType_MINUTE_OF_HOUR_TYPE, &OrgJodaTimeDateTimeFieldType_SECOND_OF_DAY_TYPE, &OrgJodaTimeDateTimeFieldType_SECOND_OF_MINUTE_TYPE, &OrgJodaTimeDateTimeFieldType_MILLIS_OF_DAY_TYPE, &OrgJodaTimeDateTimeFieldType_MILLIS_OF_SECOND_TYPE, "LOrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType;" };
  static const J2ObjcClassInfo _OrgJodaTimeDateTimeFieldType = { "DateTimeFieldType", "org.joda.time", ptrTable, methods, fields, 7, 0x401, 30, 48, -1, 28, -1, -1, -1 };
  return &_OrgJodaTimeDateTimeFieldType;
}

+ (void)initialize {
  if (self == [OrgJodaTimeDateTimeFieldType class]) {
    OrgJodaTimeDateTimeFieldType_ERA_TYPE = new_OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType_initWithNSString_withByte_withOrgJodaTimeDurationFieldType_withOrgJodaTimeDurationFieldType_(@"era", OrgJodaTimeDateTimeFieldType_ERA, OrgJodaTimeDurationFieldType_eras(), nil);
    OrgJodaTimeDateTimeFieldType_YEAR_OF_ERA_TYPE = new_OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType_initWithNSString_withByte_withOrgJodaTimeDurationFieldType_withOrgJodaTimeDurationFieldType_(@"yearOfEra", OrgJodaTimeDateTimeFieldType_YEAR_OF_ERA, OrgJodaTimeDurationFieldType_years(), OrgJodaTimeDurationFieldType_eras());
    OrgJodaTimeDateTimeFieldType_CENTURY_OF_ERA_TYPE = new_OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType_initWithNSString_withByte_withOrgJodaTimeDurationFieldType_withOrgJodaTimeDurationFieldType_(@"centuryOfEra", OrgJodaTimeDateTimeFieldType_CENTURY_OF_ERA, OrgJodaTimeDurationFieldType_centuries(), OrgJodaTimeDurationFieldType_eras());
    OrgJodaTimeDateTimeFieldType_YEAR_OF_CENTURY_TYPE = new_OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType_initWithNSString_withByte_withOrgJodaTimeDurationFieldType_withOrgJodaTimeDurationFieldType_(@"yearOfCentury", OrgJodaTimeDateTimeFieldType_YEAR_OF_CENTURY, OrgJodaTimeDurationFieldType_years(), OrgJodaTimeDurationFieldType_centuries());
    OrgJodaTimeDateTimeFieldType_YEAR_TYPE = new_OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType_initWithNSString_withByte_withOrgJodaTimeDurationFieldType_withOrgJodaTimeDurationFieldType_(@"year", OrgJodaTimeDateTimeFieldType_YEAR, OrgJodaTimeDurationFieldType_years(), nil);
    OrgJodaTimeDateTimeFieldType_DAY_OF_YEAR_TYPE = new_OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType_initWithNSString_withByte_withOrgJodaTimeDurationFieldType_withOrgJodaTimeDurationFieldType_(@"dayOfYear", OrgJodaTimeDateTimeFieldType_DAY_OF_YEAR, OrgJodaTimeDurationFieldType_days(), OrgJodaTimeDurationFieldType_years());
    OrgJodaTimeDateTimeFieldType_MONTH_OF_YEAR_TYPE = new_OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType_initWithNSString_withByte_withOrgJodaTimeDurationFieldType_withOrgJodaTimeDurationFieldType_(@"monthOfYear", OrgJodaTimeDateTimeFieldType_MONTH_OF_YEAR, OrgJodaTimeDurationFieldType_months(), OrgJodaTimeDurationFieldType_years());
    OrgJodaTimeDateTimeFieldType_DAY_OF_MONTH_TYPE = new_OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType_initWithNSString_withByte_withOrgJodaTimeDurationFieldType_withOrgJodaTimeDurationFieldType_(@"dayOfMonth", OrgJodaTimeDateTimeFieldType_DAY_OF_MONTH, OrgJodaTimeDurationFieldType_days(), OrgJodaTimeDurationFieldType_months());
    OrgJodaTimeDateTimeFieldType_WEEKYEAR_OF_CENTURY_TYPE = new_OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType_initWithNSString_withByte_withOrgJodaTimeDurationFieldType_withOrgJodaTimeDurationFieldType_(@"weekyearOfCentury", OrgJodaTimeDateTimeFieldType_WEEKYEAR_OF_CENTURY, OrgJodaTimeDurationFieldType_weekyears(), OrgJodaTimeDurationFieldType_centuries());
    OrgJodaTimeDateTimeFieldType_WEEKYEAR_TYPE = new_OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType_initWithNSString_withByte_withOrgJodaTimeDurationFieldType_withOrgJodaTimeDurationFieldType_(@"weekyear", OrgJodaTimeDateTimeFieldType_WEEKYEAR, OrgJodaTimeDurationFieldType_weekyears(), nil);
    OrgJodaTimeDateTimeFieldType_WEEK_OF_WEEKYEAR_TYPE = new_OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType_initWithNSString_withByte_withOrgJodaTimeDurationFieldType_withOrgJodaTimeDurationFieldType_(@"weekOfWeekyear", OrgJodaTimeDateTimeFieldType_WEEK_OF_WEEKYEAR, OrgJodaTimeDurationFieldType_weeks(), OrgJodaTimeDurationFieldType_weekyears());
    OrgJodaTimeDateTimeFieldType_DAY_OF_WEEK_TYPE = new_OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType_initWithNSString_withByte_withOrgJodaTimeDurationFieldType_withOrgJodaTimeDurationFieldType_(@"dayOfWeek", OrgJodaTimeDateTimeFieldType_DAY_OF_WEEK, OrgJodaTimeDurationFieldType_days(), OrgJodaTimeDurationFieldType_weeks());
    OrgJodaTimeDateTimeFieldType_HALFDAY_OF_DAY_TYPE = new_OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType_initWithNSString_withByte_withOrgJodaTimeDurationFieldType_withOrgJodaTimeDurationFieldType_(@"halfdayOfDay", OrgJodaTimeDateTimeFieldType_HALFDAY_OF_DAY, OrgJodaTimeDurationFieldType_halfdays(), OrgJodaTimeDurationFieldType_days());
    OrgJodaTimeDateTimeFieldType_HOUR_OF_HALFDAY_TYPE = new_OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType_initWithNSString_withByte_withOrgJodaTimeDurationFieldType_withOrgJodaTimeDurationFieldType_(@"hourOfHalfday", OrgJodaTimeDateTimeFieldType_HOUR_OF_HALFDAY, OrgJodaTimeDurationFieldType_hours(), OrgJodaTimeDurationFieldType_halfdays());
    OrgJodaTimeDateTimeFieldType_CLOCKHOUR_OF_HALFDAY_TYPE = new_OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType_initWithNSString_withByte_withOrgJodaTimeDurationFieldType_withOrgJodaTimeDurationFieldType_(@"clockhourOfHalfday", OrgJodaTimeDateTimeFieldType_CLOCKHOUR_OF_HALFDAY, OrgJodaTimeDurationFieldType_hours(), OrgJodaTimeDurationFieldType_halfdays());
    OrgJodaTimeDateTimeFieldType_CLOCKHOUR_OF_DAY_TYPE = new_OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType_initWithNSString_withByte_withOrgJodaTimeDurationFieldType_withOrgJodaTimeDurationFieldType_(@"clockhourOfDay", OrgJodaTimeDateTimeFieldType_CLOCKHOUR_OF_DAY, OrgJodaTimeDurationFieldType_hours(), OrgJodaTimeDurationFieldType_days());
    OrgJodaTimeDateTimeFieldType_HOUR_OF_DAY_TYPE = new_OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType_initWithNSString_withByte_withOrgJodaTimeDurationFieldType_withOrgJodaTimeDurationFieldType_(@"hourOfDay", OrgJodaTimeDateTimeFieldType_HOUR_OF_DAY, OrgJodaTimeDurationFieldType_hours(), OrgJodaTimeDurationFieldType_days());
    OrgJodaTimeDateTimeFieldType_MINUTE_OF_DAY_TYPE = new_OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType_initWithNSString_withByte_withOrgJodaTimeDurationFieldType_withOrgJodaTimeDurationFieldType_(@"minuteOfDay", OrgJodaTimeDateTimeFieldType_MINUTE_OF_DAY, OrgJodaTimeDurationFieldType_minutes(), OrgJodaTimeDurationFieldType_days());
    OrgJodaTimeDateTimeFieldType_MINUTE_OF_HOUR_TYPE = new_OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType_initWithNSString_withByte_withOrgJodaTimeDurationFieldType_withOrgJodaTimeDurationFieldType_(@"minuteOfHour", OrgJodaTimeDateTimeFieldType_MINUTE_OF_HOUR, OrgJodaTimeDurationFieldType_minutes(), OrgJodaTimeDurationFieldType_hours());
    OrgJodaTimeDateTimeFieldType_SECOND_OF_DAY_TYPE = new_OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType_initWithNSString_withByte_withOrgJodaTimeDurationFieldType_withOrgJodaTimeDurationFieldType_(@"secondOfDay", OrgJodaTimeDateTimeFieldType_SECOND_OF_DAY, OrgJodaTimeDurationFieldType_seconds(), OrgJodaTimeDurationFieldType_days());
    OrgJodaTimeDateTimeFieldType_SECOND_OF_MINUTE_TYPE = new_OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType_initWithNSString_withByte_withOrgJodaTimeDurationFieldType_withOrgJodaTimeDurationFieldType_(@"secondOfMinute", OrgJodaTimeDateTimeFieldType_SECOND_OF_MINUTE, OrgJodaTimeDurationFieldType_seconds(), OrgJodaTimeDurationFieldType_minutes());
    OrgJodaTimeDateTimeFieldType_MILLIS_OF_DAY_TYPE = new_OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType_initWithNSString_withByte_withOrgJodaTimeDurationFieldType_withOrgJodaTimeDurationFieldType_(@"millisOfDay", OrgJodaTimeDateTimeFieldType_MILLIS_OF_DAY, OrgJodaTimeDurationFieldType_millis(), OrgJodaTimeDurationFieldType_days());
    OrgJodaTimeDateTimeFieldType_MILLIS_OF_SECOND_TYPE = new_OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType_initWithNSString_withByte_withOrgJodaTimeDurationFieldType_withOrgJodaTimeDurationFieldType_(@"millisOfSecond", OrgJodaTimeDateTimeFieldType_MILLIS_OF_SECOND, OrgJodaTimeDurationFieldType_millis(), OrgJodaTimeDurationFieldType_seconds());
    J2OBJC_SET_INITIALIZED(OrgJodaTimeDateTimeFieldType)
  }
}

@end

void OrgJodaTimeDateTimeFieldType_initWithNSString_(OrgJodaTimeDateTimeFieldType *self, NSString *name) {
  NSObject_init(self);
  self->iName_ = name;
}

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_millisOfSecond() {
  OrgJodaTimeDateTimeFieldType_initialize();
  return OrgJodaTimeDateTimeFieldType_MILLIS_OF_SECOND_TYPE;
}

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_millisOfDay() {
  OrgJodaTimeDateTimeFieldType_initialize();
  return OrgJodaTimeDateTimeFieldType_MILLIS_OF_DAY_TYPE;
}

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_secondOfMinute() {
  OrgJodaTimeDateTimeFieldType_initialize();
  return OrgJodaTimeDateTimeFieldType_SECOND_OF_MINUTE_TYPE;
}

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_secondOfDay() {
  OrgJodaTimeDateTimeFieldType_initialize();
  return OrgJodaTimeDateTimeFieldType_SECOND_OF_DAY_TYPE;
}

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_minuteOfHour() {
  OrgJodaTimeDateTimeFieldType_initialize();
  return OrgJodaTimeDateTimeFieldType_MINUTE_OF_HOUR_TYPE;
}

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_minuteOfDay() {
  OrgJodaTimeDateTimeFieldType_initialize();
  return OrgJodaTimeDateTimeFieldType_MINUTE_OF_DAY_TYPE;
}

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_hourOfDay() {
  OrgJodaTimeDateTimeFieldType_initialize();
  return OrgJodaTimeDateTimeFieldType_HOUR_OF_DAY_TYPE;
}

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_clockhourOfDay() {
  OrgJodaTimeDateTimeFieldType_initialize();
  return OrgJodaTimeDateTimeFieldType_CLOCKHOUR_OF_DAY_TYPE;
}

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_hourOfHalfday() {
  OrgJodaTimeDateTimeFieldType_initialize();
  return OrgJodaTimeDateTimeFieldType_HOUR_OF_HALFDAY_TYPE;
}

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_clockhourOfHalfday() {
  OrgJodaTimeDateTimeFieldType_initialize();
  return OrgJodaTimeDateTimeFieldType_CLOCKHOUR_OF_HALFDAY_TYPE;
}

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_halfdayOfDay() {
  OrgJodaTimeDateTimeFieldType_initialize();
  return OrgJodaTimeDateTimeFieldType_HALFDAY_OF_DAY_TYPE;
}

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_dayOfWeek() {
  OrgJodaTimeDateTimeFieldType_initialize();
  return OrgJodaTimeDateTimeFieldType_DAY_OF_WEEK_TYPE;
}

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_dayOfMonth() {
  OrgJodaTimeDateTimeFieldType_initialize();
  return OrgJodaTimeDateTimeFieldType_DAY_OF_MONTH_TYPE;
}

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_dayOfYear() {
  OrgJodaTimeDateTimeFieldType_initialize();
  return OrgJodaTimeDateTimeFieldType_DAY_OF_YEAR_TYPE;
}

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_weekOfWeekyear() {
  OrgJodaTimeDateTimeFieldType_initialize();
  return OrgJodaTimeDateTimeFieldType_WEEK_OF_WEEKYEAR_TYPE;
}

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_weekyear() {
  OrgJodaTimeDateTimeFieldType_initialize();
  return OrgJodaTimeDateTimeFieldType_WEEKYEAR_TYPE;
}

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_weekyearOfCentury() {
  OrgJodaTimeDateTimeFieldType_initialize();
  return OrgJodaTimeDateTimeFieldType_WEEKYEAR_OF_CENTURY_TYPE;
}

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_monthOfYear() {
  OrgJodaTimeDateTimeFieldType_initialize();
  return OrgJodaTimeDateTimeFieldType_MONTH_OF_YEAR_TYPE;
}

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_year() {
  OrgJodaTimeDateTimeFieldType_initialize();
  return OrgJodaTimeDateTimeFieldType_YEAR_TYPE;
}

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_yearOfEra() {
  OrgJodaTimeDateTimeFieldType_initialize();
  return OrgJodaTimeDateTimeFieldType_YEAR_OF_ERA_TYPE;
}

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_yearOfCentury() {
  OrgJodaTimeDateTimeFieldType_initialize();
  return OrgJodaTimeDateTimeFieldType_YEAR_OF_CENTURY_TYPE;
}

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_centuryOfEra() {
  OrgJodaTimeDateTimeFieldType_initialize();
  return OrgJodaTimeDateTimeFieldType_CENTURY_OF_ERA_TYPE;
}

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_era() {
  OrgJodaTimeDateTimeFieldType_initialize();
  return OrgJodaTimeDateTimeFieldType_ERA_TYPE;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeDateTimeFieldType)

@implementation OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType

- (instancetype)initWithNSString:(NSString *)name
                        withByte:(jbyte)ordinal
withOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)unitType
withOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)rangeType {
  OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType_initWithNSString_withByte_withOrgJodaTimeDurationFieldType_withOrgJodaTimeDurationFieldType_(self, name, ordinal, unitType, rangeType);
  return self;
}

- (OrgJodaTimeDurationFieldType *)getDurationType {
  return iUnitType_;
}

- (OrgJodaTimeDurationFieldType *)getRangeDurationType {
  return iRangeType_;
}

- (jboolean)isEqual:(id)obj {
  if (self == obj) {
    return true;
  }
  if ([obj isKindOfClass:[OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType class]]) {
    return iOrdinal_ == ((OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType *) nil_chk(((OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType *) cast_chk(obj, [OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType class]))))->iOrdinal_;
  }
  return false;
}

- (NSUInteger)hash {
  return (JreLShift32(1, iOrdinal_));
}

- (OrgJodaTimeDateTimeField *)getFieldWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology {
  chronology = OrgJodaTimeDateTimeUtils_getChronologyWithOrgJodaTimeChronology_(chronology);
  switch (iOrdinal_) {
    case OrgJodaTimeDateTimeFieldType_ERA:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) era];
    case OrgJodaTimeDateTimeFieldType_YEAR_OF_ERA:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) yearOfEra];
    case OrgJodaTimeDateTimeFieldType_CENTURY_OF_ERA:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) centuryOfEra];
    case OrgJodaTimeDateTimeFieldType_YEAR_OF_CENTURY:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) yearOfCentury];
    case OrgJodaTimeDateTimeFieldType_YEAR:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) year];
    case OrgJodaTimeDateTimeFieldType_DAY_OF_YEAR:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) dayOfYear];
    case OrgJodaTimeDateTimeFieldType_MONTH_OF_YEAR:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) monthOfYear];
    case OrgJodaTimeDateTimeFieldType_DAY_OF_MONTH:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) dayOfMonth];
    case OrgJodaTimeDateTimeFieldType_WEEKYEAR_OF_CENTURY:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) weekyearOfCentury];
    case OrgJodaTimeDateTimeFieldType_WEEKYEAR:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) weekyear];
    case OrgJodaTimeDateTimeFieldType_WEEK_OF_WEEKYEAR:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) weekOfWeekyear];
    case OrgJodaTimeDateTimeFieldType_DAY_OF_WEEK:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) dayOfWeek];
    case OrgJodaTimeDateTimeFieldType_HALFDAY_OF_DAY:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) halfdayOfDay];
    case OrgJodaTimeDateTimeFieldType_HOUR_OF_HALFDAY:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) hourOfHalfday];
    case OrgJodaTimeDateTimeFieldType_CLOCKHOUR_OF_HALFDAY:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) clockhourOfHalfday];
    case OrgJodaTimeDateTimeFieldType_CLOCKHOUR_OF_DAY:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) clockhourOfDay];
    case OrgJodaTimeDateTimeFieldType_HOUR_OF_DAY:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) hourOfDay];
    case OrgJodaTimeDateTimeFieldType_MINUTE_OF_DAY:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) minuteOfDay];
    case OrgJodaTimeDateTimeFieldType_MINUTE_OF_HOUR:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) minuteOfHour];
    case OrgJodaTimeDateTimeFieldType_SECOND_OF_DAY:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) secondOfDay];
    case OrgJodaTimeDateTimeFieldType_SECOND_OF_MINUTE:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) secondOfMinute];
    case OrgJodaTimeDateTimeFieldType_MILLIS_OF_DAY:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) millisOfDay];
    case OrgJodaTimeDateTimeFieldType_MILLIS_OF_SECOND:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) millisOfSecond];
    default:
    @throw new_JavaLangInternalError_init();
  }
}

- (id)readResolve {
  switch (iOrdinal_) {
    case OrgJodaTimeDateTimeFieldType_ERA:
    return JreLoadStatic(OrgJodaTimeDateTimeFieldType, ERA_TYPE);
    case OrgJodaTimeDateTimeFieldType_YEAR_OF_ERA:
    return JreLoadStatic(OrgJodaTimeDateTimeFieldType, YEAR_OF_ERA_TYPE);
    case OrgJodaTimeDateTimeFieldType_CENTURY_OF_ERA:
    return JreLoadStatic(OrgJodaTimeDateTimeFieldType, CENTURY_OF_ERA_TYPE);
    case OrgJodaTimeDateTimeFieldType_YEAR_OF_CENTURY:
    return JreLoadStatic(OrgJodaTimeDateTimeFieldType, YEAR_OF_CENTURY_TYPE);
    case OrgJodaTimeDateTimeFieldType_YEAR:
    return JreLoadStatic(OrgJodaTimeDateTimeFieldType, YEAR_TYPE);
    case OrgJodaTimeDateTimeFieldType_DAY_OF_YEAR:
    return JreLoadStatic(OrgJodaTimeDateTimeFieldType, DAY_OF_YEAR_TYPE);
    case OrgJodaTimeDateTimeFieldType_MONTH_OF_YEAR:
    return JreLoadStatic(OrgJodaTimeDateTimeFieldType, MONTH_OF_YEAR_TYPE);
    case OrgJodaTimeDateTimeFieldType_DAY_OF_MONTH:
    return JreLoadStatic(OrgJodaTimeDateTimeFieldType, DAY_OF_MONTH_TYPE);
    case OrgJodaTimeDateTimeFieldType_WEEKYEAR_OF_CENTURY:
    return JreLoadStatic(OrgJodaTimeDateTimeFieldType, WEEKYEAR_OF_CENTURY_TYPE);
    case OrgJodaTimeDateTimeFieldType_WEEKYEAR:
    return JreLoadStatic(OrgJodaTimeDateTimeFieldType, WEEKYEAR_TYPE);
    case OrgJodaTimeDateTimeFieldType_WEEK_OF_WEEKYEAR:
    return JreLoadStatic(OrgJodaTimeDateTimeFieldType, WEEK_OF_WEEKYEAR_TYPE);
    case OrgJodaTimeDateTimeFieldType_DAY_OF_WEEK:
    return JreLoadStatic(OrgJodaTimeDateTimeFieldType, DAY_OF_WEEK_TYPE);
    case OrgJodaTimeDateTimeFieldType_HALFDAY_OF_DAY:
    return JreLoadStatic(OrgJodaTimeDateTimeFieldType, HALFDAY_OF_DAY_TYPE);
    case OrgJodaTimeDateTimeFieldType_HOUR_OF_HALFDAY:
    return JreLoadStatic(OrgJodaTimeDateTimeFieldType, HOUR_OF_HALFDAY_TYPE);
    case OrgJodaTimeDateTimeFieldType_CLOCKHOUR_OF_HALFDAY:
    return JreLoadStatic(OrgJodaTimeDateTimeFieldType, CLOCKHOUR_OF_HALFDAY_TYPE);
    case OrgJodaTimeDateTimeFieldType_CLOCKHOUR_OF_DAY:
    return JreLoadStatic(OrgJodaTimeDateTimeFieldType, CLOCKHOUR_OF_DAY_TYPE);
    case OrgJodaTimeDateTimeFieldType_HOUR_OF_DAY:
    return JreLoadStatic(OrgJodaTimeDateTimeFieldType, HOUR_OF_DAY_TYPE);
    case OrgJodaTimeDateTimeFieldType_MINUTE_OF_DAY:
    return JreLoadStatic(OrgJodaTimeDateTimeFieldType, MINUTE_OF_DAY_TYPE);
    case OrgJodaTimeDateTimeFieldType_MINUTE_OF_HOUR:
    return JreLoadStatic(OrgJodaTimeDateTimeFieldType, MINUTE_OF_HOUR_TYPE);
    case OrgJodaTimeDateTimeFieldType_SECOND_OF_DAY:
    return JreLoadStatic(OrgJodaTimeDateTimeFieldType, SECOND_OF_DAY_TYPE);
    case OrgJodaTimeDateTimeFieldType_SECOND_OF_MINUTE:
    return JreLoadStatic(OrgJodaTimeDateTimeFieldType, SECOND_OF_MINUTE_TYPE);
    case OrgJodaTimeDateTimeFieldType_MILLIS_OF_DAY:
    return JreLoadStatic(OrgJodaTimeDateTimeFieldType, MILLIS_OF_DAY_TYPE);
    case OrgJodaTimeDateTimeFieldType_MILLIS_OF_SECOND:
    return JreLoadStatic(OrgJodaTimeDateTimeFieldType, MILLIS_OF_SECOND_TYPE);
    default:
    return self;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDurationFieldType;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDurationFieldType;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 3, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeDateTimeField;", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withByte:withOrgJodaTimeDurationFieldType:withOrgJodaTimeDurationFieldType:);
  methods[1].selector = @selector(getDurationType);
  methods[2].selector = @selector(getRangeDurationType);
  methods[3].selector = @selector(isEqual:);
  methods[4].selector = @selector(hash);
  methods[5].selector = @selector(getFieldWithOrgJodaTimeChronology:);
  methods[6].selector = @selector(readResolve);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "iOrdinal_", "B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "iUnitType_", "LOrgJodaTimeDurationFieldType;", .constantValue.asLong = 0, 0x92, -1, -1, -1, -1 },
    { "iRangeType_", "LOrgJodaTimeDurationFieldType;", .constantValue.asLong = 0, 0x92, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;BLOrgJodaTimeDurationFieldType;LOrgJodaTimeDurationFieldType;", "equals", "LNSObject;", "hashCode", "getField", "LOrgJodaTimeChronology;", "LOrgJodaTimeDateTimeFieldType;" };
  static const J2ObjcClassInfo _OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType = { "StandardDateTimeFieldType", "org.joda.time", ptrTable, methods, fields, 7, 0xa, 7, 4, 6, -1, -1, -1, -1 };
  return &_OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType;
}

@end

void OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType_initWithNSString_withByte_withOrgJodaTimeDurationFieldType_withOrgJodaTimeDurationFieldType_(OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType *self, NSString *name, jbyte ordinal, OrgJodaTimeDurationFieldType *unitType, OrgJodaTimeDurationFieldType *rangeType) {
  OrgJodaTimeDateTimeFieldType_initWithNSString_(self, name);
  self->iOrdinal_ = ordinal;
  self->iUnitType_ = unitType;
  self->iRangeType_ = rangeType;
}

OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType *new_OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType_initWithNSString_withByte_withOrgJodaTimeDurationFieldType_withOrgJodaTimeDurationFieldType_(NSString *name, jbyte ordinal, OrgJodaTimeDurationFieldType *unitType, OrgJodaTimeDurationFieldType *rangeType) {
  J2OBJC_NEW_IMPL(OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType, initWithNSString_withByte_withOrgJodaTimeDurationFieldType_withOrgJodaTimeDurationFieldType_, name, ordinal, unitType, rangeType)
}

OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType *create_OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType_initWithNSString_withByte_withOrgJodaTimeDurationFieldType_withOrgJodaTimeDurationFieldType_(NSString *name, jbyte ordinal, OrgJodaTimeDurationFieldType *unitType, OrgJodaTimeDurationFieldType *rangeType) {
  J2OBJC_CREATE_IMPL(OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType, initWithNSString_withByte_withOrgJodaTimeDurationFieldType_withOrgJodaTimeDurationFieldType_, name, ordinal, unitType, rangeType)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType)
