//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/eric/repos/360-j2objc/joda-time/build/mainTranslationExtraction/org/joda/time/IllegalInstantException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IllegalInstantException")
#ifdef RESTRICT_IllegalInstantException
#define INCLUDE_ALL_IllegalInstantException 0
#else
#define INCLUDE_ALL_IllegalInstantException 1
#endif
#undef RESTRICT_IllegalInstantException

#if !defined (OrgJodaTimeIllegalInstantException_) && (INCLUDE_ALL_IllegalInstantException || defined(INCLUDE_OrgJodaTimeIllegalInstantException))
#define OrgJodaTimeIllegalInstantException_

#define RESTRICT_JavaLangIllegalArgumentException 1
#define INCLUDE_JavaLangIllegalArgumentException 1
#include "java/lang/IllegalArgumentException.h"

@interface OrgJodaTimeIllegalInstantException : JavaLangIllegalArgumentException

#pragma mark Public

- (instancetype)initWithLong:(jlong)instantLocal
                withNSString:(NSString *)zoneId;

- (instancetype)initWithNSString:(NSString *)message;

+ (jboolean)isIllegalInstantWithNSException:(NSException *)ex;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeIllegalInstantException)

FOUNDATION_EXPORT void OrgJodaTimeIllegalInstantException_initWithNSString_(OrgJodaTimeIllegalInstantException *self, NSString *message);

FOUNDATION_EXPORT OrgJodaTimeIllegalInstantException *new_OrgJodaTimeIllegalInstantException_initWithNSString_(NSString *message) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeIllegalInstantException *create_OrgJodaTimeIllegalInstantException_initWithNSString_(NSString *message);

FOUNDATION_EXPORT void OrgJodaTimeIllegalInstantException_initWithLong_withNSString_(OrgJodaTimeIllegalInstantException *self, jlong instantLocal, NSString *zoneId);

FOUNDATION_EXPORT OrgJodaTimeIllegalInstantException *new_OrgJodaTimeIllegalInstantException_initWithLong_withNSString_(jlong instantLocal, NSString *zoneId) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeIllegalInstantException *create_OrgJodaTimeIllegalInstantException_initWithLong_withNSString_(jlong instantLocal, NSString *zoneId);

FOUNDATION_EXPORT jboolean OrgJodaTimeIllegalInstantException_isIllegalInstantWithNSException_(NSException *ex);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeIllegalInstantException)

#endif

#pragma pop_macro("INCLUDE_ALL_IllegalInstantException")
